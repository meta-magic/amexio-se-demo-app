{"version":3,"sources":["webpack:///../rina-lib/src/lib/components/appointmentdetails/appointment.confirmation.html","webpack:///../rina-lib/src/lib/components/appointmentdetails/appointment.confirmation.ts","webpack:///../rina-lib/src/lib/components/before-confirm/before.confirm.component.html","webpack:///../rina-lib/src/lib/components/before-confirm/before.confirm.component.ts","webpack:///../rina-lib/src/lib/components/confirmation/service.confirmation.html","webpack:///../rina-lib/src/lib/components/confirmation/service.confirmation.ts","webpack:///../rina-lib/src/lib/components/content-card/content.card.component.html","webpack:///../rina-lib/src/lib/components/content-card/content.card.component.ts","webpack:///../rina-lib/src/lib/components/customer-vehicle-list/customer.vehiclelist.component.html","webpack:///../rina-lib/src/lib/components/customer-vehicle-list/customer.vehiclelist.component.ts","webpack:///../rina-lib/src/lib/components/preferred-location/preferred-location.component.html","webpack:///../rina-lib/src/lib/components/preferred-location/preferred.location.component.ts","webpack:///../rina-lib/src/lib/components/property-grid/propertygrid.component.html","webpack:///../rina-lib/src/lib/components/property-grid/propertygrid.component.ts","webpack:///../rina-lib/src/lib/components/service-booking/service.availiblity-lib.component.html","webpack:///../rina-lib/src/lib/components/service-booking/service.availiblity-lib.component.ts","webpack:///../rina-lib/src/lib/components/service-job-type/jobtype.component.html","webpack:///../rina-lib/src/lib/components/service-job-type/jobtype.component.ts","webpack:///../rina-lib/src/lib/components/step-box/step-box.component.html","webpack:///../rina-lib/src/lib/components/step-box/step-box.component.ts","webpack:///../rina-lib/src/lib/model/service.availiblity.model.ts","webpack:///../rina-lib/src/lib/model/shared/base.model.ts","webpack:///../rina-lib/src/lib/model/shared/daterange.model.ts","webpack:///../rina-lib/src/lib/model/shared/location.model.ts","webpack:///../rina-lib/src/lib/model/shared/personal.details.model.ts","webpack:///../rina-lib/src/lib/model/shared/propertygrid.model.ts","webpack:///../rina-lib/src/lib/rina-lib.components.ts","webpack:///../rina-lib/src/lib/rina-lib.module.ts","webpack:///../rina-lib/src/lib/services/alfahim/personal.details.service.ts","webpack:///../rina-lib/src/lib/services/alfahim/window.toggle.service.ts","webpack:///../rina-lib/src/lib/services/bookingavailable/service.booking.service.ts","webpack:///../rina-lib/src/lib/services/service.constant.ts","webpack:///../rina-lib/src/lib/services/servicebooking/service.booking.service.ts","webpack:///../rina-lib/src/lib/services/shared/common.service.ts","webpack:///../rina-lib/src/lib/services/shared/http.service.ts","webpack:///../rina-lib/src/lib/services/shared/notification-loader.service.ts","webpack:///../rina-lib/src/public_api.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/feature-component/company-logo/company.logo.component.html","webpack:///./src/app/feature-component/company-logo/company.logo.component.ts","webpack:///./src/app/feature-component/searchbox/searchbox.component.html","webpack:///./src/app/feature-component/searchbox/searchbox.component.ts","webpack:///./src/app/feature-component/service-list/service-list.component.html","webpack:///./src/app/feature-component/service-list/service.list.component.ts","webpack:///./src/app/feature-component/vehicle-details/vehicle.details.component.html","webpack:///./src/app/feature-component/vehicle-details/vehicle.details.component.ts","webpack:///./src/app/models/customer.details.model.ts","webpack:///./src/app/models/customer.profile.model.ts","webpack:///./src/app/rina-home/rina-home.component.html","webpack:///./src/app/rina-home/rina-home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"\\n<amexio-card-ce>\\n  <amexio-header-ce>\\n    <amexio-label size=\\\"medium-bold\\\">\\n      THANK YOU\\n    </amexio-label>\\n  </amexio-header-ce>\\n  <rina-step-box [active-index]=\\\"8\\\"></rina-step-box>\\n  <amexio-body-ce [align]=\\\"'start'\\\">\\n    <amexio-row>\\n      <amexio-column size=\\\"3\\\"></amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n        <amexio-label>{{appointmentMsg}}</amexio-label><br /><br />\\n        <amexio-label>Service Location:</amexio-label><br />\\n        <amexio-label>Emirates Motor Company</amexio-label><br />\\n        <amexio-label>M5, intersection, 17th Street</amexio-label><br />\\n        <amexio-label>Phone: +91.0987654321</amexio-label><br /><br />\\n      </amexio-column>\\n      <amexio-column size=\\\"3\\\"></amexio-column>\\n    </amexio-row>\\n  </amexio-body-ce>\\n  <amexio-action-ce [align]=\\\"'flex-end'\\\" [border-top]=\\\"true\\\">\\n    <amexio-button [label]=\\\"'Close'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Close'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"close($event)\\\">\\n    </amexio-button>\\n  </amexio-action-ce>\\n</amexio-card-ce>\\n\"","import { PersonalDetailsService } from 'projects/rina-lib/src/lib/services/alfahim/personal.details.service';\nimport {Component, Input} from '@angular/core';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\nimport { Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'appointment-confirmation',\n    templateUrl: './appointment.confirmation.html'\n})\nexport class AppoinmentConfirmationComponent {\n\n    serviceAvailibilityModel: ServiceAvailibilityModel;\n    @Output() onConfirm: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input('appointment-msg') appointmentMsg: string;\n\n    constructor(private service: PersonalDetailsService) {\n      this.serviceAvailibilityModel = this.service.getPeferredLocation();\n    }\n\n    close(event: any) {\n      this.onConfirm.emit(event);\n    }\n}\n","module.exports = \"\\n\\n<amexio-card-ce>\\n  <amexio-header-ce>\\n    <amexio-label size=\\\"medium-bold\\\">\\n      BEFORE YOU CONFIRM\\n    </amexio-label>\\n  </amexio-header-ce>\\n  <rina-step-box [active-index]=\\\"6\\\"></rina-step-box>\\n\\n  <amexio-body-ce [align]=\\\"'start'\\\">\\n    <amexio-label [size]=\\\"'medium'\\\">We've got some iconic Lifestyle Accessories just for you!</amexio-label>\\n    <amexio-layout-columns [fit]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'start'\\\">\\n      <amexio-layout-item *ngFor=\\\"let accessiories of accessioriesData\\\" style=\\\"min-width:24%;\\\">\\n        <content-card [image-url]=\\\"'https://demo.amexio.org/alfahim/'+accessiories.imageUrl\\\" [description]=\\\"accessiories.description\\\">\\n          <amexio-button [label]=\\\"'SHOW ME'\\\" [type]=\\\"'green'\\\" [tooltip]=\\\"'show me'\\\">\\n          </amexio-button>\\n        </content-card>\\n      </amexio-layout-item>\\n    </amexio-layout-columns>\\n  </amexio-body-ce>\\n  <amexio-action-ce [align]=\\\"'flex-end'\\\" [border-top]=\\\"true\\\">\\n    <amexio-toolbar>\\n      <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n        <amexio-button [label]=\\\"'Cancel'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'cancel'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onCancel($event)\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n      <amexio-toolbar-item position-right style=\\\"padding-left: 5px;\\\">\\n        <amexio-button [label]=\\\"'Back'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Back'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onBackHandle($event)\\\">\\n        </amexio-button>\\n        <amexio-button [label]=\\\"'SKIP'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'skip'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onClickHandle($event)\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n    </amexio-toolbar>\\n  </amexio-action-ce>\\n</amexio-card-ce>\\n\"","/**\n * Created by dattaram on 24/1/19.\n */\nimport {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'before-confirm',\n  templateUrl: 'before.confirm.component.html'\n})\n\nexport class BeforeConfirmComponent implements OnInit {\n\n  accessioriesData: any[] = [];\n\n  @Output() onBeforeConfirmClick: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onBeforeBack: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onClose: EventEmitter<any> = new EventEmitter<any>();\n  steps: any[]= [];\n  constructor() {\n    this.steps = ['fa-user ','fa-home','fa-shopping-cart','fa fa-money']\n  }\n\n  ngOnInit() {\n    this.accessioriesData = [\n      {\n        \"imageUrl\":\"assets/images/mbwatch.jpg\",\n        \"description\": \"Men's Black Edition Business chronograph watch. Stainless steel case with black PVD coating. Black dial with blue highlights. Stainless steel hands with luminous detail. Stainless steel bracelet strap with black PVD coating. Stopwatch function. Water-resistant to 10 ATM. Diameter 43 mm. Ronda 5021 quartz chronograph movement. Swiss made.\"\n      },\n      {\n        \"imageUrl\":\"assets/images/mbcap.jpg\",\n        \"description\":\"Basic cap. 100% cotton. Metal clasp for adjusting fit. Black B6 695 2242. Black/white B6 695 2243. Navy B6 695 2244\"\n      },\n      {\n        \"imageUrl\":\"assets/images/mbcar.jpg\",\n        \"description\":\"The annual endurance race of the Mille Miglia attracted a very impressive group of competitors in 1955. Mercedes-Benz had big plans up its sleeve, so it sent over a fleet of four racing cars, all of the type 300 SLR, which was to make its debut here. Piloted by world-famous top drivers, the 300 SLR was intended to be a passport to victory over such hard competitors as Ferrari, Maserati, and Aston Martin. Half of Italy was on its feet to follow the national racing highlight of the year.\"\n      },\n      {\n        \"imageUrl\":\"assets/images/mbkey.png\",\n        \"description\":\"This practical key ring in robust stainless steel echoes the illuminated version of the central Mercedes star. The black PVD-coated background features a diamond pattern while the inner contours of the Mercedes star have a luminous finish which, after exposure to daylight or an artificial light source, glows blue in the dark for up to four hours. The key ring, which measures approx. 9 cm in length, features a flat split ring, engraved with Mercedes-Benz, and three mini split rings for quick removal and replacement of individual keys.\"\n      }\n    ];\n  }\n\n  onClickHandle(event: any) {\n   this.onBeforeConfirmClick.emit(event);\n  }\n\n  onBackHandle(event: any) {\n    this.onBeforeBack.emit(event);\n  }\n  onCancel(event: any){\n    this.onClose.emit(event);\n  }\n}\n","module.exports = \"<amexio-spinner [show]=\\\"showLoader\\\" [type]=\\\"'rectanglebounce'\\\" [vertical-position]=\\\"'center'\\\" [horizontal-position]=\\\"'center'\\\" [color]=\\\"'yellow'\\\">\\n</amexio-spinner>\\n\\n\\n\\n<amexio-card-ce class=\\\"serviceconf\\\">\\n  <amexio-header-ce>\\n    <amexio-label size=\\\"medium-bold\\\">\\n      PLEASE CONFIRM DETAILS\\n    </amexio-label>\\n  </amexio-header-ce>\\n  <rina-step-box [active-index]=\\\"7\\\"></rina-step-box>\\n  <amexio-body-ce [align]=\\\"'start'\\\">\\n    <amexio-layout-columns [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'end'\\\">\\n            <table>\\n              <tr style=\\\"vertical-align: top;text-align: left\\\" *ngFor=\\\"let data of serviceConfirmData\\\">\\n                <td>\\n                  <b>{{data.fieldName}}</b>\\n                </td>\\n                <td style=\\\"word-break: break-all;max-width: 250px\\\">\\n                  {{data.fieldValue}}\\n                </td>\\n              </tr>\\n\\n              <tr style=\\\"vertical-align: top;text-align: left\\\">\\n                <td>\\n                  <b>Service Type</b>\\n                </td>\\n                <td style=\\\"word-break: break-all;max-width: 250px\\\">\\n                  <ng-container *ngIf=\\\"extraServiceData && extraServiceData.selectedJobType\\\">\\n                    <ng-container *ngFor=\\\"let type of extraServiceData.selectedJobType; let index=index\\\">\\n                      {{index+1}}. {{type.typeName}}<br>\\n                    </ng-container>\\n                  </ng-container>\\n                </td>\\n              </tr>\\n\\n              <tr style=\\\"vertical-align: top;text-align: left\\\" *ngIf=\\\"extraServiceData\\\">\\n                <td>\\n                  <b>Remarks</b>\\n                </td>\\n                <td style=\\\"word-break: break-all;max-width: 250px\\\">\\n                    {{extraServiceData.remarks}}\\n                </td>\\n              </tr>\\n            </table>\\n      <amexio-layout-item [fit]=\\\"true\\\">\\n        <amexio-google-map [initial-zoom-level]=\\\"8\\\" [initial-lat]=\\\"24.4086\\\" [initial-lng]=\\\"55.2701\\\" [height]=\\\"'100%'\\\" [data]=\\\"serviceStations\\\" [google-map-key]=\\\"'AIzaSyDKSPX97z-ndeh_Mgq3xkaML2Kp9AwHA9s'\\\">\\n        </amexio-google-map>\\n      </amexio-layout-item>\\n    </amexio-layout-columns>\\n\\n  </amexio-body-ce>\\n  <amexio-action-ce [align]=\\\"'flex-end'\\\" [border-top]=\\\"true\\\">\\n    <amexio-toolbar>\\n      <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n        <amexio-button [label]=\\\"'Cancel'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'cancel'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onCancel($event)\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n      <amexio-toolbar-item position-right style=\\\"padding-left: 5px;\\\">\\n        <amexio-button [label]=\\\"'Back'\\\" (onClick)=\\\"onBackClick()\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Proceed to preferred location'\\\" [size]=\\\"'large'\\\">\\n        </amexio-button>\\n        <amexio-button [label]=\\\"'Confirm'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Confirm'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"confirmAppointment($event)\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n    </amexio-toolbar>\\n  </amexio-action-ce>\\n</amexio-card-ce>\\n\\n\"","import { PersonalDetailsService } from 'projects/rina-lib/src/lib/services/alfahim/personal.details.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\nimport { LocationModel } from 'projects/rina-lib/src/lib/model/shared/location.model';\nimport { ServiceAssistantModel } from 'projects/rina-lib/src/lib/model/shared/serviceassistant.model';\nimport { Output, EventEmitter } from '@angular/core';\nimport { TimeModel, TimeUtil, GoogleMapOverlays } from 'amexio-ng-extensions';\nimport {PersonalDetails} from '../../model/shared/personal.details.model';\nimport {HttpService} from \"../../services/shared/http.service\";\nimport {PropertyGridModel} from \"../../model/shared/propertygrid.model\";\nimport {DatePipe} from \"@angular/common\";\n@Component({\n    selector: 'service-confirmation',\n    templateUrl: './service.confirmation.html'\n})\nexport class ServiceConfirmationComponent implements OnInit {\n\n    @Input('service-model') serviceModel: ServiceAvailibilityModel;\n    serviceLocations: LocationModel [] = [];\n    timeSlots: TimeModel [] = [];\n    assitantPerson: ServiceAssistantModel [] = [];\n    orderConfirm = true;\n    serviceStations: GoogleMapOverlays[] = [];\n    personalDetails: PersonalDetails;\n    extraServiceData = null;\n    showLoader = false;\n    serviceConfirmData: any[] = [];\n    @Output() onPrevious: EventEmitter<any> = new EventEmitter<any>();\n    @Output() onConfirm: EventEmitter<any> = new EventEmitter<any>();\n    @Output() onClose: EventEmitter<any> = new EventEmitter<any>();\n\n    totalTimeLeft: string;\n    constructor(private personalDetailsService: PersonalDetailsService,\n                private datePipe: DatePipe,\n                private _httpService: HttpService) {\n        this.personalDetails = new PersonalDetails();\n        if (this.personalDetailsService.getPersonalDetails()) {\n          this.personalDetails = this.personalDetailsService.getPersonalDetails();\n        }\n        this.extraServiceData = this.personalDetailsService.getExtraServiceData();\n    }\n\n  createServiceDataStructure() {\n    this.serviceConfirmData = [];\n    this.serviceConfirmData.push(new PropertyGridModel('Name', this.personalDetails.firstName + ' ' + this.personalDetails.surname));\n    this.serviceConfirmData.push(new PropertyGridModel('Booking Date', this.datePipe.transform(this.serviceModel.selectedSlotDate, 'MMM dd, yyyy')));\n    this.serviceConfirmData.push(new PropertyGridModel('Booking Time', this.serviceModel.selectedSlot.toString()));\n    this.serviceConfirmData.push(new PropertyGridModel('Assitant Name', this.serviceModel.assitantPersonName));\n    this.serviceConfirmData.push(new PropertyGridModel('Phone no', this.personalDetails.phone));\n    this.serviceConfirmData.push(new PropertyGridModel('Email Id', this.personalDetails.email));\n  }\n\n    ngOnInit(): void {\n      if (this.serviceModel) {\n        this.loadData();\n      }\n      this.serviceStations = [];\n      this.serviceStations.push(new GoogleMapOverlays(Number(this.serviceModel.locationModel.latitude), Number(this.serviceModel.locationModel.longitude), this.serviceModel.locationName + ', UAE', true, 'https://testapi.amexio.org/api/v5.5/assets/images/googlemap/mercgooglemarker.png', {country: 'United Arab Emirates', capital: 'Abu Dhabi'}));\n\n      this.createServiceDataStructure();\n\n    }\n    confirmAppointment(personalDetails: PersonalDetails) {\n      this.showLoader = true;\n      let response: any;\n      const requestBody = {\n        'profileDetails': this.personalDetailsService.getPersonalDetails(),\n        'orderDetails': this.personalDetailsService.getPeferredLocation()\n      };\n      this._httpService.post('booking/confirm', 'post', requestBody).subscribe(\n        (res) => {\n          response = res;\n        },\n        (err: any) => {\n          this.showLoader = false;\n        },\n        () => {\n          if (response.success) {\n            this.showLoader = false;\n            this.onConfirm.emit(personalDetails);\n          } else {\n            this.showLoader = false;\n          }\n        }\n      );\n    }\n\n\n\n    onBackClick() {\n      this.onPrevious.emit(this.serviceModel);\n    }\n\n    close(event: any) {\n      this.orderConfirm = false;\n    }\n\n    loadData() {\n      this.loadLocations();\n      this.loadAssitants();\n      this.loadWorkingSlots();\n    }\n    loadWorkingSlots() {\n      this.timeSlots = new TimeUtil().workingslot1();\n   }\n    loadAssitants() {\n      let response: any;\n      this.personalDetailsService.getAssitantList(this.serviceModel.location).subscribe(\n       res => {\n         response = res;\n       },\n       // tslint:disable-next-line:no-shadowed-variable\n       (error: any) => {\n         console.log('Invalid url');\n       },\n       () => {\n        this.assitantPerson = response;\n       }\n     );\n    }\n    loadLocations() {\n      let response: any;\n      this.personalDetailsService.getLocations().subscribe(\n       res => {\n         response = res;\n       },\n       // tslint:disable-next-line:no-shadowed-variable\n       (error: any) => {\n         console.log('Invalid url');\n       },\n       () => {\n        this.serviceLocations = response;\n       }\n     );\n    }\n\n\n    onCancel(event: any){\n      this.onClose.emit(event);\n    }\n}\n","module.exports = \"\\n<amexio-card-ce>\\n  <amexio-body-ce [align]=\\\"'start'\\\">\\n    <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'vertical'\\\" [alignment]=\\\"'space-between'\\\">\\n      <amexio-layout-item >\\n        <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'center'\\\">\\n          <amexio-layout-item [ngClass]=\\\"{'content-card': description}\\\">\\n            <amexio-image [path]=\\\"imageUrl\\\">\\n            </amexio-image>\\n            <br/>\\n            <amexio-label [size]=\\\"'medium-bold'\\\" *ngIf=\\\"title\\\">{{title}}</amexio-label>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n      </amexio-layout-item>\\n\\n      <amexio-layout-item style=\\\"max-height: 200px; overflow: auto;\\\">\\n        <rina-property-grid *ngIf=\\\"propertyData.length > 0\\\" [key-value-data]=\\\"propertyData\\\" [has-border]=\\\"false\\\"></rina-property-grid>\\n        <p *ngIf=\\\"description\\\">{{description}}</p>\\n      </amexio-layout-item>\\n    </amexio-layout-columns>\\n  </amexio-body-ce>\\n  <amexio-action-ce [align]=\\\"'flex-end'\\\" [border-top]=\\\"true\\\">\\n    <ng-content></ng-content>\\n  </amexio-action-ce>\\n</amexio-card-ce>\\n\"","/**\n * Created by dattaram on 24/1/19.\n */\n\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'content-card',\n  templateUrl: 'content.card.component.html'\n})\n\nexport class ContentCardComponent implements OnInit {\n\n  @Input('image-url') imageUrl: string;\n\n  @Input('title') title: string;\n\n  @Input('description') description: string;\n\n  @Input('property-data') propertyData: any[] = [];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n<amexio-card-ce>\\n  <amexio-header-ce>\\n    <amexio-label size=\\\"medium-bold\\\">\\n      QUICK BOOKING\\n    </amexio-label>\\n  </amexio-header-ce>\\n  <amexio-body-ce [align]=\\\"'start'\\\">\\n    <amexio-row>\\n      <amexio-column [size]=\\\"12\\\">\\n        <amexio-label [size]=\\\"'small-bold'\\\"> Please select vehicle you would like to get serviced: </amexio-label>\\n      </amexio-column><br/>\\n    </amexio-row>\\n    <amexio-row>\\n      <amexio-column [fit]=\\\"true\\\" [size]=\\\"4\\\" *ngFor=\\\"let vehicle of contentCardData\\\">\\n        <content-card [title]=\\\"vehicle.title\\\" [image-url]=\\\"vehicle.imageUrl\\\" [property-data]=\\\"vehicle.propertyData\\\">\\n          <div *ngIf=\\\"vehicle.vehicleMetadata.bu === 'CME'\\\">\\n            <amexio-label [font-color]=\\\"'red'\\\">Sorry, we are not accepting Service Bookings for CME Business Unit.</amexio-label>\\n          </div>\\n          <div *ngIf=\\\"vehicle.vehicleMetadata.bu != 'CME'\\\" class=\\\"inputgroup from-group\\\">\\n            <label for=\\\"{{vehicle.vehicleId}}\\\" [attr.aria-checked]=\\\"vehicle.selected\\\" [attr.aria-disabled]=\\\"(vehicle.vehicleMetadata.bu === 'CME')\\\" class=\\\"input-box-container\\\" style=\\\"padding-bottom:0px !important; margin: 5px !important\\\" (click)=\\\"selectVehicle(vehicle)\\\">\\n              Select Vehicle\\n              <input  style=\\\"top:0; left:0\\\" id=\\\"{{vehicle.vehicleId}}\\\" type=\\\"radio\\\"\\n                      name=\\\"selectvehicle\\\" [value]=\\\"vehicle.selected\\\"\\n                      [checked]=\\\"vehicle.selected\\\">\\n\\n              <span class=\\\"input-box-radiobox-label\\\"></span>\\n            </label>\\n          </div>\\n        </content-card>\\n      </amexio-column>\\n    </amexio-row>\\n\\n  </amexio-body-ce>\\n  <amexio-action-ce [align]=\\\"'flex-end'\\\" [border-top]=\\\"true\\\">\\n    <amexio-toolbar>\\n      <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n        <amexio-button [label]=\\\"'Cancel'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'cancel'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onCancel($event)\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n      <amexio-toolbar-item position-right style=\\\"padding-left: 5px;\\\">\\n        <amexio-button [label]=\\\"'Back'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Back'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onBackHandle($event)\\\">\\n        </amexio-button>\\n        <amexio-button [label]=\\\"'Next'\\\" [disabled]=\\\"selectedVehicle === null ? true : false\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Proceed to preferred location'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onClickHandle()\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n    </amexio-toolbar>\\n  </amexio-action-ce>\\n</amexio-card-ce>\\n\"","/**\n * Created by dattaram on 23/1/19.\n */\nimport {Component, EventEmitter, Input, Output, OnInit} from '@angular/core';\nimport {CustomerProfile, VehiclesInterface} from \"../../../../../rinaccm/src/app/models/customer.profile.model\";\nimport {PropertyGridModel} from \"../../model/shared/propertygrid.model\";\nimport {PersonalDetails} from \"../../model/shared/personal.details.model\";\nimport {PersonalDetailsService} from \"../../services/alfahim/personal.details.service\";\nimport {ServiceAvailibilityModel} from \"../../model/service.availiblity.model\";\n\n@Component({\n   selector: 'customer-vehicle-list',\n   templateUrl: './customer.vehiclelist.component.html'\n})\n\nexport class CustomerVehicleListComponent implements OnInit {\n\n  @Input('customer-profile') customerProfile: CustomerProfile;\n\n  contentCardData: any[] = [];\n\n  @Output() onVehicleListNext: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onBack: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onClose: EventEmitter<any> = new EventEmitter<any>();\n\n  selectedVehicle = null;\n\n  selected = false;\n\n\n  constructor(private _personalDetailsService: PersonalDetailsService) {}\n\n  ngOnInit() {\n    if (this.customerProfile && this.customerProfile.vehicles.length > 0) {\n      this.customerProfile.vehicles.forEach((vehicle: any) => {\n       this.contentCardData.push(\n         new ContentCardData(vehicle.vehicleDetail.image,\n           vehicle.vehicleDetail.modelName,\n           this.createVehiclePropertyStructure(vehicle),\n           vehicle\n         ));\n     });\n    }\n  }\n\n  selectVehicle(vehicle: ContentCardData) {\n    this.contentCardData.forEach((veh: any) => {\n      veh.selected = false;\n    });\n    vehicle.selected = true;\n    if (vehicle.selected) {\n      this.selectedVehicle = vehicle;\n    } else {\n      this.selectedVehicle = null;\n    }\n\n    this._personalDetailsService.setSelectedVehicleData(vehicle);\n  }\n\n  createVehiclePropertyStructure(vehicle: any): PropertyGridModel[] {\n    const vehicleKeyValuedata = [];\n    vehicleKeyValuedata.push(new PropertyGridModel('Model Year', vehicle.vehicleDetail.modelYear));\n    vehicleKeyValuedata.push(new PropertyGridModel('License Plate', vehicle.registrationNo));\n    return vehicleKeyValuedata;\n  }\n\n  onClickHandle() {\n    this.onVehicleListNext.emit(this.createPersonalDetails());\n  }\n\n  createPersonalDetails(): PersonalDetails  {\n    const personalDetails = new PersonalDetails();\n          personalDetails.firstName = this.customerProfile.firstName;\n          personalDetails.surname = this.customerProfile.lastName;\n          personalDetails.email = this.customerProfile.email;\n          personalDetails.phone = this.customerProfile.mobile;\n          personalDetails.perferredContact = this.customerProfile.preferredModeOfContact;\n          if (this.selectedVehicle != null) {\n            personalDetails.vehicleType = this.selectedVehicle.vehicleMetadata.vehicleDetail.vehicleClass;\n            personalDetails.modelYear = this.selectedVehicle.vehicleMetadata.vehicleDetail.modelYear;\n            personalDetails.registrationNumber = this.selectedVehicle.vehicleMetadata.registrationNo;\n          }\n\n    return personalDetails;\n\n  }\n\n  onBackHandle(event: any) {\n    this.onBack.emit(event);\n  }\n\n\n  onCancel(event: any){\n    this.onClose.emit(event);\n  }\n}\n\n\nexport class ContentCardData {\n  imageUrl: string;\n  title: string;\n  propertyData: PropertyGridModel[] = [];\n  selected: boolean;\n  vehicleMetadata: VehiclesInterface;\n\n  constructor(_imageUrl: string, _title: string, _propertyData: PropertyGridModel[], _vehicleMetadata: VehiclesInterface) {\n   this.imageUrl = _imageUrl;\n   this.title = _title;\n   this.propertyData = _propertyData;\n   this.selected = false;\n   this.vehicleMetadata = _vehicleMetadata;\n  }\n\n\n}\n","module.exports = \"\\n\\n<amexio-card-ce>\\n  <amexio-header-ce>\\n    <amexio-label size=\\\"medium-bold\\\">\\n      Preferred location\\n    </amexio-label>\\n  </amexio-header-ce>\\n  <rina-step-box [active-index]=\\\"4\\\"></rina-step-box>\\n  <amexio-body-ce [align]=\\\"'start'\\\">\\n\\n    <service-availiblity-lib #formgroup [service-model]=\\\"serviceModel\\\" [start-time]=\\\"10\\\" [end-time]=\\\"15\\\"></service-availiblity-lib>\\n\\n  </amexio-body-ce>\\n\\n  <amexio-action-ce [align]=\\\"'flex-end'\\\" [border-top]=\\\"true\\\">\\n    <amexio-toolbar>\\n      <amexio-toolbar-item position-right>\\n        <div class=\\\"amexio-checkbox-style\\\">\\n          <amexio-checkbox [field-label]=\\\"'Notify SA'\\\" [(ngModel)]=\\\"serviceModel.isNotifySA\\\">\\n          </amexio-checkbox>\\n        </div>\\n\\n      </amexio-toolbar-item>\\n      <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n        <amexio-button [label]=\\\"'Cancel'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'cancel'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onCancel($event)\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n      <amexio-toolbar-item position-right style=\\\"padding-left: 5px;\\\">\\n        <amexio-button [label]=\\\"'Back'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Proceed to personal profile'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"backClick($event)\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n      <amexio-toolbar-item position-right>\\n        <amexio-button [label]=\\\"'Schedule'\\\" [disabled]=\\\"!this.serviceModel.isValidate()\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Proceed to preferred location'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"scheduleAppointment()\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n    </amexio-toolbar>\\n  </amexio-action-ce>\\n\\n</amexio-card-ce>\\n\"","/**\n * Created by dattaram on 18/1/19.\n */\n\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ServiceAvailibilityModel} from \"../../model/service.availiblity.model\";\n\n@Component({\n  selector: 'preferred-location',\n  templateUrl: './preferred-location.component.html'\n})\n\nexport class PreferredLocationComponent implements OnInit {\n  @Input('service-model') serviceModel: ServiceAvailibilityModel;\n  @Input('Secondary-button')  secondaryButton = 'Back';\n  @Output() onNext: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onPrevious: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onClose: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() {\n    this.serviceModel = new ServiceAvailibilityModel();\n  }\n\n  ngOnInit() {}\n\n  scheduleAppointment() {\n    if(this.serviceModel.appointmentDate){\n      let todayDate =new  Date();\n      this.serviceModel.serviceTimeLeft = Math.round(Math.abs((this.serviceModel.selectedSlotDate.getTime()-todayDate.getTime())/(1000*60*60*24)));\n    }\n    this.onNext.emit(this.serviceModel);\n  }\n\n  backClick(event: any) {\n    this.onPrevious.emit(event);\n  }\n  onCancel(event: any){\n    this.onClose.emit(event);\n  }\n}\n","module.exports = \"<amexio-card [class.remove-border]=\\\"!hasBorder\\\" [header]=\\\"false\\\" [footer]=\\\"false\\\">\\n    <amexio-body>\\n        <amexio-layout-columns [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'end'\\\">\\n            <amexio-layout-item style=\\\"width: 20%\\\" *ngIf=\\\"hasImage\\\">\\n              <amexio-image [path]=\\\"image\\\" [filter]=\\\"'round'\\\">\\n              </amexio-image>\\n            </amexio-layout-item>\\n            <amexio-layout-item [fit]=\\\"true\\\">\\n              <table style=\\\"padding: 2px;\\\">\\n                <tr *ngFor=\\\"let item of data\\\">\\n                  <td>{{item.fieldName}}:</td>\\n                  <td style=\\\"word-break: break-all;\\\">{{item.fieldValue}}</td>\\n                </tr>\\n              </table>\\n            </amexio-layout-item>\\n          </amexio-layout-columns>\\n    </amexio-body>\\n</amexio-card>\\n\\n\\n\"","import { Component, Input } from \"@angular/core\";\nimport { PropertyGridModel } from \"../../model/shared/propertygrid.model\";\n\n@Component({\n    selector : 'rina-property-grid',\n    templateUrl : './propertygrid.component.html'\n})\nexport class PropertyGridComponnent {\n\n    @Input('key-value-data') data: PropertyGridModel[];\n\n    @Input('image') image: string;\n\n    @Input('has-image') hasImage = false;\n\n    @Input('has-border') hasBorder = true;\n}\n","module.exports = \"\\n    <amexio-layout-columns [orientation]=\\\"'horizontal'\\\" [fit]=\\\"true\\\" [alignment]=\\\"'start'\\\" [border]=\\\"false\\\">\\n      <amexio-layout-item >\\n        <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [fit]=\\\"true\\\" [alignment]=\\\"'start'\\\" [border]=\\\"false\\\">\\n          <amexio-layout-item>\\n            <amexio-dropdown [(ngModel)]=\\\"serviceModel.location\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\" [search]=\\\"true\\\" [place-holder]=\\\"'Select Location'\\\" name=\\\"location\\\" [field-label]=\\\"'Select Location'\\\" [data]=\\\"serviceLocations\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n                             [value-field]=\\\"'primaryKey'\\\" (onSingleSelect)=\\\"onLocationClick($event)\\\">\\n            </amexio-dropdown>\\n          </amexio-layout-item>\\n\\n          <amexio-layout-item *ngIf=\\\"_windowTService.appType != '1'; else notTime\\\">\\n            <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'start'\\\">\\n              <amexio-layout-item>\\n                <amexio-date-time-picker [field-label]=\\\"'Select Date'\\\" [min-date]=\\\"minDate\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" name=\\\"appointmentDate\\\" [min-date]=\\\"todayDate\\\" [(ngModel)]=\\\"serviceModel.appointmentDate\\\">\\n                </amexio-date-time-picker>\\n              </amexio-layout-item>\\n              <amexio-layout-item class=\\\"timebox-width\\\">\\n                  <amexio-dropdown [(ngModel)]=\\\"serviceModel.appointmentTime\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\" [search]=\\\"true\\\" (onSingleSelect)=\\\"setTime($event)\\\" [place-holder]=\\\"'Select Time'\\\" name=\\\"appointmentTime\\\" [field-label]=\\\"'Select time'\\\" [data]=\\\"timeSlots\\\" [display-field]=\\\"'time'\\\"\\n                                   [value-field]=\\\"'timeId'\\\">\\n                  </amexio-dropdown>\\n              </amexio-layout-item>\\n            </amexio-layout-columns>\\n          </amexio-layout-item>\\n\\n          <ng-template #notTime>\\n            <amexio-layout-item>\\n              <amexio-date-time-picker [field-label]=\\\"'Select Date'\\\" [min-date]=\\\"minDate\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" name=\\\"appointmentDate\\\" [min-date]=\\\"todayDate\\\" [(ngModel)]=\\\"serviceModel.appointmentDate\\\">\\n              </amexio-date-time-picker>\\n            </amexio-layout-item>\\n          </ng-template>\\n\\n\\n\\n\\n          <amexio-layout-item>\\n            <amexio-dropdown [(ngModel)]=\\\"serviceModel.assitantPersonId\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\" [search]=\\\"true\\\" [place-holder]=\\\"'Select SA'\\\" name=\\\"assitantPerson\\\" [field-label]=\\\"'Service Advisor (SA)'\\\" [data]=\\\"assitantPerson\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n                             [value-field]=\\\"'primaryKey'\\\" (onSingleSelect)=\\\"onAssitantClick($event)\\\">\\n            </amexio-dropdown>\\n          </amexio-layout-item>\\n\\n\\n\\n          <amexio-layout-item>\\n            <amexio-button [label]=\\\"'CHECK SA AVAILIBLITY'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'CHECK SA AVAILIBLITY'\\\" (onClick)=\\\"checkAvailiblity()\\\"></amexio-button>\\n          </amexio-layout-item>\\n\\n          <amexio-layout-item>\\n            <amexio-ee-appointment [height]=\\\"'200px'\\\"\\n                                   [available-slots-color]=\\\"'white'\\\"\\n                                   [available-slots-bg-color]=\\\"'#4CAF50'\\\"\\n                                   [selected-slot-bg-color]=\\\"'yellow'\\\"\\n                                   [selected-slot-color]=\\\"'green'\\\"\\n                                   [date]=\\\"serviceModel.appointmentDate\\\" [start-time]=\\\"serviceModel.appointmentTime\\\"\\n                                   [end-time]=\\\"endTime\\\" [available-slots]=\\\"availableslots\\\" (onSingleSelect)=\\\"onSlotSelection($event)\\\">\\n\\n            </amexio-ee-appointment>\\n\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n      </amexio-layout-item>\\n      <amexio-layout-item [fit]=\\\"true\\\">\\n        <amexio-google-map [initial-zoom-level]=\\\"8\\\" [initial-lat]=\\\"24.4086\\\" [initial-lng]=\\\"55.2701\\\" [height]=\\\"'100%'\\\" [data]=\\\"serviceStations\\\" (onMarkerClick)=\\\"onMarkerClick($event)\\\" [google-map-key]=\\\"'AIzaSyDKSPX97z-ndeh_Mgq3xkaML2Kp9AwHA9s'\\\">\\n        </amexio-google-map>\\n      </amexio-layout-item>\\n\\n    </amexio-layout-columns>\\n\\n\"","import { BookingAvailableService } from './../../services/bookingavailable/service.booking.service';\n\nimport {Component, OnInit, Input} from '@angular/core';\nimport { GoogleMapOverlays } from 'amexio-ng-extensions';\n\nimport { ServiceBookingService } from '../../services/servicebooking/service.booking.service';\nimport { ServiceAvailibilityModel } from '../../model/service.availiblity.model';\nimport { LocationModel } from '../../model/shared/location.model';\nimport { CommonService } from '../../services/shared/common.service';\nimport { TimeModel } from 'amexio-ng-extensions';\nimport { ServiceAssistantModel } from '../../model/shared/serviceassistant.model';\nimport { AvailableSlotsModel } from 'amexio-ng-extensions';\nimport { DatePipe } from '@angular/common';\nimport { DateRangeModel } from 'projects/rina-lib/src/lib/model/shared/daterange.model';\nimport {WindowToogleService} from \"../../services/alfahim/window.toggle.service\";\n\n@Component({\n    selector: 'service-availiblity-lib',\n    templateUrl : './service.availiblity-lib.component.html'\n})\nexport class ServiceAvailiblityComponent implements OnInit {\n\n    serviceStations: GoogleMapOverlays[];\n    serviceLocations: LocationModel [];\n    timeSlots: TimeModel [];\n    assitantPerson: ServiceAssistantModel [];\n    availableslots: AvailableSlotsModel[];\n\n    @Input('start-time') startTime: number = 10;\n\n    @Input('end-time') endTime: number = 12;\n\n    @Input('service-model') serviceModel: ServiceAvailibilityModel;\n\n    @Input('is-edit-mode') isEditModel: boolean;\n\n    minDate: any;\n\n    isAvailable: boolean;\n\n    dateRangeModel: DateRangeModel;\n\n    constructor(public _windowTService: WindowToogleService, private sbService: ServiceBookingService, private commonService: CommonService,\n       private bookingAvailableService: BookingAvailableService) {\n       this.serviceStations = [];\n       this.assitantPerson = [];\n       this.availableslots = [];\n       this.serviceModel = new ServiceAvailibilityModel();\n       this.minDate = new DatePipe('en-US').transform(new Date(), 'dd-MMM-yyyy');\n       this.dateRangeModel = new DateRangeModel();\n      }\n\n    checkAvailiblity() {\n        let response: any;\n        this.availableslots = [];\n        this.dateRangeModel.inDate = this.serviceModel.appointmentDate;\n        this.dateRangeModel.locationid = this.serviceModel.location;\n        this.dateRangeModel.type = this._windowTService.appType;\n        this.bookingAvailableService.getAllAvailabelSlots(this.dateRangeModel).subscribe((resp: any) => {\n          response = resp;\n        },\n        (error: any) => {\n        },\n        () => {\n           if (response) {\n            this.availableslots = [];\n            response.forEach((element: any) => {\n              this.availableslots.push(new AvailableSlotsModel(new Date(element.datetimeLong), element.data));\n            });\n           }\n        });\n    }\n\n    ngOnInit() {\n        this.initLocation();\n        this.initTime();\n    }\n\n\n    onSlotSelection(event: any) {\n       this.serviceModel.selectedSlot = event.time;\n       this.serviceModel.selectedSlotDate = event.date;\n    }\n    onAssitantClick(event: any) {\n      this.serviceModel.assitantPersonName = event.primaryDisplay;\n    }\n\n    private initLocation(): void {\n\n        let response: any;\n        this.sbService.fetchLocations().subscribe((resp: any) => {\n            response = resp;\n        },\n        (error: any) => {\n        },\n        () => {\n            this.serviceLocations = response;\n            this.serviceStations = [];\n            this.serviceLocations.forEach((element: any) => {\n              if (element) {\n               this.serviceStations.push(new GoogleMapOverlays(Number(element.latitude),Number(element.longitude), element.locationName +', UAE',true,'https://testapi.amexio.org/api/v5.5/assets/images/googlemap/mercgooglemarker.png',element));\n              }\n            });\n        });\n\n    }\n\n    private initSA(id: string): void {\n        let response: any;\n        const pathVariable = id + '/' + this._windowTService.appType;\n        this.sbService.fetchSABasedOnLocation(pathVariable).subscribe((resp: any) => {\n            response = resp;\n        },\n        (error: any) => {\n        },\n        () => {\n            this.assitantPerson = response;\n        });\n    }\n\n    private initTime(): void {\n        this.timeSlots = this.commonService.workingSlot1();\n        if (this.timeSlots && this.timeSlots.length > 0) {\n         this.endTime = this.timeSlots.pop().timeId;\n        }\n    }\n\n    setTime(event: any) {\n\n    }\n\n    onMarkerClick(serviceStation: any) {\n      if (serviceStation.primaryKey && this.serviceModel.location !== serviceStation.primaryKey) {\n        this.serviceModel.location = serviceStation.primaryKey;\n        this.serviceModel.locationName = serviceStation.primaryDisplay;\n        this.serviceModel.assitantPersonId = '';\n        this.availableslots = [];\n        if(serviceStation){\n          this.serviceModel.locationModel.latitude = serviceStation.latitude;\n          this.serviceModel.locationModel.longitude = serviceStation.longitude;\n        }\n        this.initSA(this.serviceModel.location);\n      }\n\n    }\n\n    onLocationClick(data: any) {\n      if(this.serviceModel.locationName !== data.primaryDisplay) {\n        this.serviceModel.assitantPersonId = '';\n        this.availableslots = [];\n        this.initSA(data.primaryKey);\n        this.serviceModel.locationName = data.primaryDisplay;\n        this.serviceModel.locationModel.latitude = data.latitude;\n        this.serviceModel.locationModel.longitude = data.longitude;\n      }\n    }\n}\n","module.exports = \"\\n<amexio-card-ce>\\n  <amexio-header-ce>\\n    <amexio-label size=\\\"medium-bold\\\">\\n      SELECT SERVICE TYPE\\n    </amexio-label>\\n  </amexio-header-ce>\\n  <rina-step-box [active-index]=\\\"5\\\"></rina-step-box>\\n  <amexio-body-ce [align]=\\\"'start'\\\">\\n    <amexio-row>\\n      <amexio-column [size]=\\\"6\\\">\\n        <amexio-listbox [enable-checkbox]=\\\"true\\\" [height]=\\\"300\\\" [header]=\\\"'Service Type'\\\" [data]=\\\"serviceTypeData\\\" [display-field]=\\\"'typeName'\\\" (selectedRows)=\\\"getSelectedType($event)\\\">\\n        </amexio-listbox>\\n        <amexio-textarea-input field-label=\\\"Remark\\\" [(ngModel)]=\\\"remarks\\\" name=\\\"remarks\\\" place-holder=\\\"Enter remark\\\">\\n        </amexio-textarea-input>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-body-ce>\\n  <amexio-action-ce [align]=\\\"'flex-end'\\\" [border-top]=\\\"true\\\">\\n    <amexio-toolbar>\\n      <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n        <amexio-button [label]=\\\"'Cancel'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'cancel'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onCancel($event)\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n      <amexio-toolbar-item position-right style=\\\"padding-left: 5px;\\\">\\n        <amexio-button [label]=\\\"'Back'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Back'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onBackHandle($event)\\\">\\n        </amexio-button>\\n        <amexio-button [label]=\\\"'Next'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'skip'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onNextHandle()\\\">\\n        </amexio-button>\\n      </amexio-toolbar-item>\\n    </amexio-toolbar>\\n  </amexio-action-ce>\\n</amexio-card-ce>\\n\"","/**\n * Created by dattaram on 5/2/19.\n */\n\nimport {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {PersonalDetailsService} from '../../services/alfahim/personal.details.service';\n\n@Component({\n  selector: 'service-job-type',\n  templateUrl: 'jobtype.component.html'\n})\n\nexport class ServiceTypeComponent implements OnInit {\n  serviceTypeData: any[] = [];\n  selectedServiceJobs: any[] = [];\n  remarks = '';\n  @Output() onNext: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onBack: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onClose: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private _personalDetailsService: PersonalDetailsService) {\n    this.resetBindedData();\n    this.serviceTypeData =  [\n      {\n        'typeName': 'Check Battery System',\n        'typeValue': 'Check Battery System',\n      },\n      {\n        'typeName': 'Horn Check',\n        'typeValue': 'Horn Check',\n      },\n      {\n        'typeName': 'Instrument Cluster / Display Instruments Check',\n        'typeValue': 'Instrument Cluster / Display Instruments Check',\n      },\n      {\n        'typeName': 'Steering Wheel Heater Check',\n        'typeValue': 'Steering Wheel Heater Check',\n      },\n      {\n        'typeName': 'Fuel Indicator Level Check',\n        'typeValue': 'Fuel Indicator Level Check',\n      },\n      {\n        'typeName': 'Electrical System Check',\n        'typeValue': 'Electrical System Check',\n      }\n    ];\n    this.assignOldData();\n\n  }\n\n  assignOldData() {\n    const dataRef = this._personalDetailsService.getExtraServiceData();\n    if (dataRef) {\n      this.remarks = dataRef.remarks;\n      if (dataRef.selectedJobType) {\n        this.selectedServiceJobs = dataRef.selectedJobType;\n        dataRef.selectedJobType.forEach((selectedItem: any) => {\n          this.serviceTypeData.forEach((item: any, index: number)=> {\n            if(selectedItem.typeValue === item.typeValue) {\n              this.serviceTypeData[index] = selectedItem;\n            }\n          });\n        });\n      }\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  getSelectedType(event: any) {\n    this.selectedServiceJobs = event;\n  }\n\n  onNextHandle(){\n    const createEmitingObj = {\n      selectedJobType: this.selectedServiceJobs,\n      remarks: this.remarks\n    };\n    this.onNext.emit(createEmitingObj);\n    this.resetBindedData();\n  }\n\n  onBackHandle(event: any) {\n    this.onBack.emit(event);\n  }\n  onCancel(event: any){\n    this.onClose.emit(event);\n  }\n\n  resetBindedData() {\n    this.selectedServiceJobs = [];\n    this.remarks = '';\n  }\n}\n","module.exports = \"\\n<!--\\n<amexio-steps [icon]=\\\"true\\\" >\\n  <amexio-step-block *ngFor=\\\"let item of stepBoxData\\\" [active]=\\\"(item.index === activeIndex)\\\" [icon]=\\\"item.icon\\\">\\n  </amexio-step-block>\\n</amexio-steps>\\n-->\\n\\n\\n<br/>\\n<div class=\\\"alfahimstepbox\\\">\\n  <div class=\\\"alfahimstepboxitems\\\" [ngClass]=\\\"{'alfahimstepboxitems-active': (item.index === activeIndex), 'alfahimstepboxitems-deactive': (item.index != activeIndex)}\\\" [ngClass]=\\\"{'alfahimstepboxitems-active': true}\\\" *ngFor=\\\"let item of stepBoxData\\\">\\n    <div  [attr.class]=\\\"item.icon\\\" ></div>\\n  </div>\\n</div>\\n\"","/**\n * Created by dattaram on 8/2/19.\n */\nimport {Component, OnInit, Input} from '@angular/core';\n\n@Component({\n selector: 'rina-step-box',\n  templateUrl: 'step-box.component.html'\n})\n\nexport class RinaStepBoxComponent implements OnInit {\n\n  @Input('active-index') activeIndex: any;\n\n  @Input('step-box-data') stepBoxData: any[] = [];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.stepBoxData = [\n      {\n        \"label\": \"User\",\n        \"icon\": \"fa fa-user \",\n        \"active\": false,\n        \"index\": 3\n      },\n      {\n        \"label\": \"Location\",\n        \"icon\": \"fa fa-map-marker \",\n        \"active\": false,\n        \"index\": 4\n      },\n      {\n        \"label\": \"Service Type\",\n        \"icon\": \"fa fa-cubes \",\n        \"active\": false,\n        \"index\": 5\n      },\n      {\n        \"label\": \"Sale\",\n        \"icon\": \"fa fa-shopping-cart\",\n        \"active\": false,\n        \"index\": 6\n      },\n      {\n        \"label\": \"Confirm\",\n        \"icon\": \"fa fa-check-circle \",\n        \"active\": false,\n        \"index\": 7\n      },\n      {\n        \"label\": \"Info\",\n        \"icon\": \"fa fa-info \",\n        \"active\": false,\n        \"index\": 8\n      }\n    ];\n  }\n}\n","import { LocationModel } from 'projects/rina-lib/src/lib/model/shared/location.model';\nexport class ServiceAvailibilityModel {\n    location: string;\n    appointmentDate: Date = new Date();\n    appointmentTime: number = 10;\n    assitantPersonId: string;\n    assitantPersonName: string;\n    selectedSlot: number;\n    isNotifySA: boolean;\n    locationModel: LocationModel;\n    locationName: string;\n    selectedSlotDate:Date=new Date();\n    serviceTimeLeft: number;\n    vehicleName = '';\n    vehiclePlate = '';\n    constructor() {\n      this.locationModel = new LocationModel();\n    }\n    public isValidate(): boolean {\n         let isValid: boolean = false;\n        if(this.location!=null && this.appointmentDate!=null && this.appointmentTime!=null && this.assitantPersonId!=null && this.selectedSlot!=null){\n            isValid = true;\n        } else {\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n","export class BaseModel {\n  primaryKey: string;\n  primaryDisplay: string;\n  constructor() {\n\n  }\n}\n","export class DateRangeModel {\n  inDate: any;\n  outDate: any;\n  locationid: string;\n  type: string;\n}\n","import { BaseModel } from \"./base.model\";\n\nexport class LocationModel extends BaseModel {\n    locationId: string;\n    locationName: string;\n    latitude: number;\n    longitude: number;\n}\n","export class PersonalDetails {\n title: string;\n firstName: string;\n surname: string;\n email: string;\n phone: string;\n perferredContact: string;\n vehicleType: string;\n modelYear: string;\n presentKm: string;\n registrationNumber: string;\n constructor() {\n   this.perferredContact = '1';\n }\n\n}\n","export class PropertyGridModel {\n    fieldName : string;\n    fieldValue : string;\n    \n    constructor(_fieldName: string, _fieldValue: string){\n        this.fieldName = _fieldName;\n        this.fieldValue = _fieldValue;\n    }\n}","import { ServiceAvailiblityComponent } from './components/service-booking/service.availiblity-lib.component';\nimport { PreferredLocationComponent} from './components/preferred-location/preferred.location.component';\nimport {ServiceConfirmationComponent} from './components/confirmation/service.confirmation';\nimport {AppoinmentConfirmationComponent} from './components/appointmentdetails/appointment.confirmation';\nimport { PropertyGridComponnent } from './components/property-grid/propertygrid.component';\nimport {BeforeConfirmComponent} from './components/before-confirm/before.confirm.component';\nimport {ContentCardComponent} from './components/content-card/content.card.component';\nimport {CustomerVehicleListComponent} from './components/customer-vehicle-list/customer.vehiclelist.component';\nimport {ServiceTypeComponent} from './components/service-job-type/jobtype.component';\nimport {RinaStepBoxComponent} from './components/step-box/step-box.component';\n\nexport const RINA_COMPONENTS: any[] = [\n  ServiceAvailiblityComponent,\n  PreferredLocationComponent,\n  ServiceConfirmationComponent,\n  AppoinmentConfirmationComponent,\n  PropertyGridComponnent,\n  BeforeConfirmComponent,\n  ContentCardComponent,\n  CustomerVehicleListComponent,\n  ServiceTypeComponent,\n  RinaStepBoxComponent\n];\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { RINA_COMPONENTS } from './rina-lib.components';\nimport { HttpService } from './services/shared/http.service';\nimport { FormsModule } from '@angular/forms';\nimport { AmexioWidgetModule, AmexioEnterpriseModule } from 'amexio-ng-extensions';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceBookingService } from './services/servicebooking/service.booking.service';\nimport { CommonService } from './services/shared/common.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {BookingAvailableService} from \"./services/bookingavailable/service.booking.service\";\nimport {PersonalDetailsService} from \"./services/alfahim/personal.details.service\";\nimport {WindowToogleService} from \"./services/alfahim/window.toggle.service\";\nimport {DatePipe} from \"@angular/common\";\nimport {NotificationAndLoaderService} from \"./services/shared/notification-loader.service\";\n\n@NgModule({\n  declarations: RINA_COMPONENTS,\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AmexioWidgetModule,\n    AmexioEnterpriseModule,\n    ReactiveFormsModule\n  ],\n  exports: RINA_COMPONENTS\n})\nexport class RinaLibModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: RinaLibModule,\n      providers: [HttpService,\n        ServiceBookingService,\n        BookingAvailableService,\n        PersonalDetailsService,\n        WindowToogleService,\n        CommonService,\n        NotificationAndLoaderService,\n        DatePipe\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SERVICE_URL } from '../service.constant';\nimport { PersonalDetails } from 'projects/rina-lib/src/lib/model/shared/personal.details.model';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\nimport {CustomerModel} from '../../../../../rinaccm/src/app/models/customer.details.model';\nimport {CustomerProfile} from \"../../../../../rinaccm/src/app/models/customer.profile.model\";\n@Injectable()\nexport class PersonalDetailsService {\n  personalDetails: PersonalDetails;\n  serviceAvailibilityModel: ServiceAvailibilityModel;\n  selectedVehicleData: any;\n  vehicleName = '';\n  vehicleRgNo = '';\n  private extraServiceData = null;\n  constructor(private httpClient: HttpClient) {\n  }\n   public getTitles(): any {\n   return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'title/');\n   }\n   public getVehicles(): any {\n    return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'vehicle/');\n   }\n   public getVehicleModels(): any {\n    return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'vehiclemodel/');\n   }\n   public getLocations(): any {\n    return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'map/');\n   }\n   public getAssitantList(id: string): any {\n    return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'map/' + id);\n   }\n   public getPersonalDetails(): PersonalDetails {\n    return this.personalDetails;\n   }\n   public setPersonalDetails(personalDetails: PersonalDetails) {\n     this.personalDetails = personalDetails;\n     this.vehicleName = this.personalDetails.vehicleType;\n     this.vehicleRgNo = this.personalDetails.registrationNumber;\n   }\n   public setPeferredLocation(serviceAvailibilityModel: ServiceAvailibilityModel) {\n    this.serviceAvailibilityModel = serviceAvailibilityModel;\n     this.serviceAvailibilityModel.vehiclePlate = this.vehicleRgNo;\n     this.serviceAvailibilityModel.vehicleName = this.vehicleName;\n   }\n   public getPeferredLocation(): ServiceAvailibilityModel {\n   return this.serviceAvailibilityModel;\n   }\n\n   setPersonalDetailsForCcm (personalDetails: CustomerProfile) {\n     this.convertIntoPersonalModel(personalDetails);\n   }\n\n   convertIntoPersonalModel(personalDetails: CustomerProfile) {\n    this.personalDetails = new PersonalDetails();\n    this.personalDetails.firstName = personalDetails.name;\n    this.personalDetails.email = personalDetails.email;\n    this.personalDetails.phone = personalDetails.mobile;\n   }\n\n   setExtraServiceData(data: any) {\n    this.extraServiceData = data;\n   }\n   getExtraServiceData(): any {\n    return this.extraServiceData;\n   }\n\n  setSelectedVehicleData(data: any) {\n   this.selectedVehicleData = data;\n    this.vehicleRgNo = this.selectedVehicleData.vehicleMetadata.registrationNo;\n    this.vehicleName = this.selectedVehicleData.title;\n  }\n\n  resetServiceData() {\n    this.personalDetails = null;\n    this.serviceAvailibilityModel = null;\n    this.selectedVehicleData = null;\n    this.vehicleName = '';\n    this.vehicleRgNo = '';\n    this.extraServiceData = null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n@Injectable()\nexport class WindowToogleService {\n\n  widdownMap: Map<number, number>;\n  isNewUserFlow = false;\n  appType: string = '1';\nconstructor() {\n this.addWindowMap();\n}\n\ngetNextWindow(windowNumber: number): number {\n  return this.widdownMap.get(windowNumber + 1);\n}\ngetPreviousWindow(windowNumber: number): number {\n  return this.widdownMap.get(windowNumber - 1);\n}\n\naddWindowMap() {\n  this.widdownMap = new Map();\n  this.widdownMap.set(0, 0);\n  this.widdownMap.set(1, 1);\n  this.widdownMap.set(2, 2);\n  this.widdownMap.set(3, 3);\n  this.widdownMap.set(4, 4);\n  this.widdownMap.set(5, 5);\n  this.widdownMap.set(6, 6);\n  this.widdownMap.set(7, 7);\n  this.widdownMap.set(8, 8);\n  this.widdownMap.set(11, 11);\n\n}\n\n}\n\nexport class WindowDetails {\n  windowNumber: number;\n  windowName: string;\n\n}\n\n","import { DateRangeModel } from './../../model/shared/daterange.model';\nimport { Injectable } from \"@angular/core\";\nimport { HttpService } from \"../shared/http.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingAvailableService {\n\n    constructor(private http: HttpService) {\n\n    }\n    getAllAvailabelSlots(dateRangeModel: DateRangeModel ) {\n        return this.http.post('assistant/available', 'post', dateRangeModel);\n    }\n}\n","export const SERVICE_URL = {\n  BASE_APP_URL : 'https://restapi.amexio.org:8991/alfahim/api/'\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"../shared/http.service\";\nimport { SERVICE_URL } from './../service.constant';\n\n@Injectable()\nexport class ServiceBookingService {\n\n    constructor(private http: HttpService) {\n\n    }\n\n    fetchLocations() {\n        return this.http.fetch('map/', 'get');\n    }\n\n    fetchSABasedOnLocation(locationId: string) {\n        return this.http.fetch('map/' + locationId, 'get');\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { TimeModel, TimeUtil } from \"amexio-ng-extensions\";\n\n@Injectable()\nexport class CommonService {\n\n    timeData() : TimeModel [] {\n       return new TimeUtil().timeData(false);\n    }\n\n    workingSlot1() : TimeModel [] {\n        return new TimeUtil().workingslot1();\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/index';\nimport {SERVICE_URL} from \"../service.constant\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    fetch(serviceUrl: string, methodType: string): Observable<any> {\n        const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n        if (methodType === 'post') {\n            return this.http.post(SERVICE_URL.BASE_APP_URL + serviceUrl, { headers });\n        } else if (methodType === 'get') {\n            return this.http.get(SERVICE_URL.BASE_APP_URL + serviceUrl , { headers });\n        }\n    }\n\n\n    post(serviceUrl: string, methodType: string, requestJson: any): Observable<any> {\n\n        const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n        if (methodType === 'post') {\n            return this.http.post(SERVICE_URL.BASE_APP_URL + serviceUrl, requestJson, { headers });\n        } else if (methodType === 'get') {\n            return this.http.get(SERVICE_URL.BASE_APP_URL + serviceUrl, { headers });\n        }\n    }\n\n  fetchLocalData(serviceUrl: string, methodType: string): Observable<any> {\n    const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n    if (methodType === 'post') {\n      return this.http.post( serviceUrl, { headers });\n    } else if (methodType === 'get') {\n      return this.http.get(serviceUrl , { headers });\n    }\n  }\n\n}\n","/**\n * Created by dattaram on 6/2/19.\n */\n\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class NotificationAndLoaderService {\n  showLoader = false;\n  constructor() {\n  }\n}\n","/*\n * Public API Surface of rina-lib\n */\n\nexport * from './lib/rina-lib.module';\nexport * from './lib/model/service.availiblity.model';\nexport * from '../../rinaccm/src/app/models/customer.details.model';\nexport * from './lib/model/shared/propertygrid.model';\n\n/* EXPORTED COMPONENT */\n\nexport * from './lib/components/service-booking/service.availiblity-lib.component';\nexport * from './lib/components/preferred-location/preferred.location.component';\nexport * from './lib/components/confirmation/service.confirmation';\nexport * from './lib/components/appointmentdetails/appointment.confirmation';\nexport * from './lib/components/property-grid/propertygrid.component';\nexport * from './lib/components/before-confirm/before.confirm.component';\nexport * from './lib/components/content-card/content.card.component';\nexport * from './lib/components/customer-vehicle-list/customer.vehiclelist.component';\nexport * from './lib/components/service-job-type/jobtype.component';\nexport * from './lib/components/step-box/step-box.component';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9yaW5hY2NtL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<rina-home></rina-home>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent } from './app.component';\nimport {RinaHomeComponent} from './rina-home/rina-home.component';\nimport {AmexioDashBoardModule, AmexioWidgetModule} from 'amexio-ng-extensions';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RinaLibModule} from '../../../rina-lib/src/lib/rina-lib.module';\nimport {VehicleDetailsComponent} from './feature-component/vehicle-details/vehicle.details.component';\nimport {CompanyLogoComponent} from './feature-component/company-logo/company.logo.component';\nimport {SearchBoxComponent} from './feature-component/searchbox/searchbox.component';\nimport {ServiceListComponent} from './feature-component/service-list/service.list.component';\n\nconst COMPONENT: any[] = [\n  AppComponent, RinaHomeComponent,\n  VehicleDetailsComponent, CompanyLogoComponent,\n  SearchBoxComponent,\n  ServiceListComponent\n];\n\n@NgModule({\n  declarations: COMPONENT,\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RinaLibModule.forRoot(),\n    HttpClientModule,\n    FormsModule,\n    AmexioWidgetModule,\n    AmexioDashBoardModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" alignment=\\\"space-between\\\">\\n  <amexio-layout-item [padding]=\\\"'0px'\\\">\\n    <amexio-layout-columns [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" alignment=\\\"center\\\">\\n      <amexio-layout-item [padding]=\\\"'0px'\\\">\\n        <amexio-image [width]=\\\"'150px'\\\" [height]=\\\"'120px'\\\" [path]=\\\"'assets/images/giclogo.png'\\\" [filter]=\\\"'normal'\\\">\\n        </amexio-image>\\n      </amexio-layout-item>\\n    </amexio-layout-columns>\\n  </amexio-layout-item>\\n  <amexio-layout-item [padding]=\\\"'0px'\\\">\\n    <amexio-layout-columns [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" alignment=\\\"space-between\\\">\\n      <amexio-layout-item [padding]=\\\"'0px'\\\">\\n        <amexio-floating-button [relative]=\\\"true\\\" [icon]=\\\"'fa fa-volume-control-phone fa-2x'\\\"  [type]=\\\"'green'\\\"></amexio-floating-button>\\n      </amexio-layout-item>\\n      <amexio-layout-item [padding]=\\\"'0px'\\\">\\n        <amexio-floating-button [relative]=\\\"true\\\" [icon]=\\\"'fa fa-phone  fa-2x'\\\" [type]=\\\"'theme-color'\\\"></amexio-floating-button>\\n      </amexio-layout-item>\\n      <amexio-layout-item [padding]=\\\"'0px'\\\">\\n        <amexio-floating-button [relative]=\\\"true\\\" [icon]=\\\"'fa fa-pause  fa-2x'\\\" [type]=\\\"'yellow'\\\"></amexio-floating-button>\\n      </amexio-layout-item>\\n      <amexio-layout-item [padding]=\\\"'0px'\\\">\\n        <amexio-floating-button [relative]=\\\"true\\\" [icon]=\\\"'fa fa-phone-square  fa-2x'\\\" [type]=\\\"'red'\\\"></amexio-floating-button>\\n      </amexio-layout-item>\\n    </amexio-layout-columns>\\n  </amexio-layout-item>\\n</amexio-layout-columns>\"","/**\n * Created by dattaram on 15/1/19.\n */\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n   selector: 'company-logo',\n  templateUrl: './company.logo.component.html'\n})\n\nexport class CompanyLogoComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"<div class=\\\"inputgroup\\\" #rootDiv>\\n  <input\\n    id=\\\"input\\\"\\n    role=\\\"combobox\\\"\\n    name=\\\"searchbox\\\"\\n    [(ngModel)]=\\\"searchId\\\"\\n    type=\\\"text\\\" class=\\\"input-control\\\"\\n    (focus)=\\\"focusHandle($event)\\\"\\n    (blur)=\\\"blurHandle($event)\\\"\\n    [attr.placeholder]=\\\"'search'\\\"/>\\n  <span class=\\\"drodown-caret-down\\\" (click)=\\\"iconHandle()\\\" style=\\\"cursor: pointer\\\">\\n      <i class=\\\"fa fa-search\\\"></i>\\n      </span>\\n  <span #dropdownitems  class=\\\"dropdown\\\"  [ngStyle]=\\\"dropdownstyle\\\">\\n          <ul class=\\\"dropdown-list\\\">\\n            <li (mousedown)=\\\"liClickHandle(item)\\\"  role=\\\"option\\\"  class=\\\"list-items\\\" *ngFor=\\\"let item of dropDownItemList\\\">{{item.key}} <i style=\\\"float: right\\\" [ngClass]=\\\"{'fa fa-check': item.selected}\\\" aria-hidden=\\\"true\\\"></i></li>\\n          </ul>\\n        </span>\\n</div>\\n<br>\\n\"","/**\n * Created by dattaram on 15/1/19.\n */\nimport {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'search-box',\n  templateUrl: './searchbox.component.html'\n})\n\nexport class SearchBoxComponent implements OnInit {\n  dropdownstyle: any;\n  showDropdown = false;\n  dropDownItemList: any[] = [];\n  searchId = '';\n  searchType = 1;\n  @Output() search: EventEmitter<any> =  new EventEmitter<any>();\n  constructor() {\n    this.dropDownItemList = [\n      {\n        'key': 'Customer ID',\n        'id': 1,\n        selected: true\n      },\n      {\n        'key': 'Mobile Number',\n        'id': 2,\n         selected: false\n      },\n      {\n        'key': 'Emirates ID',\n        'id': 3,\n        selected: false\n      },\n      {\n        'key': 'Registration No',\n        'id': 4,\n        selected: false\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.showList(this.showDropdown);\n  }\n\n  focusHandle(event: any) {\n    this.showList(true);\n  }\n  iconHandle() {\n    const searchObject = {\n      searchId: this.searchId,\n      searchType: this.searchType\n    };\n    this.search.emit(searchObject);\n  }\n  blurHandle(event: any) {\n    this.showList(false);\n  }\n\n  liClickHandle(item: any) {\n    this.dropDownItemList.forEach((obj: any) => {\n      obj.selected = false;\n    });\n    item.selected = true;\n    this.searchType = item.id;\n    if (this.searchId !== '') {\n      this.iconHandle();\n    }\n    this.showList(false);\n  }\n\n  showList(flag: boolean) {\n    this.showDropdown = flag;\n    if (this.showDropdown) {\n      this.dropdownstyle = {visibility: 'visible'};\n    } else {\n      this.dropdownstyle = {visibility: 'hidden'};\n    }\n  }\n}\n","module.exports = \"<span class=\\\"servicelist\\\">\\n    <amexio-card [header]=\\\"false\\\"\\n                          [footer]=\\\"true\\\"\\n                          [footer-align]=\\\"'center'\\\">\\n         <amexio-body>\\n           <search-box (search)=\\\"getSearchObject($event)\\\"></search-box>\\n           <ng-container *ngFor=\\\"let service of serviceList\\\">\\n             <amexio-button [label]=\\\"service.serviceName\\\"\\n                            [type]=\\\"'theme-color'\\\"\\n                            (onClick)=\\\"openServiceBookingWindow(service)\\\"\\n                            [disabled]=\\\"service.disabled\\\"\\n                            [tooltip]=\\\"'large'\\\"\\n                            [block]=\\\"true\\\">\\n             </amexio-button><br>\\n           </ng-container>\\n         </amexio-body>\\n         <amexio-action>\\n           <amexio-row>\\n             <amexio-column [size]=\\\"4\\\">\\n               <amexio-image style=\\\"color: lightskyblue\\\" [icon-class]=\\\"'fa fa-file-pdf-o fa-2x'\\\" ></amexio-image>\\n             </amexio-column>\\n             <amexio-column [size]=\\\"4\\\">\\n               <amexio-image style=\\\"color: blue\\\" [icon-class]=\\\"'fa fa-file-word-o fa-2x'\\\" ></amexio-image>\\n             </amexio-column>\\n             <amexio-column [size]=\\\"4\\\">\\n               <amexio-image style=\\\"color: green\\\" [icon-class]=\\\"'fa fa-file-excel-o fa-2x'\\\" ></amexio-image>\\n             </amexio-column>\\n           </amexio-row>\\n         </amexio-action>\\n       </amexio-card>\\n</span>\\n\\n<amexio-notification\\n  [data]=\\\"errorMsgData\\\"\\n  [vertical-position]=\\\"'top'\\\"\\n  [horizontal-position]=\\\"'center'\\\"\\n  [close-on-escape] =\\\"true\\\"\\n  [background-color]=\\\"'red'\\\"\\n  [auto-dismiss-msg]=\\\"true\\\"\\n  [icon]=\\\"'fa fa-times-circle-o'\\\"\\n  [auto-dismiss-msg-interval]=\\\"4000\\\">\\n</amexio-notification>\\n\"","\n/**\n * Created by dattaram on 17/1/19.\n */\n\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n@Component({\n  selector: 'service-list-component',\n  templateUrl: 'service-list.component.html'\n})\n\nexport class ServiceListComponent implements OnInit {\n  @Input('service-list') serviceList: any[] = [];\n  @Output() search: EventEmitter<any> =  new EventEmitter<any>();\n  @Output() errorFound: EventEmitter<any> =  new EventEmitter<any>();\n  @Output() serviceTypeClick: EventEmitter<any> =  new EventEmitter<any>();\n\n  errorMsgData = [];\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n  getSearchObject(event: any) {\n      this.search.emit(event);\n  }\n\n  openServiceBookingWindow(service: any) {\n    if (service.serviceName === 'SERVICE BOOKING') {\n      this.serviceTypeClick.emit(service);\n    }\n  }\n}\n","module.exports = \"\\n<amexio-card *ngFor=\\\"let vehicleModel of vehicleDetails; let i= index\\\"\\n             [header]=\\\"false\\\"\\n             [footer]=\\\"false\\\">\\n    <amexio-body >\\n      <div style=\\\"cursor: pointer\\\" (click)=\\\"onCardClick(vehicleModel)\\\">\\n         <amexio-row >\\n        <amexio-column [size]=\\\"6\\\">\\n          <amexio-label>{{i+1}}/{{vehicleDetails.length}}: &nbsp;  {{vehicleModel.vehicleDetail.modelName}}</amexio-label>\\n          <amexio-image [path]=\\\"vehicleModel.vehicleDetail.image\\\"></amexio-image><br>\\n        </amexio-column>\\n        <amexio-column [size]=\\\"6\\\">\\n          <table>\\n            <tr>\\n              <td>Engine</td>\\n              <td>: {{vehicleModel.vehicleDetail.engine}}</td>\\n            </tr>\\n            <tr>\\n              <td>Horsepower</td>\\n              <td>: {{vehicleModel.vehicleDetail.horsepower}}</td>\\n            </tr>\\n            <tr>\\n              <td>Torque rpm</td>\\n              <td>: {{vehicleModel.vehicleDetail.torque}}</td>\\n            </tr>\\n            <tr>\\n              <td>Acceleration</td>\\n              <td>: {{vehicleModel.vehicleDetail.acceleration}}</td>\\n            </tr>\\n            <tr>\\n              <td>Top Speed</td>\\n              <td>: {{vehicleModel.vehicleDetail.topSpeed}}</td>\\n            </tr>\\n            <tr>\\n              <td>Model Year</td>\\n              <td>: {{vehicleModel.vehicleDetail.modelYear}}</td>\\n            </tr>\\n            <tr>\\n              <td>Registration No</td>\\n              <td>: {{vehicleModel.registrationNo}}</td>\\n            </tr>\\n            <tr>\\n              <td>Date of Purchase</td>\\n              <td>: {{vehicleModel.dateOfPurchase}}</td>\\n            </tr>\\n            <tr>\\n              <td>Purchased from</td>\\n              <td>: {{vehicleModel.bu}}</td>\\n            </tr>\\n          </table>\\n        </amexio-column>\\n      </amexio-row>\\n      </div>\\n    </amexio-body>\\n</amexio-card>\\n\\n\"","/**\n * Created by dattaram on 15/1/19.\n */\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {VehiclesInterface} from \"../../models/customer.profile.model\";\n\n@Component({\n  selector: 'vehicle-details',\n  templateUrl:'./vehicle.details.component.html'\n})\n\nexport class VehicleDetailsComponent implements OnInit {\n @Input('vehicle-details') vehicleDetails: VehiclesInterface[];\n @Output() selectVehicle: EventEmitter<any> = new EventEmitter<any>();\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onCardClick(vehicleDetails: VehiclesInterface) {\n    this.selectVehicle.emit(vehicleDetails);\n  }\n}\n","/**\n * Created by dattaram on 14/1/19.\n */\n/*export class CustomerDetailsInterface {\n  customerId: number;\n  mobile: number ;\n  name: string;\n  companyName: string;\n  operatingStatus: string;\n  email: string;\n  altNumber: number;\n  birthday: string;\n  anniversary: string;\n  profileImageUrl: string;\n  callAttempt: number;\n  bu: string;\n  vehicle: string ;\n  dateOfPurchase: string ;\n  modelYear: string ;\n  registrationNo: string ;\n  customerClass: string;\n  preferredModeOfContact: string ;\n  lastService: string;\n  nextService: string;\n  openSRs: string;\n  vehicleDetails: any[];\n\n}*/\n\n\n\n\n\nimport {VehicleDetails} from './vehicel.details.model';\nexport class CustomerModel {\n  customerId = null;\n  mobile = null;\n  name = '';\n  companyName =  '';\n  operatingStatus = '';\n  email = '';\n  altNumber = null;\n  birthday = '';\n  anniversary = '';\n  profileImageUrl = '';\n  callAttempt = null;\n  bu = '' ;\n  vehicle = '' ;\n  dateOfPurchase = '' ;\n  modelYear = '' ;\n  registrationNo = '' ;\n  customerClass = '';\n  preferredModeOfContact = '' ;\n  lastService = '';\n  nextService = '';\n  openSRs = '';\n  vehicleDetails: VehicleDetails[] = [];\n  constructor() {\n\n  }\n /* getCustomerModelObject(customerDetails: CustomerDetailsInterface): CustomerModel {\n    const customerModel = new CustomerModel();\n    customerModel.customerId = customerDetails.customerId;\n    customerModel.mobile = customerDetails.mobile;\n    customerModel.name = customerDetails.name;\n    customerModel.companyName = customerDetails.companyName;\n    customerModel.operatingStatus = customerDetails.operatingStatus;\n    customerModel.email = customerDetails.email;\n    customerModel.altNumber = customerDetails.altNumber;\n    customerModel.birthday = customerDetails.birthday;\n    customerModel.anniversary = customerDetails.anniversary;\n    customerModel.profileImageUrl = customerDetails.profileImageUrl;\n    customerModel.callAttempt = customerDetails.callAttempt;\n    customerModel.bu = customerDetails.bu;\n    customerModel.vehicle = customerDetails.vehicle;\n    customerModel.dateOfPurchase = customerDetails.dateOfPurchase;\n    customerModel.modelYear = customerDetails.modelYear;\n    customerModel.registrationNo = customerDetails.registrationNo;\n    customerModel.customerClass = customerDetails.customerClass;\n    customerModel.preferredModeOfContact = customerDetails.preferredModeOfContact;\n    customerModel.lastService = customerDetails.lastService;\n    customerModel.nextService = customerDetails.nextService;\n    customerModel.openSRs = customerDetails.openSRs;\n    customerModel.vehicleDetails = customerDetails.vehicleDetails;\n    return customerModel;\n  }*/\n}\n\n","/**\n * Created by dattaram on 18/1/19.\n */\n\nexport class CustomerProfile {\n  customerId = '';\n  customerNo = '';\n  name = '';\n  firstName = '';\n  lastName = '';\n  mobile = '';\n  companyName = '';\n  operatingStatus = '';\n  email = '';\n  birthday = '';\n  altNumber = '';\n  anniversary = '';\n  profileImageUrl = '';\n  customerClass = '';\n  uaeId = '';\n  preferredModeOfContact = '';\n  vehicles: VehiclesInterface[];\n  constructor() {\n  }\n}\n\n\n\nexport class Vehicle implements VehicleInterface {\n  vehicleId = '';\n  modelName = '';\n  image = '';\n  modelYear = '';\n  engine = '';\n  horsepower = '';\n  torque = '';\n  acceleration = '';\n  topSpeed = '';\n  vehicleClass = '';\n}\n\n\nexport class Vehicles implements VehiclesInterface {\n  vehicleId = '';\n  registrationNo = '';\n  dateOfPurchase = '';\n  bu = '';\n  lastService = '';\n  nextService = '';\n  openSRs = '';\n  vehicleDetail: VehicleInterface;\n  constructor() {\n    this.vehicleDetail = new Vehicle();\n  }\n\n}\n\n\nexport interface VehiclesInterface {\n  vehicleId: string;\n  registrationNo: string;\n  dateOfPurchase: string;\n  bu: string;\n  lastService: string;\n  nextService: string;\n  openSRs: string;\n  vehicleDetail: VehicleInterface;\n}\n\n\nexport interface VehicleInterface {\n  vehicleId: string;\n  modelName: string;\n  image: string;\n  modelYear: string;\n  engine: string;\n  horsepower: string;\n  torque: string;\n  acceleration: string;\n  topSpeed: string;\n  vehicleClass: string;\n}\n\n","module.exports = \"<amexio-spinner [show]=\\\"showLoader\\\" [type]=\\\"'rectanglebounce'\\\" [vertical-position]=\\\"'center'\\\" [horizontal-position]=\\\"'center'\\\" [color]=\\\"'yellow'\\\">\\n</amexio-spinner>\\n<amexio-layout-grid [layout]=\\\"'rinahomepage'\\\">\\n    <amexio-grid-item [name]=\\\"'logoposition'\\\">\\n        <amexio-card [header]=\\\"false\\\" [footer]=\\\"false\\\">\\n            <amexio-body>\\n                <company-logo></company-logo>\\n            </amexio-body>\\n        </amexio-card>\\n    </amexio-grid-item>\\n    <amexio-grid-item [name]=\\\"'topslot2'\\\">\\n        <span class=\\\"custdetail\\\">\\n          <rina-property-grid [key-value-data]=\\\"customerKeyValuedata\\\" [has-image]=\\\"true\\\" [image]=\\\"customerModel.profileImageUrl\\\"></rina-property-grid>\\n        </span>\\n    </amexio-grid-item>\\n    <amexio-grid-item [name]=\\\"'topslot3'\\\">\\n        <rina-property-grid [key-value-data]=\\\"vehicleKeyValuedata\\\"></rina-property-grid>\\n    </amexio-grid-item>\\n    <amexio-grid-item [name]=\\\"'topslot4'\\\">\\n        <rina-property-grid [key-value-data]=\\\"serviceKeyValuedata\\\"></rina-property-grid>\\n    </amexio-grid-item>\\n    <amexio-grid-item [name]=\\\"'guages'\\\">\\n        <amexio-card [header]=\\\"false\\\" [footer]=\\\"false\\\">\\n            <amexio-body>\\n                <amexio-layout-columns [fit]=\\\"true\\\" [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\">\\n                    <amexio-layout-item [fit]=\\\"true\\\" *ngFor=\\\"let alignment of ['center']\\\">\\n                        <amexio-layout-columns [fit]=\\\"true\\\" [border]=\\\"false\\\" [orientation]=\\\"'vertical'\\\" [alignment]=\\\"alignment\\\">\\n                            <amexio-layout-item>\\n                                <amexio-dashboard-gauge [height]=\\\"'100%'\\\" [width]=\\\"'100%'\\\" [data]=\\\"gaugeChartData\\\" [red-color-from]=\\\"90\\\" [red-color-to]=\\\"100\\\" [yellow-color-from]=\\\"75\\\" [yellow-color-to]=\\\"90\\\" [scale-value]=\\\"5\\\">\\n                                </amexio-dashboard-gauge>\\n                                <amexio-row>\\n                                    <amexio-column size=\\\"6\\\">\\n                                        <amexio-label [size]=\\\"small\\\">\\n                                            CSAT 70/100%\\n                                        </amexio-label>\\n                                    </amexio-column>\\n                                    <amexio-column size=\\\"6\\\">\\n                                        <amexio-label [size]=\\\"small\\\">\\n                                            AHT SLA 200\\n                                        </amexio-label>\\n                                    </amexio-column>\\n                                </amexio-row>\\n                            </amexio-layout-item>\\n                        </amexio-layout-columns>\\n                    </amexio-layout-item>\\n                </amexio-layout-columns>\\n\\n            </amexio-body>\\n        </amexio-card>\\n    </amexio-grid-item>\\n    <amexio-grid-item [name]=\\\"'rinasidemenu'\\\">\\n        <service-list-component [service-list]=\\\"serviceList\\\" (errorFound)=\\\"handleError()\\\" (search)=\\\"getSearchObject($event)\\\" (serviceTypeClick)=\\\"serviceTypeClickHandle($event)\\\"></service-list-component>\\n    </amexio-grid-item>\\n    <amexio-grid-item [name]=\\\"'rinasidecenter'\\\">\\n        <amexio-layout-columns style=\\\"background-color: white\\\" [fit]=\\\"true\\\" [border]=\\\"false\\\" [orientation]=\\\"'vertical'\\\" [alignment]=\\\"'space-between'\\\">\\n            <amexio-layout-item [padding]=\\\"false\\\" [fit]=\\\"true\\\">\\n                <amexio-tab-view #tab [divide-header-equally]=true [closable]=\\\"false\\\" [body-height]=\\\"46\\\">\\n                    <amexio-tab title=\\\"VEHICLE DETAILS\\\" [active]=\\\"true\\\" [amexio-color]=\\\"'red'\\\">\\n                        <ng-container *ngIf=\\\"customerModel.vehicles\\\">\\n                            <vehicle-details (selectVehicle)=\\\"getSelectedVehicle($event)\\\" [vehicle-details]=\\\"customerModel.vehicles\\\"></vehicle-details>\\n                        </ng-container>\\n                    </amexio-tab>\\n                    <amexio-tab title=\\\"BOOKING DETAILS\\\" [amexio-color]=\\\"'green'\\\">\\n                        <amexio-datagrid [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/bookingdata.json'\\\" [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n\\n                            <amexio-data-table-column [data-index]=\\\"'bookingId'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Booking Id'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'bookingDate'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Booking Date'\\\"></amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\">\\n\\n                            </amexio-data-table-column>\\n                        </amexio-datagrid>\\n                    </amexio-tab>\\n                    <amexio-tab title=\\\"SERVICE HISTORY\\\" [amexio-color]=\\\"'black'\\\">\\n                        <amexio-datagrid [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/servicedata.json'\\\" [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n                            <amexio-data-table-column [width]=\\\"8\\\" [data-index]=\\\"'code'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Code'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'date'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Date'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'mileage'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Mileage'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [width]=\\\"18\\\" [data-index]=\\\"'details'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Details'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'wip'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'WIP'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'account'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Account'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'value'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Value'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'invoice'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Invoice'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'jobNo'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Job No'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [width]=\\\"9\\\" [data-index]=\\\"'branch'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Branch'\\\">\\n                            </amexio-data-table-column>\\n                        </amexio-datagrid>\\n                        <amexio-row>\\n                            <amexio-column size=\\\"6\\\">\\n                                <rina-property-grid [key-value-data]=\\\"serviceHistoryData1\\\"></rina-property-grid>\\n\\n                            </amexio-column>\\n                            <amexio-column size=\\\"6\\\">\\n                                <rina-property-grid [key-value-data]=\\\"serviceHistoryData2\\\"></rina-property-grid>\\n                            </amexio-column>\\n                        </amexio-row>\\n                    </amexio-tab>\\n                    <amexio-tab title=\\\"INTERACTION HISTORY\\\" [amexio-color]=\\\"'red'\\\">\\n                        <amexio-datagrid [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/interaction.json'\\\" [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n\\n                            <amexio-data-table-column [data-index]=\\\"'interactionDate'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Interaction Date'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n                        </amexio-datagrid>\\n                    </amexio-tab>\\n                    <amexio-tab title=\\\"RIGHT SELL\\\" [amexio-color]=\\\"'blue'\\\">\\n                        <amexio-datagrid [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/dummygrid.json'\\\" [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n\\n                            <amexio-data-table-column [data-index]=\\\"'awaitingDetails'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Awaiting Details'\\\">\\n                            </amexio-data-table-column>\\n                            <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'awaitingDetails'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Awaiting Details'\\\"></amexio-data-table-column>\\n                            <amexio-data-table-column [data-index]=\\\"'awaitingDetails'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Awaiting Details'\\\">\\n\\n                            </amexio-data-table-column>\\n                        </amexio-datagrid>\\n                    </amexio-tab>\\n                </amexio-tab-view>\\n\\n            </amexio-layout-item>\\n            <amexio-layout-item style=\\\"background-color: #E8E8E8\\\" [padding]=\\\"false\\\">\\n                <amexio-layout-columns [fit]=\\\"true\\\" [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'start'\\\">\\n                    <amexio-layout-item [fit]=\\\"true\\\">\\n                        <div class=\\\"amexio-checkboxgroup-style\\\">\\n                            <amexio-checkbox-group [data-reader]=\\\"'data'\\\" [display-field]=\\\"'serviceType'\\\" [value-field]=\\\"'serviceType'\\\" [horizontal]=\\\"true\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/serviceType.json'\\\">\\n                            </amexio-checkbox-group>\\n                        </div>\\n                    </amexio-layout-item>\\n                </amexio-layout-columns>\\n\\n                <amexio-layout-columns [fit]=\\\"true\\\" [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n                    <amexio-layout-item [fit]=\\\"true\\\">\\n                        <amexio-text-input place-holder=\\\"Call Remark\\\" [allow-blank]=\\\"true\\\" has-label=\\\"false\\\">\\n                        </amexio-text-input>\\n                    </amexio-layout-item>\\n                    <amexio-layout-item>\\n                        <amexio-button [size]=\\\"'medium'\\\" [label]=\\\"'Submit'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'submit'\\\">\\n                        </amexio-button>\\n                    </amexio-layout-item>\\n                </amexio-layout-columns>\\n            </amexio-layout-item>\\n        </amexio-layout-columns>\\n    </amexio-grid-item>\\n    <amexio-grid-item [name]=\\\"'rinasidesearch'\\\">\\n        <span class=\\\"servicelist\\\">\\n            <amexio-card [header]=\\\"false\\\" [footer]=\\\"false\\\">\\n                <amexio-body>\\n                    <amexio-dropdown [place-holder]=\\\"'Select Script'\\\" [display-field]=\\\"'scriptName'\\\" [data-reader]=\\\"'data'\\\"\\n                        [value-field]=\\\"'scriptUrl'\\\" [http-method]=\\\"'get'\\\" [http-url]=\\\"'assets/script.json'\\\"\\n                        [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n                    </amexio-dropdown>\\n                </amexio-body>\\n            </amexio-card>\\n        </span>\\n    </amexio-grid-item>\\n</amexio-layout-grid>\\n<amexio-dialogue [(show)]=\\\"warningdialogue\\\" [material-design]=\\\"true\\\" [message]=\\\"warningMsg\\\" [title]=\\\"'Error'\\\" [message-type]=\\\"'error'\\\" [type]=\\\"'alert'\\\">\\n</amexio-dialogue>\\n\\n\\n<!-- WINDOW -->\\n\\n<!--<amexio-window class=\\\"serviceconfirmation servicelist\\\"  [(show)]=\\\"windowEnable\\\" type=\\\"window\\\" [header]=\\\"false\\\" [footer]=\\\"false\\\" [closable]=\\\"false\\\">\\n    <amexio-body>\\n        <br>\\n        <amexio-row *ngIf=\\\"(currentstep > 2)\\\">\\n            <amexio-column size=\\\"1\\\"></amexio-column>\\n            <amexio-column size=\\\"10\\\">\\n                <amexio-steps [icon]=\\\"true\\\">\\n                    <amexio-step-block [label]=\\\"'Location'\\\" [active]=\\\"(currentstep === 4)\\\" [icon]=\\\"'fa fa-map-marker fa-2x'\\\">\\n                    </amexio-step-block>\\n                    <amexio-step-block [label]=\\\"'Service Type'\\\" [active]=\\\"(currentstep === 5)\\\" [icon]=\\\"'fa fa-cubes fa-2x'\\\">\\n                    </amexio-step-block>\\n                    <amexio-step-block [label]=\\\"'sale'\\\" [active]=\\\"(currentstep === 6)\\\" [icon]=\\\"'fa fa-superpowers fa-2x'\\\">\\n                    </amexio-step-block>\\n                    <amexio-step-block [label]=\\\"'Confirm'\\\" [active]=\\\"(currentstep === 7)\\\" [icon]=\\\"'fa fa-check-circle fa-2x'\\\">\\n                    </amexio-step-block>\\n                    <amexio-step-block [label]=\\\"'Info'\\\" [active]=\\\"(currentstep === 8)\\\" [icon]=\\\"'fa fa-info fa-2x'\\\">\\n                    </amexio-step-block>\\n                </amexio-steps>\\n            </amexio-column>\\n            <amexio-column size=\\\"1\\\"></amexio-column>\\n        </amexio-row>\\n\\n        <customer-vehicle-list *ngIf=\\\"(currentstep === 2)\\\" [customer-profile]=\\\"customerModel\\\" (onBack)=\\\"vehicleListBack($event)\\\" (onClose)=\\\"vehicleListBack($event)\\\" (onVehicleListNext)=\\\"onVehicleListHandle($event)\\\">\\n        </customer-vehicle-list>\\n\\n\\n        <preferred-location *ngIf=\\\"(currentstep === 4)\\\" (onNext)=\\\"scheduleAppointment($event)\\\" (onPrevious)=\\\"onPrevious($event)\\\" (onClose)=\\\"vehicleListBack($event)\\\" [service-model]=\\\"serviceModel\\\">\\n        </preferred-location>\\n\\n        <service-job-type *ngIf=\\\"(currentstep === 5)\\\" (onNext)=\\\"onServiceTypeNextHandle($event)\\\" (onBack)=\\\"onServiceTypeBackHandle($event)\\\" (onClose)=\\\"onCloseClick($event)\\\"></service-job-type>\\n\\n        <before-confirm *ngIf=\\\"(currentstep === 6)\\\" (onClose)=\\\"vehicleListBack($event)\\\" (onBeforeBack)=\\\"onBeforeBackHandle($event)\\\" (onBeforeConfirmClick)=\\\"onBeforeConfirmClickHandle($event)\\\">\\n        </before-confirm>\\n\\n        <service-confirmation *ngIf=\\\"(currentstep === 7)\\\" [service-model]=\\\"serviceModel\\\" (onClose)=\\\"vehicleListBack($event)\\\" (onPrevious)=\\\"onServiceConfirmPrevious($event)\\\" (onConfirm)=\\\"onAppointmentConfirm($event)\\\">\\n        </service-confirmation>\\n\\n        <appointment-confirmation *ngIf=\\\"(currentstep === 8)\\\" [appointment-msg]=\\\"appointmentMsg\\\" (onConfirm)=\\\"onCloseClick()\\\">\\n        </appointment-confirmation>\\n    </amexio-body>\\n</amexio-window>-->\\n\\n\\n<!-- NEW WINDOW -->\\n\\n\\n<div *ngIf=\\\"windowEnable\\\" class=\\\"alfahim-root-window\\\">\\n  <div> &nbsp; </div>\\n  <div class=\\\"alfahim-root-window-inner\\\">\\n    <div class=\\\"alfahim-root-window-content\\\">\\n      <amexio-badge [absolute]=\\\"true\\\" [background]=\\\"'black'\\\" [color]=\\\"'white'\\\" [top]=\\\"'0'\\\" [right]=\\\"'0'\\\">\\n        <amexio-label style=\\\"padding:10px 20px;\\\" size=\\\"medium\\\">New Service Booking</amexio-label>\\n      </amexio-badge>\\n\\n\\n      <customer-vehicle-list *ngIf=\\\"(currentstep === 2)\\\" [customer-profile]=\\\"customerModel\\\" (onBack)=\\\"vehicleListBack($event)\\\" (onClose)=\\\"vehicleListBack($event)\\\" (onVehicleListNext)=\\\"onVehicleListHandle($event)\\\">\\n      </customer-vehicle-list>\\n\\n\\n      <preferred-location *ngIf=\\\"(currentstep === 4)\\\" (onNext)=\\\"scheduleAppointment($event)\\\" (onPrevious)=\\\"onPrevious($event)\\\" (onClose)=\\\"vehicleListBack($event)\\\" [service-model]=\\\"serviceModel\\\">\\n      </preferred-location>\\n\\n      <service-job-type *ngIf=\\\"(currentstep === 5)\\\" (onNext)=\\\"onServiceTypeNextHandle($event)\\\" (onBack)=\\\"onServiceTypeBackHandle($event)\\\" (onClose)=\\\"onCloseClick($event)\\\"></service-job-type>\\n\\n      <before-confirm *ngIf=\\\"(currentstep === 6)\\\" (onClose)=\\\"vehicleListBack($event)\\\" (onBeforeBack)=\\\"onBeforeBackHandle($event)\\\" (onBeforeConfirmClick)=\\\"onBeforeConfirmClickHandle($event)\\\">\\n      </before-confirm>\\n\\n      <service-confirmation *ngIf=\\\"(currentstep === 7)\\\" [service-model]=\\\"serviceModel\\\" (onClose)=\\\"vehicleListBack($event)\\\" (onPrevious)=\\\"onServiceConfirmPrevious($event)\\\" (onConfirm)=\\\"onAppointmentConfirm($event)\\\">\\n      </service-confirmation>\\n\\n      <appointment-confirmation *ngIf=\\\"(currentstep === 8)\\\" [appointment-msg]=\\\"appointmentMsg\\\" (onConfirm)=\\\"onCloseClick()\\\">\\n      </appointment-confirmation>\\n    </div>\\n  </div>\\n  <div> &nbsp; </div>\\n</div>\\n\\n\\n\"","/**\n * Created by dattaram on 14/1/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {GridConfig, AmexioGridLayoutService, GridConstants} from 'amexio-ng-extensions';\nimport {HttpService} from '../../../../rina-lib/src/lib/services/shared/http.service';\nimport {PersonalDetailsService} from '../../../../rina-lib/src/lib/services/alfahim/personal.details.service';\nimport {CustomerProfile, VehicleInterface, Vehicles, VehiclesInterface} from '../models/customer.profile.model';\nimport {PropertyGridModel} from '../../../../rina-lib/src/lib/model/shared/propertygrid.model';\nimport {ServiceAvailibilityModel} from '../../../../rina-lib/src/lib/model/service.availiblity.model';\nimport {PersonalDetails} from '../../../../rina-lib/src/lib/model/shared/personal.details.model';\nimport {WindowToogleService} from '../../../../rina-lib/src/lib/services/alfahim/window.toggle.service';\nimport {DatePipe} from \"@angular/common\";\n\nconst msgtype: any =  {\n  1: 'customer id',\n  2: 'mobile no'\n};\n@Component({\n  selector: 'rina-home',\n  templateUrl: 'rina-home.component.html'\n})\n\nexport class RinaHomeComponent implements OnInit {\n  rinaHomeDesktopLayout: GridConfig;\n  customerModel: CustomerProfile;\n  serviceList: any[] = [];\n  warningdialogue = false;\n  warningMsg = '';\n  showLoader = false;\n  gaugeChartData: any[] = [];\n  vehicle: Vehicles;\n  vehicleDetails: VehiclesInterface[];\n  customerKeyValuedata: PropertyGridModel[];\n  vehicleKeyValuedata: PropertyGridModel[];\n  serviceKeyValuedata: PropertyGridModel[];\n\n  serviceHistoryData1: PropertyGridModel[];\n  serviceHistoryData2: PropertyGridModel[];\n\n\n\n  currentstep = 3;\n  windowEnable = false;\n  serviceModel: ServiceAvailibilityModel;\n\n  appointmentMsg = '';\n\n\n  constructor(private _httpService: HttpService,\n              private datePipe: DatePipe,\n              private _windowTService: WindowToogleService,\n              private _personalDetailsService: PersonalDetailsService,\n              private _gridlayoutService: AmexioGridLayoutService) {\n    this._windowTService.appType = '2';\n    this.serviceModel = new ServiceAvailibilityModel();\n    this.gaugeChartData = [\n      ['Label', 'Value'],\n      ['CSAT', 80],\n      ['AHT-SLA', 68]\n    ];\n    this.createLayouts();\n    this._gridlayoutService.createLayout(this.rinaHomeDesktopLayout);\n    this.defaultData();\n  }\n\n  ngOnInit() {\n    this.getServiceList();\n    this.createServiceHistoryDataStructure();\n  }\n\n\n  getServiceList() {\n    this._httpService.fetchLocalData('assets/serviceList.json', 'get').subscribe(\n      (res: any) => {\n        this.serviceList = res.data;\n      }\n    );\n  }\n\n  createLayouts() {\n    this.rinaHomeDesktopLayout = new GridConfig('rinahomepage', GridConstants.Desktop)\n      .addlayout(['logoposition', 'topslot2', 'topslot3', 'topslot4', 'guages'])\n      .addlayout(['rinasidemenu', 'rinasidecenter', 'rinasidecenter', 'rinasidecenter', 'rinasidesearch']);\n\n  }\n\n  getSearchObject(searchObject: any) {\n    let response: any;\n      this.showLoader = true;\n      if(searchObject.searchType === 4) {\n        searchObject.searchId = searchObject.searchId.replace('/', '-');\n      }\n      this._httpService.fetch('customer/search/' + searchObject.searchId + '/' + searchObject.searchType, 'get').subscribe(\n        (res: any) => {\n          response = res;\n        },\n        (error: any)=>{\n          this.showLoader = false;\n          this.warningMsg = 'Something went wrong';\n          this.warningdialogue = true;\n        },\n        ()=>{\n          if (response.success) {\n            this.showLoader = false;\n            this.customerModel = <CustomerProfile>response.response;\n            this.vehicle = this.customerModel.vehicles[0];\n            this.createPropertyStructure();\n            this._personalDetailsService.setPersonalDetailsForCcm(this.customerModel);\n            this.serviceList[0].disabled = false;\n          } else {\n            this.serviceList[0].disabled = true;\n            this.showLoader = false;\n            this.warningMsg = response.errorMessage;\n            // this.warningMsg = 'Record not found for ' + msgtype[searchObject.searchType] + ' (' + searchObject.searchId + ')';\n            this.warningdialogue = true;\n            this.defaultData();\n          }\n        }\n      );\n  }\n\n  createCustomerDetailsPropertyStructure() {\n    this.customerKeyValuedata = [];\n    this.customerKeyValuedata.push(new PropertyGridModel('Customer ID', this.customerModel.customerId));\n    this.customerKeyValuedata.push(new PropertyGridModel('Mobile #', this.customerModel.mobile));\n    this.customerKeyValuedata.push(new PropertyGridModel('Name', this.customerModel.name));\n    this.customerKeyValuedata.push(new PropertyGridModel('Company', this.customerModel.companyName));\n    this.customerKeyValuedata.push(new PropertyGridModel('Emirates ID', this.customerModel.uaeId));\n    this.customerKeyValuedata.push(new PropertyGridModel('Email', this.customerModel.email));\n    this.customerKeyValuedata.push(new PropertyGridModel('Alt Number', this.customerModel.altNumber));\n    this.customerKeyValuedata.push(new PropertyGridModel('Birthday', this.customerModel.birthday));\n    this.customerKeyValuedata.push(new PropertyGridModel('Anniversary', this.customerModel.anniversary));\n  }\n\n  createVehicleDetailsPropertyStructure() {\n    this.vehicleKeyValuedata = [];\n    this.vehicleKeyValuedata.push(new PropertyGridModel('BU', this.vehicle.bu));\n    this.vehicleKeyValuedata.push(new PropertyGridModel('Vehicle', this.vehicle.vehicleDetail.modelName));\n    this.vehicleKeyValuedata.push(new PropertyGridModel('Date of Purchase', this.vehicle.dateOfPurchase));\n    this.vehicleKeyValuedata.push(new PropertyGridModel('Model Year', this.vehicle.vehicleDetail.modelYear));\n    this.vehicleKeyValuedata.push(new PropertyGridModel('Registration No', this.vehicle.registrationNo));\n    this.vehicleKeyValuedata.push(new PropertyGridModel('Customer Class', this.customerModel.customerClass));\n    this.vehicleKeyValuedata.push(new PropertyGridModel('Preferred Mode of Contact', this.customerModel.preferredModeOfContact));\n  }\n\n  createServiceHistoryPropertyStructure() {\n    this.serviceKeyValuedata = [];\n    this.serviceKeyValuedata.push(new PropertyGridModel('Last Service', this.vehicle.lastService));\n    this.serviceKeyValuedata.push(new PropertyGridModel('Next Service', this.vehicle.nextService));\n    this.serviceKeyValuedata.push(new PropertyGridModel('Open SRs', this.vehicle.openSRs));\n  }\n\n  handleError() {\n    this.defaultData();\n  }\n\n  getSelectedVehicle(vehicle: VehiclesInterface) {\n   this.vehicle = vehicle;\n   this.createVehicleDetailsPropertyStructure();\n   this.createServiceHistoryPropertyStructure();\n  }\n\n  defaultData() {\n    this.customerModel = new CustomerProfile();\n    this.vehicle = new Vehicles();\n    this.createPropertyStructure();\n  }\n\n  createPropertyStructure() {\n    this.createCustomerDetailsPropertyStructure();\n    this.createVehicleDetailsPropertyStructure();\n    this.createServiceHistoryPropertyStructure();\n  }\n\n\n  serviceTypeClickHandle(event: any) {\n    this.windowEnable = true;\n    this.currentstep = 2;\n  }\n\n  scheduleAppointment(serviceModel: ServiceAvailibilityModel) {\n    this._personalDetailsService.setPeferredLocation(serviceModel);\n    this.currentstep = this._windowTService.getNextWindow(this.currentstep);\n  }\n\n  onServiceConfirmPrevious(event: any) {\n    this.currentstep = this._windowTService.getPreviousWindow(this.currentstep);\n  }\n  onCloseClick() {\n    this.currentstep = -1;\n    this.windowEnable = false;\n    this.serviceModel = new ServiceAvailibilityModel();\n    this._personalDetailsService.resetServiceData();\n\n  }\n  onAppointmentConfirm(event: any) {\n    const pModel = this._personalDetailsService.getPersonalDetails();\n    const fullName =  pModel.firstName + pModel.surname;\n    const serModel = this._personalDetailsService.getPeferredLocation();\n    this.appointmentMsg = 'Service has been booked on ' + this.datePipe.transform(serModel.appointmentDate, 'MMM dd, yyyy') + ' at ' + serModel.selectedSlot + ' for ' + fullName + '.';\n    this.currentstep = this._windowTService.getNextWindow(this.currentstep);\n  }\n\n  onPrevious() {\n    this.currentstep = this._windowTService.getPreviousWindow(this.currentstep - 1);\n  }\n\n  onBeforeConfirmClickHandle(event: any) {\n    this.currentstep = this._windowTService.getNextWindow(this.currentstep);\n  }\n\n  onBeforeBackHandle(event: any) {\n    this.currentstep = this._windowTService.getPreviousWindow(this.currentstep);\n  }\n  onVehicleListHandle(personalDetails: PersonalDetails) {\n    this._personalDetailsService.setPersonalDetails(personalDetails);\n    this.currentstep = this._windowTService.getNextWindow(this.currentstep + 1);\n  }\n  vehicleListBack(event: any) {\n   this.onCloseClick();\n  }\n\n\n  onServiceTypeNextHandle(event: any) {\n    this._personalDetailsService.setExtraServiceData(event);\n    this.currentstep = this._windowTService.getNextWindow(this.currentstep);\n  }\n\n  onServiceTypeBackHandle(event: any) {\n    this.currentstep = this._windowTService.getPreviousWindow(this.currentstep);\n  }\n\n\n  createServiceHistoryDataStructure() {\n    this.serviceHistoryData1 = [];\n    this.serviceHistoryData2 = [];\n    this.serviceHistoryData1.push(new PropertyGridModel('Last Service', '09/30/2018 @ 90208 km'));\n    this.serviceHistoryData1.push(new PropertyGridModel('Next Service Due', '03/20/2019 @ 105282 km'));\n    this.serviceHistoryData1.push(new PropertyGridModel('Date Last work', '09/30/2018 @ 90208 km'));\n    this.serviceHistoryData1.push(new PropertyGridModel('Service Contact Number', ''));\n    this.serviceHistoryData1.push(new PropertyGridModel('Timing belt mileage', '0  or 0 months'));\n    this.serviceHistoryData2.push(new PropertyGridModel('Last MOT Date', ''));\n    this.serviceHistoryData2.push(new PropertyGridModel('MOT Due', '12/20/2017'));\n    this.serviceHistoryData2.push(new PropertyGridModel('Return Parts', ''));\n    this.serviceHistoryData2.push(new PropertyGridModel('Return Parts', ''));\n    this.serviceHistoryData2.push(new PropertyGridModel('Emissions', '0.0'));\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}