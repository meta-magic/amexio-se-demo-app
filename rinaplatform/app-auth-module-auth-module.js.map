{"version":3,"sources":["webpack:///./src/app/auth-module/auth-store/auth.action.ts","webpack:///./src/app/auth-module/auth-store/auth.reducer.ts","webpack:///./src/app/auth-module/auth.module.ts","webpack:///./src/app/auth-module/login/login.component.html","webpack:///./src/app/auth-module/login/login.component.ts","webpack:///./src/app/models/login.model.ts"],"names":[],"mappings":"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","file":"app-auth-module-auth-module.js","sourcesContent":["/**\n * Created by dattaram on 11/4/19.\n */\nimport {Action} from \"redux\";\nexport enum AuthenticationActionType {\n  AddLoginInfo  = 'AddLoginInfo'\n}\n\n\n\nexport class AddLoginInfo implements Action {\n  readonly type: string = AuthenticationActionType.AddLoginInfo;\n  constructor(public data: any) {\n  }\n}\n\n\n/* UNION OF ALL ACTION */\n\nexport type AuthenticationActions = AddLoginInfo;\n","/**\n * Created by dattaram on 11/4/19.\n */\n\n\n/* INITIAL STATE OF PRODUCT STATE */\n\n/* INITIAL STATE OF PRODUCT STATE */\n\nimport {AuthenticationActions, AuthenticationActionType} from \"./auth.action\";\nconst initialState: fromAuthentication.AuthenticationState = {\n  loginInfo: {}\n};\n\n\n\n/* EXTENDING ROOT APP STATE */\n\n/*export interface State extends RootAppState {\n  products: ProductState;\n}*/\n\n/* PRODUCT STATE INTERFACE */\n\nexport namespace fromAuthentication {\n\n  export interface AuthenticationState {\n    loginInfo: any;\n  }\n\n}\n\nexport function authReducer(state = initialState, action: AuthenticationActions) {\n  switch (action.type) {\n    case AuthenticationActionType.AddLoginInfo:\n      return {\n        ...state,\n        loginInfo: action.data\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Created by dattaram on 11/4/19.\n */\nimport {NgModule} from '@angular/core';\nimport {LoginComponent} from './login/login.component';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport {StoreModule} from '@ngrx/store';\nimport {authReducer} from \"./auth-store/auth.reducer\";\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule, AmexioWidgetModule,ReactiveFormsModule,\n    StoreModule.forFeature('authentication', authReducer),\n    HttpClientModule, FormsModule, RouterModule.forChild(routes)],\n  exports: [LoginComponent],\n  declarations: [LoginComponent],\n  providers: [HttpClient],\n})\nexport class AuthModule {\n}\n","module.exports = \"<amexio-spinner [show]=\\\"showLoader\\\" [type]=\\\"'rectanglebounce'\\\" [vertical-position]=\\\"'center'\\\" [horizontal-position]=\\\"'center'\\\" [color]=\\\"'yellow'\\\">\\n</amexio-spinner>\\n<div class=\\\"login-page-div\\\">\\n\\n \\n   <amexio-nav [transparent]=\\\"true\\\" [enable-side-nav-position]=\\\"true\\\" class=\\\"ok\\\" [title]=\\\"'RINA Platform'\\\" [logo]=\\\"'assets/images/rinalogo.png'\\\">\\n   </amexio-nav>\\n  <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'center'\\\">\\n    <amexio-layout-item>\\n      <amexio-layout-columns [fit]=\\\"true\\\" [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'end'\\\">\\n        <amexio-layout-item>  &nbsp; </amexio-layout-item>\\n        <amexio-layout-item class=\\\"login-page\\\">\\n          <div [formGroup]=\\\"signInGroup\\\">\\n            <amexio-card-ce>\\n\\n              <amexio-header-ce [border-bottom]=\\\"true\\\">\\n                <amexio-label size=\\\"large-bold\\\">\\n                  Login\\n                </amexio-label>\\n              </amexio-header-ce>\\n\\n              <amexio-body-ce>\\n                <amexio-layout-columns [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'start'\\\" [orientation]=\\\"'vertical'\\\">\\n                  <amexio-layout-item>\\n                    <amexio-text-input formControlName=\\\"email\\\" [field-label]=\\\"'User Id'\\\" name=\\\"email\\\"\\n                      [place-holder]=\\\"'Enter User Id'\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"loginModel.userId\\\"\\n                      [error-msg]=\\\"'Please Enter User Id'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-text-input>\\n\\n                  </amexio-layout-item>\\n                  <amexio-layout-item>\\n                    <amexio-password-input formControlName=\\\"Password\\\" [field-label]=\\\"'Password'\\\" name=\\\"password\\\"\\n                      [place-holder]=\\\"'Enter password'\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"loginModel.password\\\"\\n                      [error-msg]=\\\"'Please Enter password'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-password-input>\\n                  </amexio-layout-item>\\n                </amexio-layout-columns>\\n              </amexio-body-ce>\\n              <amexio-action-ce [align]=\\\"'center'\\\" [border-top]=\\\"true\\\">\\n                <amexio-button [icon]=\\\"'fa fa-sign-in'\\\" [disabled]=\\\"!signInGroup.valid\\\" [label]=\\\"'Login'\\\" [type]=\\\"'theme-color'\\\"\\n                  (onClick)=\\\"loginHandle()\\\" [tooltip]=\\\"'Login'\\\" [block]=\\\"true\\\">\\n                </amexio-button>\\n              </amexio-action-ce>\\n\\n            </amexio-card-ce>\\n          </div>\\n\\n        </amexio-layout-item>\\n        <amexio-layout-item> &nbsp;</amexio-layout-item>\\n      </amexio-layout-columns>\\n\\n    </amexio-layout-item>\\n  </amexio-layout-columns>\\n</div>\\n  <amexio-notification\\n        [data]=\\\"errorMsgData\\\"\\n        [vertical-position]=\\\"'top'\\\"\\n        [horizontal-position]=\\\"'right'\\\"\\n        [close-on-escape] =\\\"true\\\"\\n        [background-color]=\\\"'red'\\\"\\n        [auto-dismiss-msg]=\\\"false\\\"\\n        [auto-dismiss-msg-interval]=\\\"6000\\\">\\n      </amexio-notification>\"","\n/**\n * Created by dattaram on 11/4/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {LoginModel} from '../../models/login.model';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from \"@angular/router\";\nimport { Store} from '@ngrx/store';\nimport {fromAuthentication} from \"../auth-store/auth.reducer\";\nimport {AddLoginInfo} from \"../auth-store/auth.action\";\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {Auth_URL} from \"../../constant/service.constant\";\n\n\n@Component({\n  selector: 'login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements OnInit {\n  loginModel: LoginModel;\n  signInGroup:FormGroup;\n  showLoader:boolean=false;\n  errorMsgData:any[]=[];\n  constructor(private _httpClient: HttpClient, private fb: FormBuilder,\n              private store: Store<fromAuthentication.AuthenticationState>,\n              private _router: Router) {\n    this.loginModel = new LoginModel();\n  }\n  ngOnInit() {\n    this.validateSigninform();\n/*\n    this.store\n      .select<any>((state: any) => state.authentication)\n      .subscribe((customerState: any) => {\n          console.log(customerState);\n      }\n      );*/\n  }\n   validateSigninform(){\n    this.signInGroup = this.fb.group({\n        email: ['', [Validators.required]],\n        Password: ['', [Validators.required]],\n\n      });\n  }\n  loginHandle() {\n    debugger;\n    let response: any;\n    this.showLoader=true;\n    this._httpClient.post(Auth_URL, this.loginModel).subscribe(\n      (res: any) => {\n        response = res;\n      },\n        (error: any) => {\n          console.log(error);\n          this.showLoader=false;\n        },\n        () => {\n        if(response.success) {\n          this.changethemes(response.response.theme);\n          this.store.dispatch(new AddLoginInfo({'userId': response.response.userId, 'tenantId': response.response.tenantId,'gamification':response.response.gamification}));\n          this._router.navigate(['home']);\n          this.showLoader=false;\n        }else{\n          this.errorMsgData.push('Please Enter valid UserId / Password');\n        this.showLoader=false;\n        }\n\n        }\n      );\n  }\n  changethemes(theme:any){\n    if(theme && theme.length>0){\n       theme.forEach((style: any) => {\n            document.documentElement.style.setProperty(style.key, style.value);\n        });\n    }\n      \n  }\n\n\n\n\n\n  \n}\n","\n/**\n * Created by dattaram on 11/4/19.\n */\n export class LoginModel {\n   userId: string;\n   password: string;\n   constructor() {\n     this.userId = '';\n     this.password = '';\n   }\n}\n"],"sourceRoot":""}