{"version":3,"sources":["webpack:///./src/app/pages/maps/maps.component.ts","webpack:///./src/app/pages/maps/maps.html","webpack:///./src/app/pages/maps/maps.module.ts"],"names":[],"mappings":"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","file":"pages-maps-maps-module.js","sourcesContent":["/**\n * Created by sagar on 2/8/17.\n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'maps',\n  templateUrl: 'maps.html'\n})\n\nexport class MapsComponent implements OnInit {\n  geoChartData:any;\n  treeMapData:any;\n  constructor() {\n    this.geoChartData=[\n      ['Country', 'Popularity'],\n      ['Germany', 200],\n      ['United States', 300],\n      ['Brazil', 400],\n      ['Canada', 500],\n      ['France', 550],\n      ['RU', 350],\n      ['India',700]\n    ];\n    this.treeMapData=[\n      ['Location', 'Parent', 'Market trade volume (size)', 'Market increase/decrease (color)'],\n      ['Global',    null,                 0,                               0],\n      ['America',   'Global',             0,                               0],\n      ['Europe',    'Global',             0,                               0],\n      ['Asia',      'Global',             0,                               0],\n      ['Australia', 'Global',             0,                               0],\n      ['Africa',    'Global',             0,                               0],\n      ['Brazil',    'America',            11,                              10],\n      ['USA',       'America',            52,                              31],\n      ['Mexico',    'America',            24,                              12],\n      ['Canada',    'America',            16,                              -23],\n      ['France',    'Europe',             42,                              -11],\n      ['Germany',   'Europe',             31,                              -2],\n      ['Sweden',    'Europe',             22,                              -13],\n      ['Italy',     'Europe',             17,                              4],\n      ['UK',        'Europe',             21,                              -5],\n      ['China',     'Asia',               36,                              4],\n      ['Japan',     'Asia',               20,                              -12],\n      ['India',     'Asia',               40,                              63],\n      ['Laos',      'Asia',               4,                               34],\n      ['Mongolia',  'Asia',               1,                               -5],\n      ['Israel',    'Asia',               12,                              24],\n      ['Iran',      'Asia',               18,                              13],\n      ['Pakistan',  'Asia',               11,                              -52],\n      ['Egypt',     'Africa',             21,                              0],\n      ['S. Africa', 'Africa',             30,                              43],\n      ['Sudan',     'Africa',             12,                              2],\n      ['Congo',     'Africa',             10,                              12],\n      ['Zaire',     'Africa',             8,                               10]\n    ];\n  }\n  ngOnInit() { }\n}\n","module.exports = \"<amexio-row>\\n<amexio-column [size]=\\\"12\\\">\\n    <amexio-card [footer]=\\\"false\\\" [header]=\\\"true\\\">\\n      <amexio-header>Region Geo-Charts</amexio-header>\\n      <amexio-body>\\n        <amexio-map-geo-chart [height]=\\\"'500px'\\\" [width]=\\\"'100%'\\\" [data]=\\\"geoChartData\\\">\\n        </amexio-map-geo-chart>\\n      </amexio-body>\\n    </amexio-card>\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n  <amexio-column [size]=\\\"12\\\">\\n    <amexio-card [footer]=\\\"false\\\" [header]=\\\"true\\\">\\n      <amexio-header>Treemaps</amexio-header>\\n      <amexio-body>\\n        <amexio-map-treemap [height]=\\\"'500px'\\\" [width]=\\\"'100%'\\\" [data]=\\\"treeMapData\\\"\\n                            [max-color]=\\\"'#0d0'\\\" [mid-color]=\\\"'#ddd'\\\" [min-color]=\\\"'#f00'\\\" [max-post-depth]=\\\"2\\\" [show-scale]=\\\"true\\\">\\n        </amexio-map-treemap>\\n      </amexio-body>\\n    </amexio-card>\\n  </amexio-column>\\n</amexio-row>\\n\"","/**\n * Created by sagar on 2/8/17.\n */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MapsComponent} from \"./maps.component\";\nimport{MapLoaderService} from \"amexio-ng-extensions\";\nimport {AmexioWidgetModule,AmexioMapModule} from \"amexio-ng-extensions\";\n\nconst routes: Routes = [\n  { path: '', component: MapsComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,FormsModule,\n    RouterModule.forChild(routes),\n    AmexioMapModule,\n    AmexioWidgetModule\n  ],\n  exports: [RouterModule],\n  declarations : [\n    MapsComponent\n  ],\n  providers : [MapLoaderService]\n})\nexport class MapsModule { }\n"],"sourceRoot":""}