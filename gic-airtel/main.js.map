{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-account/add-account.component.html","webpack:///./src/app/components/add-account/add-account.component.ts","webpack:///./src/app/components/charges/chargeclaculation/chargeclaculation.component.html","webpack:///./src/app/components/charges/chargeclaculation/chargeclaculation.component.ts","webpack:///./src/app/components/charges/commancharges/commancharges.component.css","webpack:///./src/app/components/charges/commancharges/commancharges.component.html","webpack:///./src/app/components/charges/commancharges/commancharges.component.ts","webpack:///./src/app/components/charges/internetcharges/internetcharges.component.css","webpack:///./src/app/components/charges/internetcharges/internetcharges.component.html","webpack:///./src/app/components/charges/internetcharges/internetcharges.component.ts","webpack:///./src/app/components/charges/mplscharges/mplscharges.component.css","webpack:///./src/app/components/charges/mplscharges/mplscharges.component.html","webpack:///./src/app/components/charges/mplscharges/mplscharges.component.ts","webpack:///./src/app/components/charges/nldandlocalloopcharges/nldandlocalloopcharges.component.css","webpack:///./src/app/components/charges/nldandlocalloopcharges/nldandlocalloopcharges.component.html","webpack:///./src/app/components/charges/nldandlocalloopcharges/nldandlocalloopcharges.component.ts","webpack:///./src/app/components/contactdetails/contactdetails.component.html","webpack:///./src/app/components/contactdetails/contactdetails.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/new-order/new-order.component.html","webpack:///./src/app/components/new-order/new-order.component.ts","webpack:///./src/app/components/order/internet/internet.order.component.ts","webpack:///./src/app/components/order/internet/internet_order_details.component.html","webpack:///./src/app/components/order/mpls/mpls.order.component.ts","webpack:///./src/app/components/order/mpls/mpls_order_details.component.html","webpack:///./src/app/components/order/order-details/order-details.component.html","webpack:///./src/app/components/order/order-details/order-details.component.ts","webpack:///./src/app/components/search-customer/search-customer.component.html","webpack:///./src/app/components/search-customer/search-customer.component.ts","webpack:///./src/app/constants/app.constant.ts","webpack:///./src/app/models/charges/commancharges.model.ts","webpack:///./src/app/models/charges/internetcharges.model.ts","webpack:///./src/app/models/charges/mplscharges.model.ts","webpack:///./src/app/models/charges/nldandlocalloop.model.ts","webpack:///./src/app/models/contactdetails.model.ts","webpack:///./src/app/models/login.model.ts","webpack:///./src/app/models/order.model.ts","webpack:///./src/app/models/order/common.order.model.ts","webpack:///./src/app/models/order/internetorder.model.ts","webpack:///./src/app/models/order/mplsorder.model.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {SearchCustomerComponent} from \"./components/search-customer/search-customer.component\";\nimport {AddAccountComponent} from \"./components/add-account/add-account.component\";\nimport {NewOrderComponent} from \"./components/new-order/new-order.component\";\nimport {ContactdetailsComponent} from \"./components/contactdetails/contactdetails.component\";\nimport {OrderDetailsComponent} from \"./components/order/order-details/order-details.component\";\nimport {ChargeClaculationComponent} from \"./components/charges/chargeclaculation/chargeclaculation.component\";\n\nconst routes: Routes = [\n  {\n    path: '', redirectTo: 'login', pathMatch: 'full'\n  },\n  {\n    path: 'login', component: LoginComponent\n  },\n  {\n    path: 'home', component: HomeComponent,\n    children: [\n      {\n        path: 'searchcust' , component : SearchCustomerComponent\n      },\n      {\n        path: 'addaccount' , component : AddAccountComponent\n      },\n      {\n        path: 'neworder' , component : NewOrderComponent\n      },\n      {\n        path: 'addcontdetails' , component : ContactdetailsComponent\n      },\n      {\n        path: 'orderdetails' , component : OrderDetailsComponent\n      },\n      {\n        path: 'chargecal' , component : ChargeClaculationComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n  static componentList = [\n    LoginComponent,\n    HomeComponent,\n    SearchCustomerComponent,\n    AddAccountComponent,\n    NewOrderComponent,\n    ContactdetailsComponent,\n    OrderDetailsComponent,\n    ChargeClaculationComponent\n  ];\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport {SwUpdate} from '@angular/service-worker';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Airtel-PWA asdadsa';\n\n\n  constructor(updates: SwUpdate) {\n    updates.available.subscribe((event => {\n      updates.activateUpdate().then(() => document.location.reload());\n\n    }));\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {MplsChargesComponent} from \"./components/charges/mplscharges/mplscharges.component\";\nimport {InternetChargesComponent} from \"./components/charges/internetcharges/internetcharges.component\";\nimport {NldandLocalloopChargesComponent} from \"./components/charges/nldandlocalloopcharges/nldandlocalloopcharges.component\";\nimport {CommanChargesComponent} from \"./components/charges/commancharges/commancharges.component\";\nimport {InternetOrderComponent} from \"./components/order/internet/internet.order.component\";\nimport {MPLSComponent} from \"./components/order/mpls/mpls.order.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppRoutingModule.componentList,\n    InternetChargesComponent,\n    MplsChargesComponent,\n    NldandLocalloopChargesComponent,\n    CommanChargesComponent,\n    InternetOrderComponent,\n    MPLSComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AmexioWidgetModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h1> WIP</h1>\\n\"","/**\n * Created by dattaram on 25/4/19.\n */\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'add-account',\n  templateUrl: 'add-account.component.html'\n})\n\nexport class AddAccountComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"<ng-container *ngIf=\\\"productType == '1'\\\">\\n<app-internetcharges></app-internetcharges>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"productType == '2'\\\">\\n  <app-mplscharges></app-mplscharges>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"productType == '3' || productType == '4'\\\">\\n  <app-nldandlocalloopcharges></app-nldandlocalloopcharges>\\n</ng-container>\\n\"","/**\n * Created by dattaram on 26/4/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {DataService} from \"../../../services/data.service\";\nimport {Router} from \"@angular/router\";\nimport {HttpService} from \"../../../services/http.service\";\n\n@Component({\n  selector: 'charge-claculation',\n  templateUrl: 'chargeclaculation.component.html'\n})\n\nexport class ChargeClaculationComponent implements OnInit {\n  productType: string;\n  constructor(private _httpService: HttpService,\n              private _router: Router,\n              private _dataService: DataService) {\n  }\n\n  ngOnInit() {\n    this.productType = this._dataService.order.productType;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhcmdlcy9jb21tYW5jaGFyZ2VzL2NvbW1hbmNoYXJnZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n               <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n              <amexio-text-input\\n                  [(ngModel)]=\\\"commanChargesModel.totalOrderValue\\\"\\n                    name =\\\"Total Order Value\\\"\\n                    [field-label]=\\\"'Total Order Value'\\\"\\n                    [place-holder]=\\\"'Total Order Value '\\\"\\n                   >\\n               </amexio-text-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                <amexio-dropdown\\n                [(ngModel)]=\\\"commanChargesModel.currency\\\"\\n                [place-holder]=\\\"'Choose currency'\\\"\\n                 name=\\\"Currency\\\"\\n                 [data-reader] = \\\"'data'\\\"\\n                [field-label]=\\\"'Currency'\\\"\\n                [http-url]=\\\"'assets/data/currency.json'\\\"\\n                [http-method]=\\\"'get'\\\"\\n                [display-field]=\\\"'primaryDisplay'\\\"\\n                [value-field]=\\\"'primaryKey'\\\"\\n                [enable-sort]=\\\"true\\\"\\n                [sort]=\\\"'asc'\\\">\\n              </amexio-dropdown>\\n                </amexio-column>\\n              </amexio-row>\\n\\n            <amexio-row>\\n              <amexio-column size=\\\"6\\\">\\n                  <amexio-dropdown\\n                  [(ngModel)]=\\\"commanChargesModel.currencyDetails\\\"\\n                  [place-holder]=\\\"' Choose Currency Details'\\\"\\n                   name=\\\"Currency Details\\\"\\n                   [data-reader] = \\\"'data'\\\"\\n                  [field-label]=\\\"'Currency Details'\\\"\\n                  [http-url]=\\\"'assets/data/currencydetails.json'\\\"\\n                  [http-method]=\\\"'get'\\\"\\n                  [display-field]=\\\"'primaryDisplay'\\\"\\n                  [value-field]=\\\"'primaryKey'\\\"\\n                  [enable-sort]=\\\"true\\\"\\n                  [sort]=\\\"'asc'\\\">\\n                </amexio-dropdown>\\n              </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                  <amexio-dropdown\\n                  [(ngModel)]=\\\"commanChargesModel.billingCycle\\\"\\n                  [place-holder]=\\\"' Choose Billing Cycle'\\\"\\n                   name=\\\"Billing Cycle\\\"\\n                   [data-reader] = \\\"'data'\\\"\\n                  [field-label]=\\\"'Billing Cycle'\\\"\\n                  [http-url]=\\\"'assets/data/billingcycle.json'\\\"\\n                  [http-method]=\\\"'get'\\\"\\n                  [display-field]=\\\"'primaryDisplay'\\\"\\n                  [value-field]=\\\"'primaryKey'\\\"\\n                  [enable-sort]=\\\"true\\\"\\n                  [sort]=\\\"'asc'\\\">\\n                </amexio-dropdown>\\n            </amexio-column>\\n            </amexio-row>\\n\\n            <amexio-row>\\n              <amexio-column size=\\\"6\\\">\\n                  <amexio-dropdown\\n                  [(ngModel)]=\\\"commanChargesModel.billFormat\\\"\\n                  [place-holder]=\\\"' Choose Bill Format'\\\"\\n                   name=\\\"Bill Format\\\"\\n                   [data-reader] = \\\"'data'\\\"\\n                  [field-label]=\\\"'Bill Format'\\\"\\n                  [http-url]=\\\"'assets/data/billformat.json'\\\"\\n                  [http-method]=\\\"'get'\\\"\\n                  [display-field]=\\\"'primaryDisplay'\\\"\\n                  [value-field]=\\\"'primaryKey'\\\"\\n                  [enable-sort]=\\\"true\\\"\\n                  [sort]=\\\"'asc'\\\">\\n                </amexio-dropdown>\\n               </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                  <amexio-text-input\\n                  [(ngModel)]=\\\"commanChargesModel.taxation\\\"\\n                    name =\\\"Taxation\\\"\\n                    [field-label]=\\\"'Taxation'\\\"\\n                    [place-holder]=\\\"'Enter Taxation '\\\"\\n                   >\\n               </amexio-text-input>\\n              </amexio-column>\\n            </amexio-row>\\n\\n            <amexio-row>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input\\n                    [(ngModel)]=\\\"commanChargesModel.standardReason\\\"\\n                      name =\\\"Standard Reason\\\"\\n                      [field-label]=\\\"'Standard Reason'\\\"\\n                      [place-holder]=\\\"' Enter Standard Reason '\\\"\\n                     >\\n                 </amexio-text-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input\\n                    [(ngModel)]=\\\"commanChargesModel.noticePeriod\\\"\\n                    name =\\\"Notice Period\\\"\\n                    [field-label]=\\\"'Notice Period'\\\"\\n                    [place-holder]=\\\"' Enter Notice Period '\\\"\\n                   >\\n               </amexio-text-input>\\n                </amexio-column>\\n              </amexio-row>\\n              <amexio-row>\\n                <amexio-column size=\\\"6\\\" >\\n                    <amexio-text-input\\n                    [enable-popover]=\\\"true\\\"\\n                    [(ngModel)]=\\\"commanChargesModel.Comments\\\"\\n                    field-label=\\\"Comments\\\"\\n                    [place-holder]=\\\"' Enter Comments'\\\"\\n                    name =\\\"Comments\\\"\\n                   [icon-feedback]=\\\"true\\\"\\n                   >\\n              </amexio-text-input>\\n                </amexio-column>\\n              </amexio-row>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CommanChargesModel} from \"../../../models/charges/commancharges.model\";\n\n@Component({\n  selector: 'app-commancharges',\n  templateUrl: './commancharges.component.html',\n  styleUrls: ['./commancharges.component.css']\n})\nexport class CommanChargesComponent implements OnInit {\n  commanChargesModel: CommanChargesModel;\n  constructor() {\n\n    this.commanChargesModel = new CommanChargesModel();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhcmdlcy9pbnRlcm5ldGNoYXJnZXMvaW50ZXJuZXRjaGFyZ2VzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<amexio-row>\\n  <amexio-column [fit]=\\\"true\\\" [size]=\\\"12\\\">\\n\\n                      <amexio-card [body-height]=\\\"80\\\"  [footer]=\\\"false\\\" [header]=\\\"true\\\">\\n                        <amexio-header>\\n                          Internet Charges\\n                        </amexio-header>\\n                          <amexio-body>\\n\\n                            <app-commancharges></app-commancharges>\\n\\n                                <amexio-row>\\n                                        <amexio-column size=\\\"3\\\">\\n                                           <b>One Time Charges [A]</b>\\n                                        </amexio-column>\\n                                        <amexio-column size=\\\"3\\\">\\n                                         <b>Annual Recurring Charges [B]</b>\\n                                        </amexio-column>\\n                                        <amexio-column size=\\\"3\\\">\\n                                          <b> Order Term [C]</b>\\n\\n                                        </amexio-column>\\n                                        <amexio-column size=\\\"3\\\">\\n                                                <b>Total[D]</b>\\n                                        </amexio-column>\\n                                      </amexio-row>\\n               <amexio-row>\\n                <amexio-column size=\\\"3\\\">\\n              <amexio-number-input\\n                  [(ngModel)]=\\\"internetchargesModel.internetBWOTC\\\"\\n                    name =\\\"Internet BW One Time Charges\\\"\\n                    [field-label]=\\\"'Internet BW '\\\"\\n                    [place-holder]=\\\"' Internet BW One Time Charges'\\\"\\n                   >\\n               </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input\\n                    [(ngModel)]=\\\"internetchargesModel.internetARC\\\"\\n                      name =\\\"Internet BW Annual Recurring Charges \\\"\\n                      [field-label]=\\\"'Internet BW '\\\"\\n                      [place-holder]=\\\"' Internet BW Annual Recurring Charges  '\\\"\\n                     >\\n                 </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input\\n                    [(ngModel)]=\\\"internetchargesModel.internetBWOT\\\"\\n                      name =\\\"Internet BW Order Term\\\"\\n                      [field-label]=\\\"'Internet BW'\\\"\\n                      [place-holder]=\\\"'Internet BW Order Term '\\\"\\n                     >\\n                 </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"3\\\">\\n                    <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._internetBW}}</amexio-label>\\n                </amexio-column>\\n              </amexio-row>\\n\\n              <amexio-row>\\n                  <amexio-column size=\\\"3\\\">\\n                <amexio-number-input\\n                    [(ngModel)]=\\\"internetchargesModel.portChargesOTC\\\"\\n                      name =\\\"Port Charges One Time Charges\\\"\\n                      [field-label]=\\\"'Port Charges '\\\"\\n                      [place-holder]=\\\"'Port Charges One Time Charges'\\\"\\n                     >\\n                 </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                      <amexio-number-input\\n                      [(ngModel)]=\\\"internetchargesModel.portChargesARC\\\"\\n                        name =\\\"Port Charges Annual Recurring Charges \\\"\\n                        [field-label]=\\\"'Port Charges'\\\"\\n                        [place-holder]=\\\"' Port Charges Annual Recurring Charges  '\\\"\\n                       >\\n                   </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                      <amexio-number-input\\n                      [(ngModel)]=\\\"internetchargesModel.portChargesOT\\\"\\n                        name =\\\"Port Charges Order Term \\\"\\n                        [field-label]=\\\"'Port Charges'\\\"\\n                        [place-holder]=\\\"'Port Charges Order Term'\\\"\\n                       >\\n                   </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                      <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._portCharges}}</amexio-label>\\n                  </amexio-column>\\n                </amexio-row>\\n\\n                <amexio-row>\\n                    <amexio-column size=\\\"3\\\">\\n                  <amexio-number-input\\n                      [(ngModel)]=\\\"internetchargesModel.offPeakHoursBWOTC\\\"\\n                        name =\\\"Off Peak Hours BW One Time Charges\\\"\\n                        [field-label]=\\\"'Off Peak Hours BW '\\\"\\n                        [place-holder]=\\\"'Off Peak Hours BW  One Time Charges '\\\"\\n                       >\\n                   </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                        <amexio-number-input\\n                        [(ngModel)]=\\\"internetchargesModel.offPeakHoursBWARC\\\"\\n                          name =\\\"Off Peak Hours BW Annual Recurring Charges  \\\"\\n                          [field-label]=\\\"'Off Peak Hours BW '\\\"\\n                          [place-holder]=\\\"' Off Peak Hours BW Annual Recurring Charges  '\\\"\\n                         >\\n                     </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                        <amexio-number-input\\n                        [(ngModel)]=\\\"internetchargesModel.offPeakHoursBWOT\\\"\\n                          name =\\\"Off Peak Hours BW Order Term\\\"\\n                          [field-label]=\\\"'Off Peak Hours BW'\\\"\\n                          [place-holder]=\\\"'Off Peak Hours BW Order Term'\\\"\\n                         >\\n                     </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                        <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._offPeakHoursBW}}</amexio-label>\\n                    </amexio-column>\\n                  </amexio-row>\\n\\n\\n                  <amexio-row>\\n                      <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input\\n                        [(ngModel)]=\\\"internetchargesModel.primaryLastMileOTC\\\"\\n                          name =\\\"Primary Last Mile One Time Charges\\\"\\n                          [field-label]=\\\"'Primary Last Mile  '\\\"\\n                          [place-holder]=\\\"'Primary Last Mile One Time Charges '\\\"\\n                         >\\n                     </amexio-number-input>\\n                      </amexio-column>\\n                      <amexio-column size=\\\"3\\\">\\n                          <amexio-number-input\\n                          [(ngModel)]=\\\"internetchargesModel.primaryLastMileARC\\\"\\n                            name =\\\"Primary Last Mile Annual Recurring Charges\\\"\\n                            [field-label]=\\\"'Primary Last Mile  '\\\"\\n                            [place-holder]=\\\"' Primary Last Mile Annual Recurring Charges'\\\"\\n                           >\\n                       </amexio-number-input>\\n                      </amexio-column>\\n                      <amexio-column size=\\\"3\\\">\\n                          <amexio-number-input\\n                          [(ngModel)]=\\\"internetchargesModel.primaryLastMileOT\\\"\\n                            name =\\\"Primary Last Mile Order Term\\\"\\n                            [field-label]=\\\"'Primary Last Mile '\\\"\\n                            [place-holder]=\\\"'Primary Last Mile Order Term  '\\\"\\n                           >\\n                       </amexio-number-input>\\n                      </amexio-column>\\n                      <amexio-column size=\\\"3\\\">\\n                          <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._primaryLastMile}}</amexio-label>\\n                      </amexio-column>\\n                    </amexio-row>\\n\\n                    <amexio-row>\\n                        <amexio-column size=\\\"3\\\">\\n                      <amexio-number-input\\n                          [(ngModel)]=\\\"internetchargesModel.secondaryLastMileOTC\\\"\\n                            name =\\\"Secondary Last Mile One Time Charges\\\"\\n                            [field-label]=\\\"'Secondary Last Mile   '\\\"\\n                            [place-holder]=\\\"'Secondary Last Mile One Time Charges  '\\\"\\n                           >\\n                       </amexio-number-input>\\n                        </amexio-column>\\n                        <amexio-column size=\\\"3\\\">\\n                            <amexio-number-input\\n                            [(ngModel)]=\\\"internetchargesModel.secondaryLastMileARC\\\"\\n                              name =\\\"Secondary Last Mile Annual Recurring Charges  \\\"\\n                              [field-label]=\\\"'Secondary Last Mile  '\\\"\\n                              [place-holder]=\\\"' Secondary Last Mile Annual Recurring Charges   '\\\"\\n                             >\\n                         </amexio-number-input>\\n                        </amexio-column>\\n                        <amexio-column size=\\\"3\\\">\\n                            <amexio-number-input\\n                            [(ngModel)]=\\\"internetchargesModel.secondaryLastMileOT\\\"\\n                              name =\\\"Secondary Last Mile Order Term\\\"\\n                              [field-label]=\\\"'Secondary Last Mile '\\\"\\n                              [place-holder]=\\\"'Secondary Last Mile Order Term  '\\\"\\n                             >\\n                         </amexio-number-input>\\n                        </amexio-column>\\n                        <amexio-column size=\\\"3\\\">\\n                            <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._secondaryLastMile}}</amexio-label>\\n                        </amexio-column>\\n                      </amexio-row>\\n\\n                      <amexio-row>\\n                          <amexio-column size=\\\"3\\\">\\n                        <amexio-number-input\\n                            [(ngModel)]=\\\"internetchargesModel.dDoSOTC\\\"\\n                              name =\\\"DDoS One Time Charges ''\\\"\\n                              [field-label]=\\\"'DDoS   '\\\"\\n                              [place-holder]=\\\"'DDoS One Time Charges '\\\"\\n                             >\\n                         </amexio-number-input>\\n                          </amexio-column>\\n                          <amexio-column size=\\\"3\\\">\\n                              <amexio-number-input\\n                              [(ngModel)]=\\\"internetchargesModel.dDoSARC\\\"\\n                                name =\\\"DDoS Annual Recurring Charges \\\"\\n                                [field-label]=\\\"'DDoS  '\\\"\\n                                [place-holder]=\\\"' DDoS Annual Recurring Charges '\\\"\\n                               >\\n                           </amexio-number-input>\\n                          </amexio-column>\\n                          <amexio-column size=\\\"3\\\">\\n                              <amexio-number-input\\n                              [(ngModel)]=\\\"internetchargesModel.dDoSOT\\\"\\n                                name =\\\"DDoS Order Term\\\"\\n                                [field-label]=\\\"'DDoS'\\\"\\n                                [place-holder]=\\\"'DDoS Order Term'\\\"\\n                               >\\n                           </amexio-number-input>\\n                          </amexio-column>\\n                          <amexio-column size=\\\"3\\\">\\n                              <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._dDoS}}</amexio-label>\\n                          </amexio-column>\\n                        </amexio-row>\\n\\n                        <amexio-row>\\n                            <amexio-column size=\\\"3\\\">\\n                          <amexio-number-input\\n                              [(ngModel)]=\\\"internetchargesModel.routerOTC\\\"\\n                                name =\\\"Router One Time Charges\\\"\\n                                [field-label]=\\\"'Router   '\\\"\\n                                [place-holder]=\\\"'Router One Time Charges'\\\"\\n                               >\\n                           </amexio-number-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"3\\\">\\n                                <amexio-number-input\\n                                [(ngModel)]=\\\"internetchargesModel.routerARC\\\"\\n                                  name =\\\"Router Annual Recurring Charges \\\"\\n                                  [field-label]=\\\"'Router '\\\"\\n                                  [place-holder]=\\\"' Router Annual Recurring Charges '\\\"\\n                                 >\\n                             </amexio-number-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"3\\\">\\n                                <amexio-number-input\\n                                [(ngModel)]=\\\"internetchargesModel.routerOT\\\"\\n                                  name =\\\"Router Order Term\\\"\\n                                  [field-label]=\\\"'Router'\\\"\\n                                  [place-holder]=\\\"'Router Order Term'\\\"\\n                                 >\\n                             </amexio-number-input>\\n                            </amexio-column>\\n                            <amexio-column size=\\\"3\\\">\\n                                <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._router}}</amexio-label>\\n                            </amexio-column>\\n                          </amexio-row>\\n\\n                          <amexio-row>\\n                              <amexio-column size=\\\"3\\\">\\n                            <amexio-number-input\\n                                [(ngModel)]=\\\"internetchargesModel.modemOTC\\\"\\n                                  name =\\\"Modem One Time Charges'\\\"\\n                                  [field-label]=\\\"'Modem '\\\"\\n                                  [place-holder]=\\\"'Modem One Time Charges'\\\"\\n                                 >\\n                             </amexio-number-input>\\n                              </amexio-column>\\n                              <amexio-column size=\\\"3\\\">\\n                                  <amexio-number-input\\n                                  [(ngModel)]=\\\"internetchargesModel.modemARC\\\"\\n                                    name =\\\"Modem Annual Recurring Charges\\\"\\n                                    [field-label]=\\\"'Modem  '\\\"\\n                                    [place-holder]=\\\"' Modem Annual Recurring Charges'\\\"\\n                                   >\\n                               </amexio-number-input>\\n                              </amexio-column>\\n                              <amexio-column size=\\\"3\\\">\\n                                  <amexio-number-input\\n                                  [(ngModel)]=\\\"internetchargesModel.modemOT\\\"\\n                                    name =\\\"Modem Order Term\\\"\\n                                    [field-label]=\\\"'Modem'\\\"\\n                                    [place-holder]=\\\"'Modem Order Term'\\\"\\n                                   >\\n                               </amexio-number-input>\\n                              </amexio-column>\\n                              <amexio-column size=\\\"3\\\">\\n                                  <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._modem}}</amexio-label>\\n                              </amexio-column>\\n                            </amexio-row>\\n\\n                            <amexio-row>\\n                                <amexio-column size=\\\"3\\\">\\n                              <amexio-number-input\\n                                  [(ngModel)]=\\\"internetchargesModel.converterOTC\\\"\\n                                    name =\\\"Converter One Time Charges\\\"\\n                                    [field-label]=\\\"'Converter '\\\"\\n                                    [place-holder]=\\\"'Converter One Time Charges '\\\"\\n                                   >\\n                               </amexio-number-input>\\n                                </amexio-column>\\n                                <amexio-column size=\\\"3\\\">\\n                                    <amexio-number-input\\n                                    [(ngModel)]=\\\"internetchargesModel.converterARC\\\"\\n                                      name =\\\"Converter Annual Recurring Charges\\\"\\n                                      [field-label]=\\\"'Converter  '\\\"\\n                                      [place-holder]=\\\"' Converter Annual Recurring Charges '\\\"\\n                                     >\\n                                 </amexio-number-input>\\n                                </amexio-column>\\n                                <amexio-column size=\\\"3\\\">\\n                                    <amexio-number-input\\n                                    [(ngModel)]=\\\"internetchargesModel.converterOT\\\"\\n                                      name =\\\"Converter Order Term\\\"\\n                                      [field-label]=\\\"'Converter'\\\"\\n                                      [place-holder]=\\\"'Converter Order Term '\\\"\\n                                     >\\n                                 </amexio-number-input>\\n                                </amexio-column>\\n                                <amexio-column size=\\\"3\\\">\\n                                    <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._converter}}</amexio-label>\\n                                </amexio-column>\\n                              </amexio-row>\\n                              <amexio-row>\\n                                  <amexio-column size=\\\"3\\\">\\n                                <amexio-number-input\\n                                    [(ngModel)]=\\\"internetchargesModel.dDosCpeOTC\\\"\\n                                      name =\\\"DosCpe One Time Charges\\\"\\n                                      [field-label]=\\\"'DosCpe '\\\"\\n                                      [place-holder]=\\\"'DosCpe One Time Charges'\\\"\\n                                     >\\n                                 </amexio-number-input>\\n                                  </amexio-column>\\n                                  <amexio-column size=\\\"3\\\">\\n                                      <amexio-number-input\\n                                      [(ngModel)]=\\\"internetchargesModel.dDosCpeARC\\\"\\n                                        name =\\\"DosCpe  Annual Recurring Charges\\\"\\n                                        [field-label]=\\\"'DosCpe  '\\\"\\n                                        [place-holder]=\\\"' DosCpe  Annual Recurring Charges'\\\"\\n                                       >\\n                                   </amexio-number-input>\\n                                  </amexio-column>\\n                                  <amexio-column size=\\\"3\\\">\\n                                      <amexio-number-input\\n                                      [(ngModel)]=\\\"internetchargesModel.dDosCpeOT\\\"\\n                                        name =\\\"DosCpe Order Term\\\"\\n                                        [field-label]=\\\"'DosCpe '\\\"\\n                                        [place-holder]=\\\"'DosCpe Order Term'\\\"\\n                                       >\\n                                   </amexio-number-input>\\n                                  </amexio-column>\\n                                  <amexio-column size=\\\"3\\\">\\n                                      <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._dDosCpe}}</amexio-label>\\n                                  </amexio-column>\\n                                </amexio-row>\\n                                <amexio-row>\\n                                    <amexio-column size=\\\"3\\\">\\n                                  <amexio-number-input\\n                                      [(ngModel)]=\\\"internetchargesModel.otherHardwareOTC\\\"\\n                                        name =\\\"Other Hardware One Time Charges\\\"\\n                                        [field-label]=\\\"'Other Hardware'\\\"\\n                                        [place-holder]=\\\"'Other Hardware One Time Charges '\\\"\\n                                       >\\n                                   </amexio-number-input>\\n                                    </amexio-column>\\n                                    <amexio-column size=\\\"3\\\">\\n                                        <amexio-number-input\\n                                        [(ngModel)]=\\\"internetchargesModel.otherHardwareARC\\\"\\n                                          name =\\\"Other Hardware Annual Recurring Charges\\\"\\n                                          [field-label]=\\\"'Other Hardware'\\\"\\n                                          [place-holder]=\\\"'Other Hardware Annual Recurring Charges'\\\"\\n                                         >\\n                                     </amexio-number-input>\\n                                    </amexio-column>\\n                                    <amexio-column size=\\\"3\\\">\\n                                        <amexio-number-input\\n                                        [(ngModel)]=\\\"internetchargesModel.otherHardwareOT\\\"\\n                                          name =\\\"Other Hardware Order Term\\\"\\n                                          [field-label]=\\\"'Other Hardware '\\\"\\n                                          [place-holder]=\\\"'Other Hardware Order Term '\\\"\\n                                         >\\n                                     </amexio-number-input>\\n                                    </amexio-column>\\n\\n                                    <amexio-column size=\\\"3\\\">\\n                                        <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._otherHardware}}</amexio-label>\\n                                    </amexio-column>\\n                                  </amexio-row>\\n                                  <amexio-row>\\n                                      <amexio-column size=\\\"3\\\">\\n                                    <amexio-number-input\\n                                        [(ngModel)]=\\\"internetchargesModel.hardwareAMCOTC\\\"\\n                                          name =\\\"Hardware AMC One Time Charges '\\\"\\n                                          [field-label]=\\\"'Hardware AMC '\\\"\\n                                          [place-holder]=\\\"'Hardware AMC  One Time Charges '\\\"\\n                                         >\\n                                     </amexio-number-input>\\n                                      </amexio-column>\\n                                      <amexio-column size=\\\"3\\\">\\n                                          <amexio-number-input\\n                                          [(ngModel)]=\\\"internetchargesModel.hardwareAMCARC\\\"\\n                                            name =\\\"Hardware AMC Annual Recurring Charges\\\"\\n                                            [field-label]=\\\"'Hardware AMC  '\\\"\\n                                            [place-holder]=\\\"'Hardware AMC Annual Recurring Charges'\\\"\\n                                           >\\n                                       </amexio-number-input>\\n                                      </amexio-column>\\n                                      <amexio-column size=\\\"3\\\">\\n                                          <amexio-number-input\\n                                          [(ngModel)]=\\\"internetchargesModel.hardwareAMCOT\\\"\\n                                            name =\\\"Hardware AMC Order Term\\\"\\n                                            [field-label]=\\\"'Hardware AMC'\\\"\\n                                            [place-holder]=\\\"'Hardware AMC Order Term '\\\"\\n                                           >\\n                                       </amexio-number-input>\\n                                      </amexio-column>\\n                                      <amexio-column size=\\\"3\\\">\\n                                          <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._hardwareAMC}}</amexio-label>\\n                                      </amexio-column>\\n                                    </amexio-row>\\n\\n\\n                                      <amexio-row>\\n                                          <amexio-column size=\\\"3\\\">\\n                                        <amexio-number-input\\n                                            [(ngModel)]=\\\"internetchargesModel.linkMgmtChargesOTC\\\"\\n                                              name =\\\"Link Mgmt One Time Charges\\\"\\n                                              [field-label]=\\\"'Link Mgmt Charges  '\\\"\\n                                              [place-holder]=\\\"'Link Mgmt One Time Charges'\\\"\\n                                             >\\n                                         </amexio-number-input>\\n                                          </amexio-column>\\n                                          <amexio-column size=\\\"3\\\">\\n                                              <amexio-number-input\\n                                              [(ngModel)]=\\\"internetchargesModel.linkMgmtChargesARC\\\"\\n                                                name =\\\"Link Mgmt Charges Annual Recurring Charges\\\"\\n                                                [field-label]=\\\"'Link Mgmt Charges '\\\"\\n                                                [place-holder]=\\\"'Link Mgmt Charges Annual Recurring Charges'\\\"\\n                                               >\\n                                           </amexio-number-input>\\n                                          </amexio-column>\\n                                          <amexio-column size=\\\"3\\\">\\n                                              <amexio-number-input\\n                                              [(ngModel)]=\\\"internetchargesModel.linkMgmtChargesOT\\\"\\n                                                name =\\\"Link Mgmt Charges Order Term \\\"\\n                                                [field-label]=\\\"'Link Mgmt Charges '\\\"\\n                                                [place-holder]=\\\"'Link Mgmt Charges Order Term   '\\\"\\n                                               >\\n                                           </amexio-number-input>\\n                                          </amexio-column>\\n                                          <amexio-column size=\\\"3\\\">\\n                                              <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._linkMgmtCharges}}</amexio-label>\\n                                          </amexio-column>\\n                                        </amexio-row>\\n\\n\\n                                        <amexio-row>\\n                                            <amexio-column size=\\\"3\\\">\\n                                          <amexio-number-input\\n                                              [(ngModel)]=\\\"internetchargesModel.managedSerivcesOTC\\\"\\n                                                name =\\\"Managed Serivces One Time Charges \\\"\\n                                                [field-label]=\\\"'Managed Serivces '\\\"\\n                                                [place-holder]=\\\"'Managed Serivces One Time Charges '\\\"\\n                                               >\\n                                           </amexio-number-input>\\n                                            </amexio-column>\\n                                            <amexio-column size=\\\"3\\\">\\n                                                <amexio-number-input\\n                                                [(ngModel)]=\\\"internetchargesModel.managedSerivcesARC\\\"\\n                                                  name =\\\"Managed Serivces Annual Recurring Charges \\\"\\n                                                  [field-label]=\\\"'Managed Serivces '\\\"\\n                                                  [place-holder]=\\\"'Managed Serivces Annual Recurring Charges'\\\"\\n                                                 >\\n                                             </amexio-number-input>\\n                                            </amexio-column>\\n                                            <amexio-column size=\\\"3\\\">\\n                                                <amexio-number-input\\n                                                [(ngModel)]=\\\"internetchargesModel.managedSerivcesOT\\\"\\n                                                  name =\\\"Managed Serivces Order Term \\\"\\n                                                  [field-label]=\\\"'Managed Serivces Charges '\\\"\\n                                                  [place-holder]=\\\"'Managed Serivces Charges Order Term   '\\\"\\n                                                 >\\n                                             </amexio-number-input>\\n                                            </amexio-column>\\n                                            <amexio-column size=\\\"3\\\">\\n                                                <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._managedSerivces}}</amexio-label>\\n                                            </amexio-column>\\n                                          </amexio-row>\\n\\n                                          <amexio-row>\\n                                              <amexio-column size=\\\"3\\\">\\n                                            <amexio-number-input\\n                                                [(ngModel)]=\\\"internetchargesModel.otherChargesOTC\\\"\\n                                                  name =\\\"Other charges One Time Charges\\\"\\n                                                  [field-label]=\\\"'Other charges '\\\"\\n                                                  [place-holder]=\\\"'Other charges One Time Charges'\\\"\\n                                                 >\\n                                             </amexio-number-input>\\n                                              </amexio-column>\\n                                              <amexio-column size=\\\"3\\\">\\n                                                  <amexio-number-input\\n                                                  [(ngModel)]=\\\"internetchargesModel.otherChargesARC\\\"\\n                                                    name =\\\"Other charges Annual Recurring Charges\\\"\\n                                                    [field-label]=\\\"'Other Charges '\\\"\\n                                                    [place-holder]=\\\"'Other Charges Annual Recurring Charges'\\\"\\n                                                   >\\n                                               </amexio-number-input>\\n                                              </amexio-column>\\n                                              <amexio-column size=\\\"3\\\">\\n                                                  <amexio-number-input\\n                                                  [(ngModel)]=\\\"internetchargesModel.otherChargesOT\\\"\\n                                                    name =\\\"Other Charges Order Term \\\"\\n                                                    [field-label]=\\\"'Other Charges '\\\"\\n                                                    [place-holder]=\\\"'Other Charges Order Term'\\\"\\n                                                   >\\n                                               </amexio-number-input>\\n                                              </amexio-column>\\n                                              <amexio-column size=\\\"3\\\">\\n                                                  <amexio-label [font-color]=\\\"fontColor\\\"> {{internetchargesModel._otherCharges}}</amexio-label>\\n                                              </amexio-column>\\n                                            </amexio-row>\\n                                            <amexio-row>\\n                                                <amexio-column size=\\\"3\\\">\\n                                                      <amexio-text-input\\n                                                      [(ngModel)]=\\\"internetchargesModel.minCommittedBWMRC\\\"\\n                                                       name=\\\"Min. Committed BW (MRC / Unit)\\\"\\n                                                       [place-holder]=\\\"'Min. Committed BW (MRC / Unit) '\\\"\\n                                                      field-label=\\\"Min. Committed BW (MRC / Unit)\\\"\\n                                                      >\\n                                                    </amexio-text-input>\\n                                                </amexio-column>\\n                                                <amexio-column size=\\\"3\\\">\\n                                                      <amexio-text-input\\n                                                      [(ngModel)]=\\\"internetchargesModel.minCommittedBWARC\\\"\\n                                                       name=\\\"Min. Committed BW (ARC / Unit)\\\"\\n                                                       [place-holder]=\\\"'Min. Committed BW (ARC / Unit)'\\\"\\n                                                      field-label=\\\"Min. Committed BW (ARC / Unit)\\\"\\n                                                      >\\n                                                    </amexio-text-input>\\n                                                </amexio-column>\\n                                                <amexio-column size=\\\"3\\\">\\n                                                    <amexio-text-input\\n                                                    [(ngModel)]=\\\"internetchargesModel.burstBWMRC\\\"\\n                                                     name=\\\"Burst BW (MRC / Unit)\\\"\\n                                                     [place-holder]=\\\"'Burst BW (MRC / Unit)'\\\"\\n                                                    field-label=\\\"Burst BW (MRC / Unit)\\\"\\n                                                    >\\n                                                  </amexio-text-input>\\n                                              </amexio-column>\\n                                              </amexio-row>\\n\\n                                              <amexio-row>\\n                                                  <amexio-column size=\\\"3\\\">\\n                                                        <amexio-text-input\\n                                                        [(ngModel)]=\\\"internetchargesModel.burstBWARC\\\"\\n                                                         name=\\\"Burst BW (ARC / Unit)\\\"\\n                                                         [place-holder]=\\\"'Burst BW (ARC / Unit)'\\\"\\n                                                        field-label=\\\"Burst BW (ARC / Unit)\\\"\\n                                                        >\\n                                                      </amexio-text-input>\\n                                                  </amexio-column>\\n                                                  <amexio-column size=\\\"3\\\">\\n                                                        <amexio-text-input\\n                                                        [(ngModel)]=\\\"internetchargesModel.volumeCharges\\\"\\n                                                         name=\\\"Volume Charges / GB\\\"\\n                                                         [place-holder]=\\\"'Volume Charges / GB'\\\"\\n                                                        field-label=\\\"Volume Charges / GB\\\"\\n                                                        >\\n                                                      </amexio-text-input>\\n                                                  </amexio-column>\\n                                                  <amexio-column size=\\\"3\\\">\\n                                                      <amexio-text-input\\n                                                      [(ngModel)]=\\\"internetchargesModel.burstCharges\\\"\\n                                                       name=\\\"Burst Charges / GB\\\"\\n                                                       [place-holder]=\\\"'Burst Charges / GB'\\\"\\n                                                      field-label=\\\"Burst Charges / GB\\\"\\n                                                      >\\n                                                    </amexio-text-input>\\n                                                </amexio-column>\\n                                                </amexio-row>\\n\\n\\n\\n\\n\\n\\n\\n               </amexio-body>\\n               <!-- <amexio-action>\\n                  <amexio-toolbar>\\n                      <amexio-toolbar-item position-left [seperator-position]=\\\"'right'\\\">\\n\\n                              <amexio-button [label]=\\\"'Submit'\\\"  [form-bind]=\\\"'commanchargefieldForm'\\\"  [tooltip]=\\\"'Submit'\\\"  [icon]=\\\"'fa fa-paper-plane'\\\" (onClick)=\\\"saveInfo()\\\"\\n                             [type]=\\\"'green'\\\"></amexio-button>\\n\\n                        </amexio-toolbar-item>\\n                  </amexio-toolbar>\\n                </amexio-action> -->\\n            </amexio-card>\\n            </amexio-column>\\n          </amexio-row>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {InternetChargesModel} from \"../../../models/charges/internetcharges.model\";\n@Component({\n  selector: 'app-internetcharges',\n  templateUrl: './internetcharges.component.html',\n  styleUrls: ['./internetcharges.component.css']\n})\nexport class InternetChargesComponent implements OnInit {\n  internetchargesModel: InternetChargesModel;\n  fontColor = \"#351CB0\";\n  constructor() {\n    this.internetchargesModel = new InternetChargesModel();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhcmdlcy9tcGxzY2hhcmdlcy9tcGxzY2hhcmdlcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<amexio-row>\\n  <amexio-column [fit]=\\\"true\\\" [size]=\\\"12\\\">\\n    <amexio-card [body-height]=\\\"80\\\" [footer]=\\\"false\\\" [header]=\\\"true\\\">\\n      <amexio-header>\\n        MPLS Charges\\n      </amexio-header>\\n      <amexio-body>\\n        <app-commancharges></app-commancharges>\\n          <amexio-row>\\n            <amexio-column size=\\\"3\\\">\\n              <b>One Time Charges [A]</b>\\n           </amexio-column>\\n           <amexio-column size=\\\"3\\\">\\n            <b>Annual Recurring Charges [B]</b>\\n           </amexio-column>\\n           <amexio-column size=\\\"3\\\">\\n             <b> Order Term [C]</b>\\n\\n           </amexio-column>\\n           <amexio-column size=\\\"3\\\">\\n                   <b>Total[D]</b>\\n           </amexio-column>\\n            </amexio-row>\\n        <amexio-row>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.installationCommissioningOTC\\\" name=\\\"Installation & Commissioning  One Time Charges \\\"\\n              [field-label]=\\\"'Installation & Commissioning '\\\" [place-holder]=\\\"'Enter Installation & Commissioning  One Time Charges  '\\\">\\n            </amexio-number-input>\\n          </amexio-column>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.installationCommissioningARC\\\" name=\\\"Installation & Commissioning Annual Recurring Charges \\\"\\n              [field-label]=\\\"'Installation & Commissioning '\\\" [place-holder]=\\\"' Installation & Commissioning  Annual Recurring Charges'\\\">\\n            </amexio-number-input>\\n          </amexio-column>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.installationCommissioningOT\\\" name=\\\"Installation & Commissioning Order Term \\\"\\n              [field-label]=\\\"'Installation & Commissioning '\\\" [place-holder]=\\\"'Installation & Commissioning Order Term  '\\\">\\n            </amexio-number-input>\\n          </amexio-column>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-label [font-color]=\\\"fontColor\\\"> {{mplsChrgesModel._installationCommissioning}}</amexio-label>\\n          </amexio-column>\\n        </amexio-row>\\n\\n        <amexio-row>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.primaryMPLSBandwidthOTC\\\" name=\\\"Primary MPLS Bandwidth  One Time Charges \\\"\\n              [field-label]=\\\"'Primary MPLS Bandwidth  '\\\" [place-holder]=\\\"'Primary MPLS Bandwidth  One Time Charges  '\\\">\\n            </amexio-number-input>\\n          </amexio-column>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.primaryMPLSBandwidthARC\\\" name=\\\"Primary MPLS Bandwidth Annual Recurring Charges \\\"\\n              [field-label]=\\\"'Primary MPLS Bandwidth '\\\" [place-holder]=\\\"' Primary MPLS Bandwidth  Annual Recurring Charges'\\\">\\n            </amexio-number-input>\\n          </amexio-column>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.primaryMPLSBandwidthOT\\\" name=\\\"Primary MPLS Bandwidth Order Term \\\" [field-label]=\\\"'Primary MPLS Bandwidth'\\\"\\n              [place-holder]=\\\"'Primary MPLS Bandwidth  Order Term  '\\\">\\n            </amexio-number-input>\\n          </amexio-column>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-label [font-color]=\\\"fontColor\\\"> {{mplsChrgesModel._primaryMPLSBandwidth}}</amexio-label>\\n          </amexio-column>\\n        </amexio-row>\\n\\n        <amexio-row>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.secondaryMPLSBandwidthOTC\\\" name=\\\"Secondary MPLS Bandwidth  One Time Charges \\\"\\n              [field-label]=\\\"'Secondary MPLS Bandwidth'\\\" [place-holder]=\\\"'Secondary MPLS Bandwidth  One Time Charges'\\\">\\n            </amexio-number-input>\\n          </amexio-column>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.secondaryMPLSBandwidthARC\\\" name=\\\"secondary MPLS Bandwidth Annual Recurring Charges\\\"\\n              [field-label]=\\\"'Secondary MPLS Bandwidth '\\\" [place-holder]=\\\"' Secondary MPLS Bandwidth Annual Recurring Charges '\\\">\\n            </amexio-number-input>\\n          </amexio-column>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.secondaryMPLSBandwidthOT\\\" name=\\\"Secondary MPLS Bandwidth  Order Term \\\" [field-label]=\\\"'Secondary MPLS Bandwidth'\\\"\\n              [place-holder]=\\\"'Secondary MPLS Bandwidth  Order Term '\\\">\\n            </amexio-number-input>\\n          </amexio-column>\\n          <amexio-column size=\\\"3\\\">\\n            <amexio-label [font-color]=\\\"fontColor\\\"> {{mplsChrgesModel._secondaryMPLSBandwidth}}</amexio-label>\\n          </amexio-column>\\n        </amexio-row>\\n\\n        <amexio-row>\\n            <amexio-column size=\\\"3\\\">\\n              <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.lastMileBandwidthOTC\\\" name=\\\"Last Mile Bandwidth  One Time Charges \\\"\\n                [field-label]=\\\"'Last Mile Bandwidth'\\\" [place-holder]=\\\"'Last Mile Bandwidth  One Time Charges'\\\">\\n              </amexio-number-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"3\\\">\\n              <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.lastMileBandwidthARC\\\" name=\\\"Last Mile Bandwidth Annual Recurring Charges\\\"\\n                [field-label]=\\\"'Last Mile Bandwidth '\\\" [place-holder]=\\\"' Last Mile Bandwidth Annual Recurring Charges'\\\">\\n              </amexio-number-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"3\\\">\\n              <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.lastMileBandwidthOT\\\" name=\\\"Last Mile Bandwidth  Order Term\\\" [field-label]=\\\"'Last Mile Bandwidth'\\\"\\n                [place-holder]=\\\"'Last Mile Bandwidth  Order Term '\\\">\\n              </amexio-number-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"3\\\">\\n              <amexio-label [font-color]=\\\"fontColor\\\"> {{mplsChrgesModel._lastMileBandwidth}}</amexio-label>\\n            </amexio-column>\\n          </amexio-row>\\n\\n          <amexio-row>\\n              <amexio-column size=\\\"3\\\">\\n                <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.routerOTC\\\" name=\\\"Router  One Time Charges \\\"\\n                  [field-label]=\\\"'Router'\\\" [place-holder]=\\\"'Router  One Time Charges'\\\">\\n                </amexio-number-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"3\\\">\\n                <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.routerARC\\\" name=\\\"Router Annual Recurring Charges\\\"\\n                  [field-label]=\\\"'Router'\\\" [place-holder]=\\\"' Router Annual Recurring Charges'\\\">\\n                </amexio-number-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"3\\\">\\n                <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.routerOT\\\" name=\\\"Router  Order Term\\\" [field-label]=\\\"'Router'\\\"\\n                  [place-holder]=\\\"'Router  Order Term '\\\">\\n                </amexio-number-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"3\\\">\\n                <amexio-label [font-color]=\\\"fontColor\\\"> {{mplsChrgesModel._router}}</amexio-label>\\n              </amexio-column>\\n            </amexio-row>\\n\\n            <amexio-row>\\n                <amexio-column size=\\\"3\\\">\\n                  <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.modemOTC\\\" name=\\\"Modem  One Time Charges \\\"\\n                    [field-label]=\\\"'Modem'\\\" [place-holder]=\\\"'Modem  One Time Charges'\\\">\\n                  </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"3\\\">\\n                  <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.modemARC\\\" name=\\\"Modem Annual Recurring Charges\\\"\\n                    [field-label]=\\\"'Modem'\\\" [place-holder]=\\\"' Modem Annual Recurring Charges'\\\">\\n                  </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"3\\\">\\n                  <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.modemOT\\\" name=\\\"Modem  Order Term\\\" [field-label]=\\\"'Modem'\\\"\\n                    [place-holder]=\\\"'Modem  Order Term'\\\">\\n                  </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"3\\\">\\n                  <amexio-label [font-color]=\\\"fontColor\\\"> {{mplsChrgesModel._modem}}</amexio-label>\\n                </amexio-column>\\n              </amexio-row>\\n\\n              <amexio-row>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.othersOTC\\\" name=\\\"Others  One Time Charges \\\"\\n                      [field-label]=\\\"'Others'\\\" [place-holder]=\\\"'Others  One Time Charges'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.othersARC\\\" name=\\\"Others Annual Recurring Charges\\\"\\n                      [field-label]=\\\"'Others'\\\" [place-holder]=\\\"' Others Annual Recurring Charges'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.othersOT\\\" name=\\\"Others  Order Term\\\" [field-label]=\\\"'Others'\\\"\\n                      [place-holder]=\\\"'Others  Order Term'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-label [font-color]=\\\"fontColor\\\"> {{mplsChrgesModel._others}}</amexio-label>\\n                  </amexio-column>\\n                </amexio-row>\\n\\n\\n                <amexio-row>\\n                    <amexio-column size=\\\"3\\\">\\n                      <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.managedSerivcesOTC\\\" name=\\\" Managed Serivces  One Time Charges\\\"\\n                        [field-label]=\\\"'Managed Serivces'\\\" [place-holder]=\\\"'Managed Serivces One Time Charges'\\\">\\n                      </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                      <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.managedSerivcesARC\\\" name=\\\"Managed Serivces Annual Recurring Charges\\\"\\n                        [field-label]=\\\"'Managed Serivces'\\\" [place-holder]=\\\"' Managed Serivces Annual Recurring Charges'\\\">\\n                      </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                      <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.managedSerivcesOT\\\" name=\\\"Managed Serivces  Order Term\\\" [field-label]=\\\"'Managed Serivces'\\\"\\n                        [place-holder]=\\\"'Managed Serivces  Order Term'\\\">\\n                      </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                      <amexio-label [font-color]=\\\"fontColor\\\"> {{mplsChrgesModel._managedSerivces}}</amexio-label>\\n                    </amexio-column>\\n                  </amexio-row>\\n\\n                  <amexio-row>\\n                      <amexio-column size=\\\"3\\\">\\n                        <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.otherChargesOTC\\\" name=\\\" Other Charges One Time Charges\\\"\\n                          [field-label]=\\\"'Other Charges'\\\" [place-holder]=\\\"'Other Charges One Time Charges'\\\">\\n                        </amexio-number-input>\\n                      </amexio-column>\\n                      <amexio-column size=\\\"3\\\">\\n                        <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.otherChargesARC\\\" name=\\\"Other Charges Annual Recurring Charges\\\"\\n                          [field-label]=\\\"'Other Charges'\\\" [place-holder]=\\\"'Other Charges Annual Recurring Charges'\\\">\\n                        </amexio-number-input>\\n                      </amexio-column>\\n                      <amexio-column size=\\\"3\\\">\\n                        <amexio-number-input [(ngModel)]=\\\"mplsChrgesModel.otherChargesOT\\\" name=\\\"Other Charges  Order Term\\\" [field-label]=\\\"'Other Charges'\\\"\\n                          [place-holder]=\\\"'Other Charges  Order Term'\\\">\\n                        </amexio-number-input>\\n                      </amexio-column>\\n                      <amexio-column size=\\\"3\\\">\\n                        <amexio-label [font-color]=\\\"fontColor\\\"> {{mplsChrgesModel._otherCharges}}</amexio-label>\\n                      </amexio-column>\\n                    </amexio-row>\\n      </amexio-body>\\n      <!-- <amexio-action>\\n                  <amexio-toolbar>\\n                      <amexio-toolbar-item position-left [seperator-position]=\\\"'right'\\\">\\n\\n                              <amexio-button [label]=\\\"'Submit'\\\"  [form-bind]=\\\"'commanchargefieldForm'\\\"  [tooltip]=\\\"'Submit'\\\"  [icon]=\\\"'fa fa-paper-plane'\\\" (onClick)=\\\"saveInfo()\\\"\\n                             [type]=\\\"'green'\\\"></amexio-button>\\n\\n                        </amexio-toolbar-item>\\n                  </amexio-toolbar>\\n                </amexio-action> -->\\n    </amexio-card>\\n  </amexio-column>\\n</amexio-row>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MplsChargesModel} from \"../../../models/charges/mplscharges.model\";\n\n@Component({\n  selector: 'app-mplscharges',\n  templateUrl: './mplscharges.component.html',\n  styleUrls: ['./mplscharges.component.css']\n})\nexport class MplsChargesComponent implements OnInit {\nmplsChrgesModel:MplsChargesModel;\nfontColor = \"#351CB0\";\n  constructor() {\nthis.mplsChrgesModel = new MplsChargesModel();\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhcmdlcy9ubGRhbmRsb2NhbGxvb3BjaGFyZ2VzL25sZGFuZGxvY2FsbG9vcGNoYXJnZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<amexio-row>\\n    <amexio-column [fit]=\\\"true\\\" [size]=\\\"12\\\">\\n      <amexio-card [body-height]=\\\"80\\\"  [footer]=\\\"false\\\" [header]=\\\"true\\\">\\n        <amexio-header>\\n          NLD And Local Loop Charges\\n        </amexio-header>\\n        <amexio-body>\\n          <app-commancharges></app-commancharges>\\n            <amexio-row>\\n              <amexio-column size=\\\"3\\\">\\n                <b>One Time Charges [A]</b>\\n             </amexio-column>\\n             <amexio-column size=\\\"3\\\">\\n              <b>Annual Recurring Charges [B]</b>\\n             </amexio-column>\\n             <amexio-column size=\\\"3\\\">\\n               <b> Order Term [C]</b>\\n\\n             </amexio-column>\\n             <amexio-column size=\\\"3\\\">\\n                     <b>Total[D]</b>\\n             </amexio-column>\\n              </amexio-row>\\n          <amexio-row>\\n            <amexio-column size=\\\"3\\\">\\n              <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.nLDLocalLoopBandwidthOTC\\\" name=\\\"NLD / Local Loop Bandwidth One Time Charges \\\"\\n                [field-label]=\\\"'NLD / Local Loop Bandwidth '\\\" [place-holder]=\\\"'NLD / Local Loop Bandwidth One Time Charges '\\\">\\n              </amexio-number-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"3\\\">\\n              <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.nLDLocalLoopBandwidthARC\\\" name=\\\"NLD / Local Loop Bandwidth Annual Recurring Charges\\\"\\n                [field-label]=\\\"'NLD / Local Loop Bandwidth'\\\" [place-holder]=\\\"'NLD / Local Loop Bandwidth Annual Recurring Charges'\\\">\\n              </amexio-number-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"3\\\">\\n              <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.nLDLocalLoopBandwidthOT\\\" name=\\\"NLD / Local Loop Bandwidth Order Term\\\"\\n                [field-label]=\\\"'NLD / Local Loop Bandwidth '\\\" [place-holder]=\\\"'NLD / Local Loop Bandwidth Order Term '\\\">\\n              </amexio-number-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"3\\\">\\n              <amexio-label [font-color]=\\\"fontColor\\\" > {{nldAndLocalLoopModel._nLDLocalLoopBandwidth}}</amexio-label>\\n            </amexio-column>\\n          </amexio-row>\\n\\n          <amexio-row>\\n              <amexio-column size=\\\"3\\\">\\n                <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.modemConvertorOTC\\\" name=\\\"Modem / Convertor One Time Charges \\\"\\n                  [field-label]=\\\"'Modem / Convertor '\\\" [place-holder]=\\\"'Modem / Convertor One Time Charges '\\\">\\n                </amexio-number-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"3\\\">\\n                <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.modemConvertorARC\\\" name=\\\"Modem / Convertor Annual Recurring Charges\\\"\\n                  [field-label]=\\\"'Modem / Convertor'\\\" [place-holder]=\\\"'Modem / Convertor Annual Recurring Charges '\\\">\\n                </amexio-number-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"3\\\">\\n                <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.modemConvertorOT\\\" name=\\\"Modem / Convertor Order Term\\\"\\n                  [field-label]=\\\"'Modem / Convertor '\\\" [place-holder]=\\\"'Modem / Convertor Order Term'\\\">\\n                </amexio-number-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"3\\\">\\n                <amexio-label [font-color]=\\\"fontColor\\\"> {{nldAndLocalLoopModel._modemConvertor}}</amexio-label>\\n              </amexio-column>\\n            </amexio-row>\\n\\n            <amexio-row>\\n                <amexio-column size=\\\"3\\\">\\n                  <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.routerOTC\\\" name=\\\"Router One Time Charges\\\"\\n                    [field-label]=\\\"'Router'\\\" [place-holder]=\\\"'Router One Time Charges '\\\">\\n                  </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"3\\\">\\n                  <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.routerARC\\\" name=\\\"Router Annual Recurring Charges\\\"\\n                    [field-label]=\\\"'Router'\\\" [place-holder]=\\\"'Router Annual Recurring Charges '\\\">\\n                  </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"3\\\">\\n                  <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.routerOT\\\" name=\\\"Router Order Term\\\"\\n                    [field-label]=\\\"'Router'\\\" [place-holder]=\\\"'Router Order Term'\\\">\\n                  </amexio-number-input>\\n                </amexio-column>\\n                <amexio-column size=\\\"3\\\">\\n                  <amexio-label [font-color]=\\\"fontColor\\\"> {{nldAndLocalLoopModel._router}}</amexio-label>\\n                </amexio-column>\\n              </amexio-row>\\n\\n              <amexio-row>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.otherHardwareOTC\\\" name=\\\"Other Hardware One Time Charges\\\"\\n                      [field-label]=\\\"'Other Hardware'\\\" [place-holder]=\\\"'Other Hardware One Time Charges'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.otherHardwareARC\\\" name=\\\"Other Hardware Annual Recurring Charges\\\"\\n                      [field-label]=\\\"'Other Hardware'\\\" [place-holder]=\\\"'Other Hardware  Annual Recurring Charges '\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.otherHardwareOT\\\" name=\\\"Other Hardware Order Term\\\"\\n                      [field-label]=\\\"'Other Hardware '\\\" [place-holder]=\\\"'Other Hardware Order Term'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-label [font-color]=\\\"fontColor\\\"> {{nldAndLocalLoopModel._otherHardware}}</amexio-label>\\n                  </amexio-column>\\n                </amexio-row>\\n\\n\\n              <amexio-row>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.fibreExtensionChargesOTC\\\" name=\\\"Fibre Extension Charges One Time Charges\\\"\\n                      [field-label]=\\\"'Fibre Extension Charges'\\\" [place-holder]=\\\"'Fibre Extension Charges One Time Charges'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.fibreExtensionChargesARC\\\" name=\\\"Fibre Extension Charges  Annual Recurring Charges\\\"\\n                      [field-label]=\\\"'Fibre Extension Charges'\\\" [place-holder]=\\\"'Fibre Extension Charges  Annual Recurring Charges'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.fibreExtensionChargesOT\\\" name=\\\"Fibre Extension Charges Order Term\\\"\\n                      [field-label]=\\\"'Fibre Extension Charges'\\\" [place-holder]=\\\"'Fibre Extension Charges Order Term'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-label [font-color]=\\\"fontColor\\\"> {{nldAndLocalLoopModel._fibreExtensionCharges}}</amexio-label>\\n                  </amexio-column>\\n                </amexio-row>\\n\\n\\n              <amexio-row>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.installationChargesOTC\\\" name=\\\"Installation Charges One Time Charges \\\"\\n                      [field-label]=\\\"'Installation Charges'\\\" [place-holder]=\\\"'Installation Charges One Time Charges'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.installationChargesARC\\\" name=\\\"Installation Charges Annual Recurring Charges\\\"\\n                      [field-label]=\\\"'Installation Charges'\\\" [place-holder]=\\\"'Installation Charges Annual Recurring Charges'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.installationChargesOT\\\" name=\\\"Installation Charges Order Term\\\"\\n                      [field-label]=\\\"'Installation Charges'\\\" [place-holder]=\\\"'Installation Charges Order Term'\\\">\\n                    </amexio-number-input>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"3\\\">\\n                    <amexio-label [font-color]=\\\"fontColor\\\"> {{nldAndLocalLoopModel._installationCharges}}</amexio-label>\\n                  </amexio-column>\\n                </amexio-row>\\n\\n                <amexio-row>\\n                    <amexio-column size=\\\"3\\\">\\n                      <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.otherChargesOTC\\\" name=\\\"Other Charges One Time Charges \\\"\\n                        [field-label]=\\\"'Other Charges'\\\" [place-holder]=\\\"'Other Charges One Time Charges'\\\">\\n                      </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                      <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.otherChargesARC\\\" name=\\\"Other Charges Annual Recurring Charges\\\"\\n                        [field-label]=\\\"'Other Charges'\\\" [place-holder]=\\\"'Other Charges Annual Recurring Charges'\\\">\\n                      </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                      <amexio-number-input [(ngModel)]=\\\"nldAndLocalLoopModel.otherChargesOT\\\" name=\\\"Other Charges Order Term\\\"\\n                        [field-label]=\\\"'Other Charges'\\\" [place-holder]=\\\"'Other Charges Order Term'\\\">\\n                      </amexio-number-input>\\n                    </amexio-column>\\n                    <amexio-column size=\\\"3\\\">\\n                      <amexio-label [font-color]=\\\"fontColor\\\"> {{nldAndLocalLoopModel._otherCharges}}</amexio-label>\\n                    </amexio-column>\\n                  </amexio-row>\\n        </amexio-body>\\n        <!-- <amexio-action>\\n                    <amexio-toolbar>\\n                        <amexio-toolbar-item position-left [seperator-position]=\\\"'right'\\\">\\n\\n                                <amexio-button [label]=\\\"'Submit'\\\"  [form-bind]=\\\"'commanchargefieldForm'\\\"  [tooltip]=\\\"'Submit'\\\"  [icon]=\\\"'fa fa-paper-plane'\\\" (onClick)=\\\"saveInfo()\\\"\\n                               [type]=\\\"'green'\\\"></amexio-button>\\n\\n                          </amexio-toolbar-item>\\n                    </amexio-toolbar>\\n                  </amexio-action> -->\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NldAndLocalLoopModel} from \"../../../models/charges/nldandlocalloop.model\";\n\n@Component({\n  selector: 'app-nldandlocalloopcharges',\n  templateUrl: './nldandlocalloopcharges.component.html',\n  styleUrls: ['./nldandlocalloopcharges.component.css']\n})\nexport class NldandLocalloopChargesComponent implements OnInit {\nnldAndLocalLoopModel: NldAndLocalLoopModel;\nfontColor = \"#351CB0\";\n  constructor() {\n    this.nldAndLocalLoopModel = new  NldAndLocalLoopModel();\n\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<amexio-card [body-height]=\\\"80\\\"  [header]=\\\"false\\\" [footer]=\\\"true\\\">\\n  <amexio-body>\\n<ng-container *ngFor=\\\"let conData of addressGroupData\\\">\\n  <amexio-row>\\n    <amexio-column [fit]=\\\"true\\\" size=\\\"12\\\">\\n      <amexio-card  height=\\\"450\\\"  [header]=\\\"true\\\" [footer]=\\\"false\\\" >\\n        <amexio-header>\\n          {{conData.addresslabel}}\\n        </amexio-header>\\n        <amexio-body>\\n          <amexio-row>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-dropdown\\n                [(ngModel)]=\\\"conData.contactDetailsModel.contactType\\\"\\n                [place-holder]=\\\"'Choose contact type'\\\"\\n                name=\\\"Contact Type\\\"\\n                [data-reader] = \\\"'data'\\\"\\n                [field-label]=\\\"'Contact Type'\\\"\\n                [http-url]=\\\"'assets/data/contacttype.json'\\\"\\n                [http-method]=\\\"'get'\\\"\\n                [display-field]=\\\"'primaryDisplay'\\\"\\n                [value-field]=\\\"'primaryKey'\\\"\\n                [enable-sort]=\\\"true\\\"\\n                [sort]=\\\"'asc'\\\">\\n              </amexio-dropdown>\\n            </amexio-column>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-dropdown\\n                [(ngModel)]=\\\"conData.contactDetailsModel.salutation\\\"\\n                [place-holder]=\\\"'Choose salutation'\\\"\\n                name=\\\"Salutation\\\"\\n                [data-reader]=\\\"'data'\\\"\\n                [field-label]=\\\"'Salutation'\\\"\\n                [http-url]=\\\"'assets/data/salutation.json'\\\"\\n                [http-method]=\\\"'get'\\\"\\n                [display-field]=\\\"'primaryDisplay'\\\"\\n                [value-field]=\\\"'primaryKey'\\\"\\n                [enable-sort]=\\\"true\\\"\\n                [sort]=\\\"'asc'\\\">\\n              </amexio-dropdown>\\n            </amexio-column>\\n          </amexio-row>\\n\\n          <amexio-row>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-text-input\\n                [(ngModel)]=\\\"conData.contactDetailsModel.firstName\\\"\\n                name=\\\"First Name\\\"\\n                field-label=\\\"First Name\\\"\\n              >\\n              </amexio-text-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-text-input\\n                [(ngModel)]=\\\"conData.contactDetailsModel.lastName\\\"\\n                icon-feedback=\\\"true\\\"\\n                name=\\\"Last Name\\\"\\n                field-label=\\\"Last Name\\\">\\n              </amexio-text-input>\\n            </amexio-column>\\n          </amexio-row>\\n\\n          <amexio-row>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-email-input\\n                [(ngModel)]=\\\"conData.contactDetailsModel.email\\\"\\n                name =\\\"email\\\"\\n                [field-label]=\\\"'Email'\\\"\\n                [place-holder]=\\\"'Enter Email Id'\\\"\\n              >\\n              </amexio-email-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-number-input\\n                name =\\\"Cell No\\\"\\n                [(ngModel)]=\\\"conData.contactDetailsModel.cellNo\\\"\\n                [field-label]=\\\"'Cell No'\\\"\\n                [place-holder]=\\\"'Enter Cell No'\\\">\\n              </amexio-number-input>\\n            </amexio-column>\\n          </amexio-row>\\n\\n          <amexio-row>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-text-input\\n                [enable-popover]=\\\"true\\\"\\n                [(ngModel)]=\\\"conData.contactDetailsModel.fax\\\"\\n                field-label=\\\"Fax\\\"\\n                name =\\\"Fax\\\"\\n                [icon-feedback]=\\\"true\\\"\\n              >\\n              </amexio-text-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-text-input\\n                [enable-popover]=\\\"true\\\"\\n                [(ngModel)]=\\\"conData.contactDetailsModel.address1\\\"\\n                field-label=\\\"Address1\\\"\\n                name =\\\"Address1\\\"\\n                [icon-feedback]=\\\"true\\\"\\n              >\\n              </amexio-text-input>\\n            </amexio-column>\\n          </amexio-row>\\n\\n          <amexio-row>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-text-input\\n                [(ngModel)]=\\\"conData.contactDetailsModel.address2\\\"\\n                icon-feedback=\\\"true\\\"\\n                name=\\\"Address2\\\"\\n                field-label=\\\"Address2\\\">\\n              </amexio-text-input>\\n            </amexio-column>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-text-input\\n                [(ngModel)]=\\\"conData.contactDetailsModel.address3\\\"\\n                icon-feedback=\\\"true\\\"\\n                name=\\\"Address3\\\"\\n                field-label=\\\"Address3\\\">\\n              </amexio-text-input>\\n            </amexio-column>\\n          </amexio-row>\\n          <amexio-row>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-dropdown\\n                [(ngModel)]=\\\"conData.contactDetailsModel.city\\\"\\n                [place-holder]=\\\"'Choose city'\\\"\\n                name=\\\"City\\\"\\n                [data-reader] = \\\"'data'\\\"\\n                [field-label]=\\\"'City'\\\"\\n                [http-url]=\\\"'assets/data/city.json'\\\"\\n                [http-method]=\\\"'get'\\\"\\n                [display-field]=\\\"'primaryDisplay'\\\"\\n                [value-field]=\\\"'primaryKey'\\\"\\n                [enable-sort]=\\\"true\\\"\\n                [sort]=\\\"'asc'\\\">\\n              </amexio-dropdown>\\n            </amexio-column>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-number-input\\n                name =\\\"Pin\\\"\\n                [(ngModel)]=\\\"conData.contactDetailsModel.pin\\\"\\n                [field-label]=\\\"'Pin'\\\"\\n                [place-holder]=\\\"'Enter Pin'\\\">\\n              </amexio-number-input>\\n            </amexio-column>\\n          </amexio-row>\\n          <amexio-row>\\n            <amexio-column size=\\\"6\\\">\\n              <amexio-dropdown\\n                [(ngModel)]=\\\"conData.contactDetailsModel.country\\\"\\n                [place-holder]=\\\"'Choose country'\\\"\\n                name=\\\"Country\\\"\\n                [data-reader] = \\\"'data'\\\"\\n                [field-label]=\\\"'Country'\\\"\\n                [http-url]=\\\"'assets/data/country.json'\\\"\\n                [http-method]=\\\"'get'\\\"\\n                [display-field]=\\\"'primaryDisplay'\\\"\\n                [value-field]=\\\"'primaryKey'\\\"\\n                [enable-sort]=\\\"true\\\"\\n                [sort]=\\\"'asc'\\\">\\n              </amexio-dropdown>\\n            </amexio-column>\\n          </amexio-row>\\n        </amexio-body>\\n\\n      </amexio-card>\\n    </amexio-column>\\n  </amexio-row>\\n</ng-container>\\n  </amexio-body>\\n  <amexio-action>\\n    <amexio-toolbar>\\n      <amexio-toolbar-item position-left >\\n\\n        <amexio-button [label]=\\\"'Add More'\\\"   [tooltip]=\\\"'Add More'\\\"  [icon]=\\\"'fa fa-plus'\\\" (onClick)=\\\"addMoreHandle()\\\"\\n                       [type]=\\\"'theme-color'\\\"></amexio-button>\\n\\n      </amexio-toolbar-item>\\n\\n      <amexio-toolbar-item position-right >\\n\\n        <amexio-button [label]=\\\"'Proceed'\\\"   [tooltip]=\\\"'Proceed'\\\"  [icon]=\\\"'fa fa-paper-plane'\\\" (onClick)=\\\"proceedHandle()\\\"\\n                       [type]=\\\"'theme-color'\\\"></amexio-button>\\n\\n      </amexio-toolbar-item>\\n    </amexio-toolbar>\\n  </amexio-action>\\n</amexio-card>\\n\\n\\n\\n\\n<!--\\n  <amexio-dialogue [(show)]=\\\"isSuccess\\\"\\n  [material-design]=\\\"true\\\"\\n  [close-on-escape]=\\\"true\\\"\\n  [custom]=\\\"true\\\"\\n  [title]=\\\"'Info'\\\"\\n  [type]=\\\"'alert'\\\">\\n  <amexio-body>\\n  {{successMessage}}\\n  </amexio-body>\\n  <amexio-action>\\n  <amexio-button type=\\\"primary\\\"\\n  label=\\\"Ok\\\" (onClick)=\\\"onDialougeOKClick()\\\">\\n  </amexio-button>\\n  </amexio-action>\\n  </amexio-dialogue>\\n\\n  <amexio-dialogue [(show)]=\\\"isError\\\"\\n[material-design]=\\\"true\\\"\\n[close-on-escape]=\\\"true\\\"\\n[custom]=\\\"true\\\"\\n[title]=\\\"'Error'\\\"\\n[type]=\\\"'alert'\\\"\\n[close-on-escape]=\\\"true\\\"\\n>\\n<amexio-body>\\n<ol >\\n<li *ngFor=\\\"let msg of errorMessage ;let index=index\\\">{{msg}}</li>\\n</ol>\\n</amexio-body>\\n<amexio-action>\\n<amexio-button type=\\\"primary\\\"\\nlabel=\\\"Ok\\\" (onClick)=\\\"onErrorDialougeOkClick($event)\\\">\\n</amexio-button>\\n</amexio-action>\\n</amexio-dialogue> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ContactDetailsModel} from \"../../models/contactdetails.model\";\nimport {DataService} from \"../../services/data.service\";\nimport {Router} from \"@angular/router\";\nimport {HttpService} from \"../../services/http.service\";\n@Component({\n  selector: 'app-contactdetails',\n  templateUrl: './contactdetails.component.html'\n})\nexport class ContactdetailsComponent implements OnInit {\ncontactDetailsModel: ContactDetailsModel;\naddressGroupData: any[];\n  constructor(private _httpService: HttpService,\n              private _router: Router,\n              private _dataService: DataService) {\n\n    this.contactDetailsModel = new ContactDetailsModel();\n\n\n   }\n\n  ngOnInit() {\n    this.addressGroupData = [];\n    if(this._dataService.order.productType == '1' || this._dataService.order.productType == '2') {\n      this.createFirstTypeGroup();\n    } else {\n      this.createSecondTypeGroup();\n    }\n  }\n\n  createFirstTypeGroup() {\n   this.addressGroupData.push(new AddressGroup('Billing Address', '1'), new AddressGroup('Installation Address', '2') );\n  }\n\n  createSecondTypeGroup() {\n    this.addressGroupData.push(new AddressGroup('Billing Address', '1'), new AddressGroup('End A', '3'), new AddressGroup('End B', '4') );\n  }\n\n\n  addMoreHandle() {\n   this.createFirstTypeGroup();\n  }\n\n  proceedHandle() {\n    this._dataService.order.contactAdrress = [];\n    this.addressGroupData.forEach((addr: AddressGroup) =>{\n      this._dataService.order.contactAdrress.push(addr.contactDetailsModel);\n    });\n\n    this._router.navigate(['home/orderdetails']);\n  }\n\n}\n\nexport class AddressGroup {\n\n  addresslabel: string;\n  contactDetailsModel: ContactDetailsModel;\n\n  constructor(_label: string, pType: string) {\n    this.addresslabel = _label;\n    this.contactDetailsModel = new ContactDetailsModel();\n    this.contactDetailsModel.addressType = pType;\n  }\n}\n","module.exports = \"<amexio-homepage-ce [type]=\\\"'1'\\\">\\n  <amexio-homepage-northpanel>\\n    <amexio-nav [logo]=\\\"'assets/images/rinalogo.png'\\\"\\n                [title]=\\\"'Airtel'\\\">\\n    </amexio-nav>\\n  </amexio-homepage-northpanel>\\n  <amexio-homepage-westpanel>\\n    <amexio-side-nav [http-url]=\\\"'assets/data/sidenav.json'\\\"\\n                     [http-method]=\\\"'get'\\\"\\n                     [data-reader]=\\\"'data'\\\"\\n                     (nodeClick)=\\\"sidenavClickHandle($event)\\\">\\n    </amexio-side-nav>\\n  </amexio-homepage-westpanel>\\n  <amexio-homepage-centerpanel>\\n    <amexio-spinner [show]=_dataService.showLoader [type]=\\\"'rectanglebounce'\\\" [vertical-position]=\\\"'center'\\\"\\n                    [horizontal-position]=\\\"'center'\\\" [color]=\\\"'blue'\\\">\\n    </amexio-spinner>\\n    <router-outlet></router-outlet>\\n  </amexio-homepage-centerpanel>\\n</amexio-homepage-ce>\\n\"","/**\n * Created by dattaram on 24/4/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {DataService} from \"../../services/data.service\";\n\n@Component({\n  selector: 'home',\n  templateUrl: 'home.component.html'\n})\n\nexport class HomeComponent implements OnInit {\n  constructor(private _route: Router, public _dataService: DataService){\n\n  }\n\n  sidenavClickHandle(event: any) {\n    this._route.navigate(['home/' + event.link]);\n  }\n  ngOnInit() {\n  }\n}\n","module.exports = \"<amexio-spinner [show]=\\\"showLoader\\\" [type]=\\\"'rectanglebounce'\\\" [vertical-position]=\\\"'center'\\\" [horizontal-position]=\\\"'center'\\\" [color]=\\\"'yellow'\\\">\\n</amexio-spinner>\\n<div class=\\\"login-page-div\\\">\\n   <amexio-nav [transparent]=\\\"true\\\" [enable-side-nav-position]=\\\"true\\\" class=\\\"ok\\\" [title]=\\\"'RINA Platform'\\\" [logo]=\\\"'assets/images/rinalogo.png'\\\">\\n   </amexio-nav>\\n  <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'center'\\\">\\n    <amexio-layout-item>\\n      <amexio-layout-columns [fit]=\\\"true\\\" [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'end'\\\">\\n        <amexio-layout-item>  &nbsp; </amexio-layout-item>\\n        <amexio-layout-item class=\\\"login-page\\\">\\n          <div [formGroup]=\\\"signInGroup\\\">\\n            <amexio-card-ce>\\n\\n              <amexio-header-ce [border-bottom]=\\\"true\\\">\\n                <amexio-label size=\\\"large-bold\\\">\\n                  Login\\n                </amexio-label>\\n              </amexio-header-ce>\\n\\n              <amexio-body-ce>\\n                <amexio-layout-columns [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'start'\\\" [orientation]=\\\"'vertical'\\\">\\n                  <amexio-layout-item>\\n                    <amexio-text-input formControlName=\\\"email\\\" [field-label]=\\\"'User Id'\\\" name=\\\"email\\\"\\n                      [place-holder]=\\\"'Enter User Id'\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"loginModel.userId\\\"\\n                      [error-msg]=\\\"'Please Enter User Id'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-text-input>\\n\\n                  </amexio-layout-item>\\n                  <amexio-layout-item>\\n                    <amexio-password-input formControlName=\\\"Password\\\" [field-label]=\\\"'Password'\\\" name=\\\"password\\\"\\n                      [place-holder]=\\\"'Enter password'\\\" [allow-blank]=\\\"false\\\" [(ngModel)]=\\\"loginModel.password\\\"\\n                      [error-msg]=\\\"'Please Enter password'\\\" [icon-feedback]=\\\"true\\\">\\n                    </amexio-password-input>\\n                  </amexio-layout-item>\\n                </amexio-layout-columns>\\n              </amexio-body-ce>\\n              <amexio-action-ce [align]=\\\"'center'\\\" [border-top]=\\\"true\\\">\\n                <amexio-button [icon]=\\\"'fa fa-sign-in'\\\" [disabled]=\\\"!signInGroup.valid\\\" [label]=\\\"'Login'\\\" [type]=\\\"'theme-color'\\\"\\n                  (onClick)=\\\"loginHandle()\\\" [tooltip]=\\\"'Login'\\\" [block]=\\\"true\\\">\\n                </amexio-button>\\n              </amexio-action-ce>\\n\\n            </amexio-card-ce>\\n          </div>\\n\\n        </amexio-layout-item>\\n        <amexio-layout-item> &nbsp;</amexio-layout-item>\\n      </amexio-layout-columns>\\n\\n    </amexio-layout-item>\\n  </amexio-layout-columns>\\n</div>\\n  <amexio-notification\\n        [data]=\\\"errorMsgData\\\"\\n        [vertical-position]=\\\"'top'\\\"\\n        [horizontal-position]=\\\"'right'\\\"\\n        [close-on-escape] =\\\"true\\\"\\n        [background-color]=\\\"'red'\\\"\\n        [auto-dismiss-msg]=\\\"false\\\"\\n        [auto-dismiss-msg-interval]=\\\"6000\\\">\\n      </amexio-notification>\\n\"","\n/**\n * Created by dattaram on 11/4/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {LoginModel} from '../../models/login.model';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from \"@angular/router\";\n\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {AUTH_URL} from \"../../constants/app.constant\";\n\n\n@Component({\n  selector: 'login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements OnInit {\n  loginModel: LoginModel;\n  signInGroup: FormGroup;\n  showLoader = false;\n  errorMsgData = [];\n  constructor(private _httpClient: HttpClient, private fb: FormBuilder,\n              private _router: Router) {\n    this.loginModel = new LoginModel();\n  }\n  ngOnInit() {\n    this.validateSigninform();\n  }\n   validateSigninform() {\n    this.signInGroup = this.fb.group({\n        email: ['', [Validators.required]],\n        Password: ['', [Validators.required]],\n      });\n  }\n  loginHandle() {\n    let response: any;\n    this.showLoader = true;\n    this._httpClient.post(AUTH_URL, this.loginModel).subscribe(\n      (res: any) => {\n        response = res;\n      },\n        (error: any) => {\n          console.log(error);\n          this.showLoader = false;\n        },\n        () => {\n        if (response.success) {\n          this._router.navigate(['home']);\n          this.showLoader = false;\n        } else {\n          this.errorMsgData.push('Please Enter valid UserId / Password');\n          this.showLoader = false;\n        }\n\n        }\n      );\n  }\n}\n","module.exports = \"<amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'center'\\\">\\n  <amexio-layout-item [fit]=\\\"true\\\">\\n    <amexio-layout-columns [fit]=\\\"true\\\" [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'center'\\\">\\n      <amexio-layout-item >\\n        <amexio-card [header]=\\\"false\\\"\\n                     [footer]=\\\"true\\\"\\n                     [footer-align]=\\\"'right'\\\">\\n          <amexio-body>\\n            <amexio-row>\\n              <amexio-column [size]=\\\"12\\\">\\n                <amexio-text-input field-label=\\\"Party Name\\\"\\n                                   name=\\\"name\\\"\\n                                   place-holder=\\\"Enter  name\\\"\\n                                    [(ngModel)]=\\\"name\\\"\\n                                   [disabled]=\\\"true\\\"\\n                                   icon-feedback=\\\"true\\\">\\n                </amexio-text-input>\\n              </amexio-column>\\n             <!-- <amexio-column [size]=\\\"12\\\">\\n                <amexio-text-input field-label=\\\"Category\\\"\\n                                   name=\\\"name\\\"\\n                                    [(ngModel)]=\\\"category\\\"\\n                                   place-holder=\\\"Enter category\\\"\\n                                   icon-feedback=\\\"true\\\">\\n                </amexio-text-input>\\n              </amexio-column>-->\\n              <amexio-column [size]=\\\"12\\\">\\n                <amexio-dropdown\\n                                 [place-holder]=\\\"'Choose'\\\"\\n                                 name=\\\"productType\\\"\\n                                 [data-reader]=\\\"'data'\\\"\\n                                 [field-label]=\\\"'Product Type'\\\"\\n                                  [(ngModel)]=\\\"productType\\\"\\n                                 [http-url]=\\\"'assets/data/productType.json'\\\"\\n                                 [http-method]=\\\"'get'\\\"\\n                                 [display-field]=\\\"'productName'\\\"\\n                                 [value-field]=\\\"'productType'\\\"\\n                                 (onSingleSelect)=\\\"onSingleSelectHandle($event)\\\"\\n                                 [enable-sort]=\\\"true\\\"\\n                                 [sort]=\\\"'asc'\\\">\\n                </amexio-dropdown>\\n              </amexio-column>\\n            </amexio-row>\\n          </amexio-body>\\n          <amexio-action >\\n            <amexio-button [label]=\\\"'Back'\\\" [type]=\\\"'theme-backgroundcolor'\\\" (onClick)=\\\"backHandle()\\\"></amexio-button>\\n            <amexio-button [label]=\\\"'New Order'\\\" [type]=\\\"'theme-color'\\\" (onClick)=\\\"newOrderHandle()\\\"></amexio-button>\\n          </amexio-action>\\n        </amexio-card>\\n      </amexio-layout-item>\\n    </amexio-layout-columns>\\n  </amexio-layout-item>\\n</amexio-layout-columns>\\n\"","/**\n * Created by dattaram on 25/4/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {HttpService} from \"../../services/http.service\";\nimport {Router} from \"@angular/router\";\nimport { DataService } from \"src/app/services/data.service\";\n\n@Component({\n   selector: 'new-order',\n   templateUrl: 'new-order.component.html'\n})\n\nexport class NewOrderComponent implements OnInit {\n  name:string;\n  category:string;\n  productType = \"1\";\n  productName: string;\n  constructor(private _httpService: HttpService, private _router: Router,private _dataService:DataService) {\n  }\n\n  ngOnInit() {\n    this.name = this._dataService.order.customerDemographics.partyName;\n    this.category = this._dataService.order.customerDemographics.custCategory;\n  }\n\n  newOrderHandle() {\n    this._dataService.order.productType = this.productType;\n    this._dataService.order.productName = this.productName;\n    this._router.navigate(['home/addcontdetails']);\n\n  }\n\n  onSingleSelectHandle(event: any) {\n   this.productName = event.productName;\n  }\n\n  backHandle() {\n    this._router.navigate(['home/searchcust']);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {InternetOrder} from '../../../models/order/internetorder.model';\n\n@Component({\n    selector: 'internet-order',\n    templateUrl: 'internet_order_details.component.html'\n  })\nexport class InternetOrderComponent  {\n  internetOrder: InternetOrder;\n  isOtherDetails = false;\n  isCPMOtherDetails = false;\n  isPrimaryOtherTechnologyDetails = false;\n  isSecondaryOtherTechnologyDetails = false;\n    constructor() {\n      this.internetOrder = new InternetOrder();\n    }\n\n    // TO CUSTOMER INTERFACE SELECTION\n    onCustomerInterfaceSelection(data: any) {\n      this.internetOrder.customerInterface = [];\n      const set = new Set();\n      if (data && data.length > 0) {\n        data.forEach((obj: any) => {\n          if (obj.primaryKey === '11') {\n            this.isOtherDetails = true;\n          } else {\n            this.isOtherDetails = false;\n          }\n          set.add(obj.primaryKey);\n        });\n      } else {\n        this.isOtherDetails = false;\n      }\n      if (set) {\n        set.forEach((item: any) => {\n          this.internetOrder.customerInterface.push(item);\n        });\n      }\n    }\n\n    // CPM TYPE SEELCTION\n    onCPMTypeSelection(data: any) {\n      this.internetOrder.cPEType = [];\n      const set = new Set();\n      if (data && data.length > 0) {\n        data.forEach((obj: any) => {\n          if (obj.primaryKey === '4') {\n            this.isCPMOtherDetails = true;\n          } else {\n            this.isCPMOtherDetails = false;\n          }\n          set.add(obj.primaryKey);\n        });\n      } else {\n        this.isCPMOtherDetails = false;\n      }\n      if (set) {\n        set.forEach((item: any) => {\n          this.internetOrder.cPEType.push(item);\n        });\n      }\n    }\n\n    // ON SELECT TECHNOLOGY\n    onPrimaryTechnologySelection(data: any) {\n      this.internetOrder.primaryTechnology = [];\n      const set = new Set();\n      if (data && data.length > 0) {\n        data.forEach((obj: any) => {\n          if (obj.primaryKey === '6') {\n            this.isPrimaryOtherTechnologyDetails = true;\n          } else {\n            this.isPrimaryOtherTechnologyDetails = false;\n          }\n          set.add(obj.primaryKey);\n        });\n      } else {\n        this.isPrimaryOtherTechnologyDetails = false;\n      }\n      if (set) {\n        set.forEach((item: any) => {\n          this.internetOrder.primaryTechnology.push(item);\n        });\n      }\n    }\n\n     // ON SELECT TECHNOLOGY\n     onSecondaryTechnologySelection(data: any) {\n      this.internetOrder.secondaryTechnology = [];\n      const set = new Set();\n      if (data && data.length > 0) {\n        data.forEach((obj: any) => {\n          if (obj.primaryKey === '6') {\n            this.isSecondaryOtherTechnologyDetails = true;\n          } else {\n            this.isSecondaryOtherTechnologyDetails = false;\n          }\n          set.add(obj.primaryKey);\n        });\n      } else {\n        this.isSecondaryOtherTechnologyDetails = false;\n      }\n      if (set) {\n        set.forEach((item: any) => {\n          this.internetOrder.secondaryTechnology.push(item);\n        });\n      }\n    }\n}\n","module.exports = \"<amexio-row>\\n\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"internetOrder.poNo\\\" name=\\\"poNo\\\" field-label=\\\"PO No\\\" place-holder=\\\"Enter PO No\\\">\\n        </amexio-text-input>\\n    </amexio-column>\\n\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-date-time-picker [field-label]=\\\"'PO Date'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [(ngModel)]=\\\"internetOrder.poDate\\\">\\n        </amexio-date-time-picker>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-date-time-picker [field-label]=\\\"'PO RFS Date'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [(ngModel)]=\\\"internetOrder.poRfsDate\\\">\\n        </amexio-date-time-picker>\\n    </amexio-column>\\n\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"internetOrder.lastMileFeasibility\\\" [place-holder]=\\\"'Choose Last Mile Feasibility'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Last Mile Feasibility'\\\" [http-url]=\\\"'assets/data/order/internet/last_mile_feasibility.json'\\\" [http-method]=\\\"'get'\\\"\\n            [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"internetOrder.lastMileFeasibilityRequesID\\\" name=\\\"lastMileFeasibilityRequesID\\\" field-label=\\\"Last Mile Feasibility Reques ID\\\" place-holder=\\\"Last Mile Feasibility Reques ID\\\">\\n        </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row>\\n  <amexio-column size=\\\"6\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.orderType\\\" [search]=\\\"true\\\" [place-holder]=\\\"'Choose Order Type'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Order Type'\\\" [http-url]=\\\"'assets/data/order/internet/ordertype.json'\\\" [http-method]=\\\"'get'\\\"\\n            [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n  </amexio-column>\\n  <amexio-column size=\\\"6\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.serviceType\\\" [search]=\\\"true\\\" [place-holder]=\\\"'Choose Service Type'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Service Type'\\\" [http-url]=\\\"'assets/data/order/internet/servicetype.json'\\\" [http-method]=\\\"'get'\\\"\\n            [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row *ngIf=\\\"internetOrder.serviceType == '18'\\\">\\n  <amexio-column size=\\\"12\\\">\\n      <amexio-text-input [(ngModel)]=\\\"internetOrder.otherServiceTypeDetails\\\" name=\\\"otherServiceTypeDetails\\\" field-label=\\\"Other Service Type Details\\\" place-holder=\\\"Other Service Type Details\\\">\\n      </amexio-text-input>\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row *ngIf=\\\"internetOrder.orderType == '7' || internetOrder.orderType == '8' || internetOrder.orderType == '10'\\\">\\n  <amexio-column size=\\\"12\\\">\\n    <amexio-text-input [(ngModel)]=\\\"internetOrder.changeOrderCircuitID\\\" name=\\\"changeOrderCircuitID\\\" field-label=\\\"Change Order Circuit ID\\\" place-holder=\\\"Change Order Circuit ID\\\">\\n    </amexio-text-input>\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row >\\n  <amexio-column size=\\\"12\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.portType\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose Port Type'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'Port Type'\\\" [http-url]=\\\"'assets/data/order/internet/porttype.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row  *ngIf=\\\"internetOrder.portType=='2'\\\">\\n  <amexio-column size=\\\"12\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.billingTypeforMultipleBurstablePorts\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose Billing Type for Multiple Burstable Ports'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'Billing Type for Multiple Burstable Ports'\\\" [http-url]=\\\"'assets/data/order/internet/billingtype_for_multiple_burstable_ports.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n  <amexio-column size=\\\"6\\\">\\n      <amexio-text-input [(ngModel)]=\\\"internetOrder.committedBandwidth\\\" name=\\\"committedBandwidth\\\" field-label=\\\"Committed Bandwidth\\\" place-holder=\\\"Enter Committed Bandwidth\\\">\\n      </amexio-text-input>\\n  </amexio-column>\\n\\n  <amexio-column size=\\\"6\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.uom\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose UMO'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'UMO'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n  <amexio-column size=\\\"12\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.ratio\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose Ratio'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'Ratio'\\\" [http-url]=\\\"'assets/data/order/internet/ratio.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row *ngIf=\\\"internetOrder.serviceType === '17'\\\">\\n\\n  <amexio-column size=\\\"6\\\">\\n      <amexio-text-input [(ngModel)]=\\\"internetOrder.airtelPOP1\\\" name=\\\"poNo\\\" field-label=\\\"Airtel POP 1\\\" place-holder=\\\"Airtel POP 1\\\">\\n      </amexio-text-input>\\n  </amexio-column>\\n\\n  <amexio-column size=\\\"6\\\">\\n    <amexio-text-input [(ngModel)]=\\\"internetOrder.airtelPOP2\\\" name=\\\"airtelPOP2\\\" field-label=\\\"Airtel POP 2\\\" place-holder=\\\"Airtel POP 2\\\">\\n    </amexio-text-input>\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row *ngIf=\\\"internetOrder.serviceType == '19'\\\">\\n  <amexio-column size=\\\"6\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.dDoSCPERequired\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose DDoS CPE Required'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'DDoS CPE Required'\\\" [http-url]=\\\"'assets/data/order/internet/ddos _cpe_required.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n\\n  <amexio-column size=\\\"6\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.dDoSCPEprovidedby\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose DDoS CPE provided by'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'DDoS CPE provided by'\\\" [http-url]=\\\"'assets/data/order/internet/ddos_cpe_providedby.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row *ngIf=\\\"internetOrder.serviceType == '20'\\\">\\n  <amexio-column size=\\\"4\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.webReporting\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose Web Reporting'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'Web Reporting'\\\" [http-url]=\\\"'assets/data/order/internet/web_reporting.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n\\n  <amexio-column size=\\\"4\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.configurationManagement\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose Configuration Management'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'Configuration Management'\\\" [http-url]=\\\"'assets/data/order/internet/configuration_management.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n\\n  <amexio-column size=\\\"4\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.proactiveMonitoring\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose Proactive Monitoring'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'Proactive Monitoring'\\\" [http-url]=\\\"'assets/data/order/internet/proactive_monitoring.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n</amexio-row>\\n\\n\\n<ng-container *ngIf=\\\"internetOrder.serviceType === '4'\\\">\\n    <amexio-row >\\n        <amexio-column size=\\\"6\\\">\\n            <amexio-text-input [(ngModel)]=\\\"internetOrder.portBW\\\" name=\\\"portBW\\\" field-label=\\\"Port BW\\\" place-holder=\\\"Port BW\\\">\\n            </amexio-text-input>\\n        </amexio-column>\\n\\n        <amexio-column size=\\\"6\\\">\\n          <amexio-dropdown [(ngModel)]=\\\"internetOrder.uOMPortBW\\\"\\n          [search]=\\\"true\\\" [place-holder]=\\\"'Choose UOM - Port BW'\\\" [data-reader]=\\\"'data'\\\"\\n          [field-label]=\\\"'UOM-Port BW'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n          [http-method]=\\\"'get'\\\"\\n         [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n         [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n            </amexio-dropdown>\\n        </amexio-column>\\n      </amexio-row>\\n\\n      <amexio-row >\\n          <amexio-column size=\\\"6\\\">\\n              <amexio-text-input [(ngModel)]=\\\"internetOrder.committedVolumeMonth\\\" name=\\\"committedVolumeMonth\\\" field-label=\\\"Committed Volume / Month\\\" place-holder=\\\"Committed Volume / Month\\\">\\n              </amexio-text-input>\\n          </amexio-column>\\n\\n          <amexio-column size=\\\"6\\\">\\n            <amexio-dropdown [(ngModel)]=\\\"internetOrder.uOMCommittedVolumeMonth\\\"\\n            [search]=\\\"true\\\" [place-holder]=\\\"'Choose UOM - Committed Volume / Month'\\\" [data-reader]=\\\"'data'\\\"\\n            [field-label]=\\\"'UOM-Committed Volume / Month'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n            [http-method]=\\\"'get'\\\"\\n           [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n           [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n              </amexio-dropdown>\\n          </amexio-column>\\n        </amexio-row>\\n\\n</ng-container>\\n\\n\\n\\n<ng-container *ngIf=\\\"internetOrder.serviceType === '6'\\\">\\n    <amexio-row >\\n        <amexio-column size=\\\"6\\\">\\n            <amexio-text-input [(ngModel)]=\\\"internetOrder.bW_24_7\\\" name=\\\"bW_24_7\\\" field-label=\\\"24X7 BW\\\" place-holder=\\\"24X7 BW\\\">\\n            </amexio-text-input>\\n        </amexio-column>\\n\\n        <amexio-column size=\\\"6\\\">\\n          <amexio-dropdown [(ngModel)]=\\\"internetOrder.bW_uom_24_7\\\"\\n          [search]=\\\"true\\\" [place-holder]=\\\"'Choose UOM - 24X7 BW'\\\" [data-reader]=\\\"'data'\\\"\\n          [field-label]=\\\"'UOM - 24X7 BW'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n          [http-method]=\\\"'get'\\\"\\n         [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n         [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n            </amexio-dropdown>\\n        </amexio-column>\\n      </amexio-row>\\n\\n      <amexio-row >\\n          <amexio-column size=\\\"6\\\">\\n              <amexio-text-input [(ngModel)]=\\\"internetOrder.offPeakHoursBW\\\" name=\\\"offPeakHoursBW\\\" field-label=\\\"Off Peak Hours BW\\\" place-holder=\\\"Off Peak Hours BW\\\">\\n              </amexio-text-input>\\n          </amexio-column>\\n\\n          <amexio-column size=\\\"6\\\">\\n            <amexio-dropdown [(ngModel)]=\\\"internetOrder.uOMOffPeakHoursBW\\\"\\n            [search]=\\\"true\\\" [place-holder]=\\\"'Choose UOM - Off Peak Hours BW'\\\" [data-reader]=\\\"'data'\\\"\\n            [field-label]=\\\"'UOM - Off Peak Hours BW'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n            [http-method]=\\\"'get'\\\"\\n           [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n           [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n              </amexio-dropdown>\\n          </amexio-column>\\n        </amexio-row>\\n\\n</ng-container>\\n\\n\\n\\n<ng-container *ngIf=\\\"internetOrder.serviceType === '9'\\\">\\n    <amexio-row >\\n        <amexio-column size=\\\"6\\\">\\n            <amexio-text-input [(ngModel)]=\\\"internetOrder.indiaBW\\\" name=\\\"indiaBW\\\" field-label=\\\"India BW\\\" place-holder=\\\"India BW\\\">\\n            </amexio-text-input>\\n        </amexio-column>\\n\\n        <amexio-column size=\\\"6\\\">\\n          <amexio-dropdown [(ngModel)]=\\\"internetOrder.uOMIndiaBW\\\"\\n          [search]=\\\"true\\\" [place-holder]=\\\"'Choose UOM - India BW'\\\" [data-reader]=\\\"'data'\\\"\\n          [field-label]=\\\"'UOM - India BW'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n          [http-method]=\\\"'get'\\\"\\n         [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n         [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n            </amexio-dropdown>\\n        </amexio-column>\\n      </amexio-row>\\n\\n      <amexio-row >\\n          <amexio-column size=\\\"6\\\">\\n              <amexio-text-input [(ngModel)]=\\\"internetOrder.internationalBW\\\" name=\\\"internationalBW\\\"\\n              field-label=\\\"International BW\\\" place-holder=\\\"International BW\\\">\\n              </amexio-text-input>\\n          </amexio-column>\\n\\n          <amexio-column size=\\\"6\\\">\\n            <amexio-dropdown [(ngModel)]=\\\"internetOrder.uOMInternationalBW\\\"\\n            [search]=\\\"true\\\" [place-holder]=\\\"'Choose UOM - International BW'\\\" [data-reader]=\\\"'data'\\\"\\n            [field-label]=\\\"'UOM - International BW'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n            [http-method]=\\\"'get'\\\"\\n           [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n           [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n              </amexio-dropdown>\\n          </amexio-column>\\n        </amexio-row>\\n\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"internetOrder.serviceType === '19'\\\">\\n    <amexio-row >\\n        <amexio-column size=\\\"6\\\">\\n            <amexio-text-input [(ngModel)]=\\\"internetOrder.bW\\\" name=\\\"bW\\\" field-label=\\\"BW\\\" place-holder=\\\"BW\\\">\\n            </amexio-text-input>\\n        </amexio-column>\\n\\n        <amexio-column size=\\\"6\\\">\\n          <amexio-dropdown [(ngModel)]=\\\"internetOrder.uOMBW\\\"\\n          [search]=\\\"true\\\" [place-holder]=\\\"'Choose UOM - BW'\\\" [data-reader]=\\\"'data'\\\"\\n          [field-label]=\\\"'UOM - BW'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n          [http-method]=\\\"'get'\\\"\\n         [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n         [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n            </amexio-dropdown>\\n        </amexio-column>\\n      </amexio-row>\\n\\n      <amexio-row >\\n          <amexio-column size=\\\"12\\\">\\n              <amexio-text-input [(ngModel)]=\\\"internetOrder.dDoSCPEType\\\" name=\\\"dDoSCPEType\\\"\\n              field-label=\\\"DDoS CPE Type\\\" place-holder=\\\"DDoS CPE Type\\\">\\n              </amexio-text-input>\\n          </amexio-column>\\n\\n          <amexio-column size=\\\"12\\\">\\n              <amexio-checkbox-group [field-label]=\\\"'Customer Interface'\\\"\\n              [data-reader]=\\\"'data'\\\"\\n              [display-field]=\\\"'primaryDisplay'\\\"\\n              [value-field]=\\\"'checked'\\\"\\n              (onSelection)=\\\"onCustomerInterfaceSelection($event)\\\"\\n              [horizontal]=\\\"true\\\"\\n              [http-method]=\\\"'get'\\\"\\n              [http-url]=\\\"'assets/data/order/internet/customer_interface.json'\\\">\\n          </amexio-checkbox-group>\\n          </amexio-column>\\n        </amexio-row>\\n\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"isOtherDetails\\\">\\n    <amexio-row >\\n        <amexio-column size=\\\"12\\\">\\n    <amexio-text-input [(ngModel)]=\\\"internetOrder.otherDetails\\\" name=\\\"otherDetails\\\"\\n    field-label=\\\"Other details\\\" place-holder=\\\"Other details\\\">\\n    </amexio-text-input>\\n  </amexio-column>\\n</amexio-row>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"internetOrder.serviceType === '19'\\\">\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"internetOrder.cPEProvidedby\\\"\\n        [search]=\\\"true\\\" [place-holder]=\\\"'Choose CPE Provided by'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'CPE Provided by'\\\" [http-url]=\\\"'assets/data/order/internet/ddos_cpe_providedby.json'\\\"\\n        [http-method]=\\\"'get'\\\"\\n       [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n       [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n          </amexio-dropdown>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\">\\n          <amexio-dropdown [(ngModel)]=\\\"internetOrder.cPECommercials\\\"\\n          [search]=\\\"true\\\" [place-holder]=\\\"'Choose CPE Commercials'\\\" [data-reader]=\\\"'data'\\\"\\n          [field-label]=\\\"'CPE Commercials'\\\" [http-url]=\\\"'assets/data/order/internet/cpe_commercials.json'\\\"\\n          [http-method]=\\\"'get'\\\"\\n         [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n         [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n            </amexio-dropdown>\\n        </amexio-column>\\n        <amexio-column size=\\\"12\\\">\\n            <amexio-checkbox-group [field-label]=\\\"'CPE Type'\\\"\\n            [data-reader]=\\\"'data'\\\"\\n            [display-field]=\\\"'primaryDisplay'\\\"\\n            [value-field]=\\\"'checked'\\\"\\n            (onSelection)=\\\"onCPMTypeSelection($event)\\\"\\n            [horizontal]=\\\"true\\\"\\n            [http-method]=\\\"'get'\\\"\\n            [http-url]=\\\"'assets/data/order/internet/cpe_type.json'\\\">\\n        </amexio-checkbox-group>\\n      </amexio-column>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"isCPMOtherDetails\\\">\\n    <amexio-row >\\n        <amexio-column size=\\\"12\\\">\\n    <amexio-text-input [(ngModel)]=\\\"internetOrder.cPMOtherDetails\\\" name=\\\"cPMOtherDetails\\\"\\n    field-label=\\\"CPM Other details\\\" place-holder=\\\"CPM Other details\\\">\\n    </amexio-text-input>\\n  </amexio-column>\\n</amexio-row>\\n</ng-container>\\n\\n\\n<ng-container *ngIf=\\\"internetOrder.serviceType === '19'\\\">\\n\\n    <amexio-row >\\n        <amexio-column size=\\\"6\\\">\\n            <amexio-text-input [(ngModel)]=\\\"internetOrder.quantityofRouters\\\" name=\\\"quantityofRouters\\\"\\n            field-label=\\\"Quantity of Routers\\\" place-holder=\\\"Quantity of Routers\\\">\\n            </amexio-text-input>\\n         </amexio-column>\\n         <amexio-column size=\\\"6\\\">\\n            <amexio-text-input [(ngModel)]=\\\"internetOrder.quantityofModems\\\" name=\\\"quantityofModems\\\"\\n            field-label=\\\"Quantity of Modems\\\" place-holder=\\\"Quantity of Modems\\\">\\n            </amexio-text-input>\\n          </amexio-column>\\n      </amexio-row>\\n\\n      <amexio-row >\\n          <amexio-column size=\\\"6\\\">\\n              <amexio-text-input [(ngModel)]=\\\"internetOrder.quantityofConverters\\\" name=\\\"quantityofConverters\\\"\\n              field-label=\\\"Quantity of Converters\\\" place-holder=\\\"Quantity of Converters\\\">\\n              </amexio-text-input>\\n           </amexio-column>\\n           <amexio-column size=\\\"6\\\">\\n              <amexio-text-input [(ngModel)]=\\\"internetOrder.quantityofOther\\\" name=\\\"quantityofOther\\\"\\n              field-label=\\\"Quantity of Other \\\" place-holder=\\\"Quantity of Other \\\">\\n              </amexio-text-input>\\n            </amexio-column>\\n        </amexio-row>\\n\\n</ng-container >\\n\\n<amexio-row >\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"internetOrder.remarks\\\" name=\\\"remarks\\\"\\n        field-label=\\\"Remarks\\\" place-holder=\\\"Remarks\\\">\\n        </amexio-text-input>\\n     </amexio-column>\\n\\n</amexio-row>\\n\\n<amexio-row >\\n<amexio-column size=\\\"12\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"internetOrder.primaryAccessRequired\\\"\\n    [search]=\\\"true\\\" [place-holder]=\\\"'Choose Primary Access required'\\\" [data-reader]=\\\"'data'\\\"\\n    [field-label]=\\\"'Primary Access required'\\\" [http-url]=\\\"'assets/data/order/internet/ddos _cpe_required.json'\\\"\\n    [http-method]=\\\"'get'\\\"\\n   [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n   [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n      </amexio-dropdown>\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row *ngIf=\\\"internetOrder.primaryAccessRequired == '1'\\\">\\n          <amexio-column size=\\\"6\\\">\\n              <amexio-dropdown [(ngModel)]=\\\"internetOrder.primaryAccessArrangedBy\\\"\\n        [search]=\\\"true\\\" [place-holder]=\\\"'Choose Primary Access Arranged By'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'Primary Access Arranged By'\\\" [http-url]=\\\"'assets/data/order/internet/ddos_cpe_providedby.json'\\\"\\n        [http-method]=\\\"'get'\\\"\\n       [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n       [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n          </amexio-dropdown>\\n          </amexio-column>\\n          <amexio-column *ngIf=\\\"internetOrder.primaryAccessArrangedBy == '2'\\\" size=\\\"6\\\">\\n              <amexio-text-input [(ngModel)]=\\\"internetOrder.primaryAccessProviderName\\\" name=\\\"primaryAccessProviderName\\\"\\n              field-label=\\\"Access Provider's Name\\\" place-holder=\\\"Access Provider's Name\\\">\\n              </amexio-text-input>\\n          </amexio-column>\\n      </amexio-row >\\n      <ng-container *ngIf=\\\"internetOrder.primaryAccessRequired == '1'\\\">\\n          <amexio-row >\\n              <amexio-column size=\\\"6\\\">\\n                  <amexio-text-input [(ngModel)]=\\\"internetOrder.primaryAccessBandwidth\\\" name=\\\"primaryAccessBandwidth\\\"\\n                  field-label=\\\"Access Bandwidth\\\" place-holder=\\\"Access Bandwidth\\\">\\n                  </amexio-text-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                <amexio-dropdown [(ngModel)]=\\\"internetOrder.primaryUOMAccessBandwidth\\\"\\n                [search]=\\\"true\\\" [place-holder]=\\\"'Choose UOM - Access Bandwidth'\\\" [data-reader]=\\\"'data'\\\"\\n                [field-label]=\\\"'UOM - Access Bandwidth'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n                [http-method]=\\\"'get'\\\"\\n               [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n               [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n                  </amexio-dropdown>\\n              </amexio-column>\\n            </amexio-row>\\n\\n            <amexio-row >\\n                <amexio-column size=\\\"6\\\">\\n                    <amexio-text-input [(ngModel)]=\\\"internetOrder.primaryDistanceInKM\\\" name=\\\"primaryDistanceInKM\\\"\\n                    field-label=\\\"Distance in KM\\\" place-holder=\\\"Distance in KM\\\">\\n                    </amexio-text-input>\\n                </amexio-column>\\n\\n                <amexio-column size=\\\"6\\\">\\n                  <amexio-dropdown [(ngModel)]=\\\"internetOrder.primaryMedia\\\"\\n                  [search]=\\\"true\\\" [place-holder]=\\\"'Choose Media'\\\" [data-reader]=\\\"'data'\\\"\\n                  [field-label]=\\\"'UOM - Media'\\\" [http-url]=\\\"'assets/data/order/internet/media.json'\\\"\\n                  [http-method]=\\\"'get'\\\"\\n                 [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n                 [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n                    </amexio-dropdown>\\n                </amexio-column>\\n                <amexio-column size=\\\"12\\\">\\n                    <amexio-checkbox-group [field-label]=\\\"'Technology'\\\"\\n                    [data-reader]=\\\"'data'\\\"\\n                    [display-field]=\\\"'primaryDisplay'\\\"\\n                    [value-field]=\\\"'checked'\\\"\\n                    (onSelection)=\\\"onPrimaryTechnologySelection($event)\\\"\\n                    [horizontal]=\\\"true\\\"\\n                    [http-method]=\\\"'get'\\\"\\n                    [http-url]=\\\"'assets/data/order/internet/technology.json'\\\">\\n                </amexio-checkbox-group>\\n              </amexio-column>\\n              </amexio-row>\\n\\n              <amexio-row *ngIf=\\\"isPrimaryOtherTechnologyDetails\\\">\\n                  <amexio-column size=\\\"12\\\">\\n                      <amexio-text-input [(ngModel)]=\\\"internetOrder.primaryOtherTechnologyDetails\\\" name=\\\"primaryOtherTechnologyDetails\\\"\\n                      field-label=\\\"Other Technology Details\\\" place-holder=\\\"Other Technology Details\\\">\\n                      </amexio-text-input>\\n                  </amexio-column>\\n                </amexio-row>\\n      </ng-container>\\n\\n<!-- Secondery -->\\n      <amexio-row >\\n          <amexio-column size=\\\"12\\\">\\n              <amexio-dropdown [(ngModel)]=\\\"internetOrder.secondaryAccessRequired\\\"\\n              [search]=\\\"true\\\" [place-holder]=\\\"'Choose Secondary Access required'\\\" [data-reader]=\\\"'data'\\\"\\n              [field-label]=\\\"'Secondary Access required'\\\" [http-url]=\\\"'assets/data/order/internet/ddos _cpe_required.json'\\\"\\n              [http-method]=\\\"'get'\\\"\\n             [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n             [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n                </amexio-dropdown>\\n            </amexio-column>\\n          </amexio-row>\\n\\n          <amexio-row *ngIf=\\\"internetOrder.secondaryAccessRequired == '1'\\\">\\n                    <amexio-column size=\\\"6\\\">\\n                        <amexio-dropdown [(ngModel)]=\\\"internetOrder.secondaryAccessArrangedBy\\\"\\n                  [search]=\\\"true\\\" [place-holder]=\\\"'Choose Secondary Access Arranged By'\\\" [data-reader]=\\\"'data'\\\"\\n                  [field-label]=\\\"'Secondary Access Arranged By'\\\" [http-url]=\\\"'assets/data/order/internet/ddos_cpe_providedby.json'\\\"\\n                  [http-method]=\\\"'get'\\\"\\n                 [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n                 [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n                    </amexio-dropdown>\\n                    </amexio-column>\\n                    <amexio-column *ngIf=\\\"internetOrder.secondaryAccessArrangedBy == '2'\\\" size=\\\"6\\\">\\n                        <amexio-text-input [(ngModel)]=\\\"internetOrder.secondaryAccessProviderName\\\" name=\\\"primaryAccessProviderName\\\"\\n                        field-label=\\\"Access Provider's Name\\\" place-holder=\\\"Access Provider's Name\\\">\\n                        </amexio-text-input>\\n                    </amexio-column>\\n                </amexio-row >\\n                <ng-container *ngIf=\\\"internetOrder.secondaryAccessRequired == '1'\\\">\\n                    <amexio-row >\\n                        <amexio-column size=\\\"6\\\">\\n                            <amexio-text-input [(ngModel)]=\\\"internetOrder.secondaryAccessBandwidth\\\" name=\\\"secondaryAccessBandwidth\\\"\\n                            field-label=\\\"Access Bandwidth\\\" place-holder=\\\"Access Bandwidth\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                        <amexio-column size=\\\"6\\\">\\n                          <amexio-dropdown [(ngModel)]=\\\"internetOrder.secondaryUOMAccessBandwidth\\\"\\n                          [search]=\\\"true\\\" [place-holder]=\\\"'Choose UOM - Access Bandwidth'\\\" [data-reader]=\\\"'data'\\\"\\n                          [field-label]=\\\"'UOM - Access Bandwidth'\\\" [http-url]=\\\"'assets/data/order/internet/uom.json'\\\"\\n                          [http-method]=\\\"'get'\\\"\\n                         [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n                         [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                      </amexio-row>\\n\\n                      <amexio-row >\\n                          <amexio-column size=\\\"6\\\">\\n                              <amexio-text-input [(ngModel)]=\\\"internetOrder.secondaryDistanceInKM\\\" name=\\\"secondaryDistanceInKM\\\"\\n                              field-label=\\\"Distance in KM\\\" place-holder=\\\"Distance in KM\\\">\\n                              </amexio-text-input>\\n                          </amexio-column>\\n\\n                          <amexio-column size=\\\"6\\\">\\n                            <amexio-dropdown [(ngModel)]=\\\"internetOrder.secondaryMedia\\\"\\n                            [search]=\\\"true\\\" [place-holder]=\\\"'Choose Media'\\\" [data-reader]=\\\"'data'\\\"\\n                            [field-label]=\\\"'UOM - Media'\\\" [http-url]=\\\"'assets/data/order/internet/media.json'\\\"\\n                            [http-method]=\\\"'get'\\\"\\n                           [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\"\\n                           [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n                              </amexio-dropdown>\\n                          </amexio-column>\\n\\n                          <amexio-column size=\\\"12\\\">\\n                              <amexio-checkbox-group [field-label]=\\\"'Technology'\\\"\\n                              [data-reader]=\\\"'data'\\\"\\n                              [display-field]=\\\"'primaryDisplay'\\\"\\n                              [value-field]=\\\"'checked'\\\"\\n                              (onSelection)=\\\"onSecondaryTechnologySelection($event)\\\"\\n                              [horizontal]=\\\"true\\\"\\n                              [http-method]=\\\"'get'\\\"\\n                              [http-url]=\\\"'assets/data/order/internet/technology.json'\\\">\\n                          </amexio-checkbox-group>\\n                        </amexio-column>\\n                        </amexio-row>\\n\\n                        <amexio-row *ngIf=\\\"isSecondaryOtherTechnologyDetails\\\">\\n                            <amexio-column size=\\\"12\\\">\\n                                <amexio-text-input [(ngModel)]=\\\"internetOrder.secondaryOtherTechnologyDetails\\\" name=\\\"secondaryOtherTechnologyDetails\\\"\\n                                field-label=\\\"Other Technology Details\\\" place-holder=\\\"Other Technology Details\\\">\\n                                </amexio-text-input>\\n                            </amexio-column>\\n                          </amexio-row>\\n                </ng-container>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {MPLSOrder} from \"../../../models/order/mplsorder.model\";\n\n@Component({\n    selector: 'mpls-order',\n    templateUrl: 'mpls_order_details.component.html'\n  })\nexport class MPLSComponent {\n  mPLSOrder: MPLSOrder;\n  isRoutersQty =false;\n  isModemsQty =false;\n  isConvertersQty =false;\n  othersQty =false;\n  constructor() {\n    this.mPLSOrder = new MPLSOrder();\n  }\n\n  // TO AIRTEL END EQUIPMENTS\n  onAirtelEndEquipmentSelection(data: any){\n    this.mPLSOrder.airtelEndEquipment =[];\n    let set = new Set();\n    if(data && data.length>0) {\n      data.forEach((obj:any) => {\n\n\n        set.add(obj.primaryKey);\n      });\n    }\n    if(set){\n      set.forEach((item:any)=>{\n        this.mPLSOrder.airtelEndEquipment.push(item);\n      });\n\n      if(set.has('1')){\n        this.isRoutersQty =true;\n      }else {\n        this.isRoutersQty =false;\n\n      }\n       if(set.has('2')){\n          this.isModemsQty =true;\n        } else{\n          this.isModemsQty =false;\n        }\n        if(set.has('3')){\n          this.isConvertersQty =true;\n        } else{\n          this.isConvertersQty =false;\n        }\n        if(set.has('4')){\n          this.othersQty =true;\n        } else {\n          this.othersQty =false;\n        }\n    }\n  }\n\n  // PREMINUM\n  onPremiumRTSelection(data:any) {\n    this.mPLSOrder.customerPremiumRT =[];\n    let set = new Set();\n    if(data && data.length>0) {\n      data.forEach((obj:any) => {\n        set.add(obj.primaryKey);\n      });\n    }\n    if(set){\n      set.forEach((item:any)=>{\n        this.mPLSOrder.customerPremiumRT.push(item);\n      });\n    }\n  }\n\n  // PremiumNRT\n  onPremiumNRTSelection(data:any) {\n    this.mPLSOrder.customerPremiumNRT =[];\n    let set = new Set();\n    if(data && data.length>0) {\n      data.forEach((obj:any) => {\n        set.add(obj.primaryKey);\n      });\n    }\n    if(set){\n      set.forEach((item:any)=>{\n        this.mPLSOrder.customerPremiumNRT.push(item);\n      });\n    }\n  }\n\n  // BUSINESS\n  onBusinessSelection(data:any) {\n    this.mPLSOrder.customerBusiness =[];\n    let set = new Set();\n    if(data && data.length>0) {\n      data.forEach((obj:any) => {\n        set.add(obj.primaryKey);\n      });\n    }\n    if(set){\n      set.forEach((item:any)=>{\n        this.mPLSOrder.customerBusiness.push(item);\n      });\n    }\n  }\n\n  // STANDARD\n  onStandardSelection(data: any) {\n    this.mPLSOrder.customerStandard =[];\n    let set = new Set();\n    if(data && data.length>0) {\n      data.forEach((obj:any) => {\n        set.add(obj.primaryKey);\n      });\n    }\n    if(set){\n      set.forEach((item:any)=>{\n        this.mPLSOrder.customerStandard.push(item);\n      });\n    }\n  }\n\n  // SMART VC\n  onSmartVCPRTSelection(data:any){\n    this.mPLSOrder.customerSmartVCPrt =[];\n    let set = new Set();\n    if(data && data.length>0) {\n      data.forEach((obj:any) => {\n        set.add(obj.primaryKey);\n      });\n    }\n    if(set){\n      set.forEach((item:any)=>{\n        this.mPLSOrder.customerSmartVCPrt.push(item);\n      });\n    }\n  }\n}\n","module.exports = \"<amexio-row>\\n\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.poNo\\\" name=\\\"poNo\\\" field-label=\\\"PO No\\\" place-holder=\\\"Enter PO No\\\">\\n        </amexio-text-input>\\n    </amexio-column>\\n\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-date-time-picker [field-label]=\\\"'PO Date'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [(ngModel)]=\\\"mPLSOrder.poDate\\\">\\n        </amexio-date-time-picker>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-date-time-picker [field-label]=\\\"'PO RFS Date'\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" [(ngModel)]=\\\"mPLSOrder.poRfsDate\\\">\\n        </amexio-date-time-picker>\\n    </amexio-column>\\n\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.lastMileFeasibility\\\" [place-holder]=\\\"'Choose Last Mile Feasibility'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Last Mile Feasibility'\\\" [http-url]=\\\"'assets/data/order/internet/last_mile_feasibility.json'\\\" [http-method]=\\\"'get'\\\"\\n            [display-field]=\\\"'primaryDisplay'\\\" [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.lastMileFeasibilityRequesID\\\" name=\\\"lastMileFeasibilityRequesID\\\" field-label=\\\"Last Mile Feasibility Reques ID\\\" place-holder=\\\"Last Mile Feasibility Reques ID\\\">\\n        </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.servicesOrdered\\\" [place-holder]=\\\"'Choose Services Ordered'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Services Ordered'\\\" [http-url]=\\\"'assets/data/order/mpls/services_ordered.json'\\\" [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.specifyNetworkDetails\\\" [place-holder]=\\\"'Choose Specify Network Details'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Specify Network Details'\\\" [http-url]=\\\"'assets/data/order/mpls/specify_network_details.json'\\\" [http-method]=\\\"'get'\\\"\\n            [display-field]=\\\"'primaryDisplay'\\\" [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.managedMPLS\\\" [place-holder]=\\\"'Choose Managed MPLS'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Managed MPLS'\\\" [http-url]=\\\"'assets/data/order/mpls/managed_mpls.json'\\\" [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row *ngIf=\\\"mPLSOrder.managedMPLS == '1'\\\">\\n    <amexio-column size=\\\"4\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.cEWebReporting\\\" [place-holder]=\\\"'Choose CE Web Reporting'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'CE Web Reporting'\\\" [http-url]=\\\"'assets/data/order/mpls/managed_mpls.json'\\\" [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"4\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.proactiveManagement\\\" [place-holder]=\\\"'Choose Proactive Management'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Proactive Management'\\\" [http-url]=\\\"'assets/data/order/mpls/managed_mpls.json'\\\" [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"4\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.configurationManagement\\\" [place-holder]=\\\"'Choose Configuration Management'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Configuration Management'\\\" [http-url]=\\\"'assets/data/order/mpls/managed_mpls.json'\\\" [http-method]=\\\"'get'\\\"\\n            [display-field]=\\\"'primaryDisplay'\\\" [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.noOfSites\\\" name=\\\"noOfSites\\\" field-label=\\\"No of Sites\\\" place-holder=\\\"No of Sites\\\">\\n        </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-textarea-input [(ngModel)]=\\\"mPLSOrder.remarks\\\" name=\\\"remarks\\\" field-label=\\\"Remarks\\\" place-holder=\\\"Remarks\\\">\\n        </amexio-textarea-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.protocolEncapsulation\\\" [place-holder]=\\\"'Choose Protocol Encapsulation'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Protocol Encapsulation'\\\" [http-url]=\\\"'assets/data/order/mpls/protocol_encapsulation.json'\\\" [http-method]=\\\"'get'\\\"\\n            [display-field]=\\\"'primaryDisplay'\\\" [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row *ngIf=\\\"mPLSOrder.protocolEncapsulation =='6'\\\">\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.otherDetailsonProtocolEncapsulation\\\" name=\\\"otherDetailsonProtocolEncapsulation\\\" field-label=\\\"Other Details On PE\\\" place-holder=\\\"Other Details On PE\\\">\\n        </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.typeOfCoS\\\" [place-holder]=\\\"'Choose Type of CoS'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Type of CoS'\\\" [http-url]=\\\"'assets/data/order/mpls/type_of_cos.json'\\\" [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.typeOfOrder\\\" [place-holder]=\\\"'Choose Type of Order'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Type of Order'\\\" [http-url]=\\\"'assets/data/order/mpls/type_of_order.json'\\\" [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row *ngIf=\\\"mPLSOrder.typeOfOrder =='1' || mPLSOrder.typeOfOrder =='5'\\\">\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.circuitID\\\" name=\\\"circuitID\\\" field-label=\\\"Circuit ID\\\" place-holder=\\\"Circuit ID\\\">\\n        </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.typeOfSite\\\" [place-holder]=\\\"'Choose Type of Site'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Type of Site'\\\" [http-url]=\\\"'assets/data/order/mpls/type_of_site.json'\\\" [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.accessDetailsMedia\\\" [place-holder]=\\\"'Choose Access Details Media'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Access Details Media'\\\" [http-url]=\\\"'assets/data/order/mpls/access_details_media.json'\\\" [http-method]=\\\"'get'\\\"\\n            [display-field]=\\\"'primaryDisplay'\\\" [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.primaryAccessTechnology\\\" [place-holder]=\\\"'Choose Primary Access Technology'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Primary Access Technology'\\\" [http-url]=\\\"'assets/data/order/mpls/primary_access_technology.json'\\\"\\n            [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\" [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\" *ngIf=\\\"mPLSOrder.primaryAccessTechnology == '7'\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.otherdetailsOfPAT\\\" name=\\\"otherdetailsOfPAT\\\" field-label=\\\"Other details of PAT\\\" place-holder=\\\"Other details of PAT\\\">\\n        </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.secondaryAccessTechnology\\\" [place-holder]=\\\"'Choose Secondary Access Technology'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Secondary Access Technology'\\\" [http-url]=\\\"'assets/data/order/mpls/primary_access_technology.json'\\\"\\n            [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\" [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\" *ngIf=\\\"mPLSOrder.secondaryAccessTechnology == '7'\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.otherdetailsOfSAT\\\" name=\\\"otherdetailsOfSAT\\\" field-label=\\\"Other details of SAT\\\" place-holder=\\\"Other details of SAT\\\">\\n        </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n      <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.customerEndEquipment\\\" [place-holder]=\\\"'Choose Customer End Equipment'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Customer End Equipment'\\\" [http-url]=\\\"'assets/data/order/mpls/customer_end_equipment.json'\\\" [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n</amexio-row>\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\" *ngIf=\\\"mPLSOrder.customerEndEquipment == '1'\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.equipmentType\\\" [place-holder]=\\\"'Choose Equipment Type'\\\" [data-reader]=\\\"'data'\\\" [field-label]=\\\"'Equipment Type'\\\" [http-url]=\\\"'assets/data/order/mpls/equipment_type.json'\\\" [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row>\\n<amexio-column size=\\\"12\\\">\\n    <amexio-checkbox-group [field-label]=\\\"'Airtel End Equipment'\\\"\\n    [data-reader]=\\\"'data'\\\"\\n    [display-field]=\\\"'primaryDisplay'\\\"\\n    [value-field]=\\\"'checked'\\\"\\n    (onSelection)=\\\"onAirtelEndEquipmentSelection($event)\\\"\\n    [horizontal]=\\\"true\\\"\\n    [http-method]=\\\"'get'\\\"\\n    [http-url]=\\\"'assets/data/order/mpls/airtel_end_equipment.json'\\\">\\n    </amexio-checkbox-group>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\" *ngIf=\\\"isRoutersQty\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.routersQty\\\" name=\\\"routersQty\\\" field-label=\\\"Routers Qty\\\" place-holder=\\\"Routers Qty\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"12\\\" *ngIf=\\\"isModemsQty\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.modemsQty\\\" name=\\\"modemsQty\\\" field-label=\\\"Modems Qty\\\" place-holder=\\\"Modems Qty\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"12\\\" *ngIf=\\\"isConvertersQty\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.convertersQty\\\" name=\\\"convertersQty\\\" field-label=\\\"Converters Qty\\\" place-holder=\\\"Converters Qty\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"12\\\" *ngIf=\\\"othersQty\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.othersQty\\\" name=\\\"othersQty\\\" field-label=\\\"Others Qty\\\" place-holder=\\\"Others Qty\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n      <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.customerEndInterface\\\"\\n      [place-holder]=\\\"'Choose Customer End Interface'\\\" [data-reader]=\\\"'data'\\\"\\n      [field-label]=\\\"'Customer End Interface'\\\"\\n      [http-url]=\\\"'assets/data/order/mpls/customer_end_interface.json'\\\"\\n      [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\" *ngIf=\\\"mPLSOrder.customerEndInterface=='5'\\\">\\n    <amexio-text-input [(ngModel)]=\\\"mPLSOrder.detailsOfcei\\\" name=\\\"detailsOfcei\\\" field-label=\\\"Details of Customer End Interface\\\" place-holder=\\\"Details of Customer End Interface\\\">\\n      </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"4\\\">\\n      <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.dualPOPService\\\"\\n      [place-holder]=\\\"'Choose Dual POP Service'\\\" [data-reader]=\\\"'data'\\\"\\n      [field-label]=\\\"'Dual POP Service'\\\"\\n      [http-url]=\\\"'assets/data/order/mpls/managed_mpls.json'\\\"\\n      [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"4\\\" *ngIf=\\\"mPLSOrder.dualPOPService=='1'\\\">\\n    <amexio-text-input [(ngModel)]=\\\"mPLSOrder.airtelPOP1\\\" name=\\\"airtelPOP1\\\" field-label=\\\"Airtel POP 1\\\" place-holder=\\\"Airtel POP 1\\\">\\n      </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"4\\\" *ngIf=\\\"mPLSOrder.dualPOPService=='1'\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.airtelPOP2\\\" name=\\\"airtelPOP2\\\" field-label=\\\"Airtel POP 2\\\" place-holder=\\\"Airtel POP 2\\\">\\n          </amexio-text-input>\\n        </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n      <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.primaryAccessServiceProvider\\\"\\n      [place-holder]=\\\"'Choose Primary ASP'\\\" [data-reader]=\\\"'data'\\\"\\n      [field-label]=\\\"'Primary Access Service Provider'\\\"\\n      [http-url]=\\\"'assets/data/order/mpls/primary_asp.json'\\\"\\n      [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.primaryBandwidth\\\" name=\\\"primaryBandwidth\\\" field-label=\\\"Primary Bandwidth\\\" place-holder=\\\"Primary Bandwidth\\\">\\n          </amexio-text-input>\\n        </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n      <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.primaryBandwidthUOM\\\"\\n      [place-holder]=\\\"'Choose Primary Bandwidth UOM'\\\" [data-reader]=\\\"'data'\\\"\\n      [field-label]=\\\"'Primary Bandwidth UOM'\\\"\\n      [http-url]=\\\"'assets/data/order/mpls/uom.json'\\\"\\n      [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.primaryAccessDistance\\\" name=\\\"primaryAccessDistance\\\" field-label=\\\"Primary Access Distance (in KM)\\\" place-holder=\\\"Primary Access Distance (in KM)\\\">\\n          </amexio-text-input>\\n        </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n      <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.secondaryAccessServiceProvider\\\"\\n      [place-holder]=\\\"'Choose Secondary ASP'\\\" [data-reader]=\\\"'data'\\\"\\n      [field-label]=\\\"'Secondary Access Service Provider'\\\"\\n      [http-url]=\\\"'assets/data/order/mpls/primary_asp.json'\\\"\\n      [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n            [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.secondaryLastmileRequired\\\"\\n        [place-holder]=\\\"'Choose Secondary Lastmile Required'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'Secondary Lastmile Required'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/secondary_slr.json'\\\"\\n        [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n        [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n          </amexio-dropdown>\\n        </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.secondaryBandwidth\\\" name=\\\"secondaryBandwidth\\\"\\n        field-label=\\\"Secondary Bandwidth\\\"\\n        place-holder=\\\"Secondary Bandwidth\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.secondaryBandwidthUOM\\\"\\n        [place-holder]=\\\"'Choose Secondary Bandwidth UOM'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'Secondary Bandwidth UOM'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/uom.json'\\\"\\n        [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n        [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n          </amexio-dropdown>\\n        </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.secondaryAccessDistance\\\" name=\\\"secondaryAccessDistance\\\"\\n        field-label=\\\"Secondary Access Distance (in KM)\\\"\\n        place-holder=\\\"Secondary Access Distance (in KM)\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.secondLinkusedonLoadSharingbasis\\\"\\n        [place-holder]=\\\"'Choose Second Link Load Sharing basis'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'Second Link used on Load Sharing basis'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/secondary_slr.json'\\\"\\n        [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n        [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n          </amexio-dropdown>\\n        </amexio-column>\\n</amexio-row>\\n\\n<amexio-row *ngIf=\\\"mPLSOrder.secondLinkusedonLoadSharingbasis == '1'\\\">\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.secondaryAccessDistance\\\" name=\\\"secondaryAccessDistance\\\"\\n        field-label=\\\"Secondary Access Distance (in KM)\\\"\\n        place-holder=\\\"Secondary Access Distance (in KM)\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.secondLinkusedonLoadSharingbasis\\\"\\n        [place-holder]=\\\"'Choose Second Link Load Sharing basis'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'Second Link used on Load Sharing basis'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/secondary_slr.json'\\\"\\n        [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n        [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n          </amexio-dropdown>\\n        </amexio-column>\\n</amexio-row>\\n\\n\\n\\n<amexio-row >\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.parallelBandwidth\\\" name=\\\"parallelBandwidth\\\"\\n        field-label=\\\"Parallel Bandwidth\\\"\\n        place-holder=\\\"Parallel Bandwidth\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.parallelBandwidthUOM\\\"\\n        [place-holder]=\\\"'Choose Parallel Bandwidth UOM'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'Second Parallel Bandwidth UOM'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/uom.json'\\\"\\n        [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n        [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n          </amexio-dropdown>\\n        </amexio-column>\\n</amexio-row>\\n\\n<amexio-row >\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.mPLSPortSize\\\" name=\\\"mPLSPortSize\\\"\\n        field-label=\\\"MPLS Port Size\\\"\\n        place-holder=\\\"MPLS Port Size\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.mPLSPortSize\\\"\\n        [place-holder]=\\\"'Choose MPLS Port Size UOM'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'Second MPLS Port Size UOM'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/uom.json'\\\"\\n        [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n        [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n          </amexio-dropdown>\\n        </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row >\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.mPLSPortSize\\\" name=\\\"mPLSPortSize\\\"\\n        field-label=\\\"MPLS Port Size\\\"\\n        place-holder=\\\"MPLS Port Size\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.mPLSPortSizeUOM\\\"\\n        [place-holder]=\\\"'Choose MPLS Port Size UOM'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'Second MPLS Port Size UOM'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/uom.json'\\\"\\n        [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n        [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n          </amexio-dropdown>\\n        </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row >\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.totalMPLSBandwith\\\" name=\\\"totalMPLSBandwith\\\"\\n        field-label=\\\"Total MPLS Bandwith\\\"\\n        place-holder=\\\"Total MPLS Bandwith\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-dropdown [(ngModel)]=\\\"mPLSOrder.totalMPLSBandwidthUOM\\\"\\n        [place-holder]=\\\"'Choose Total MPLS Bandwidth UOM'\\\" [data-reader]=\\\"'data'\\\"\\n        [field-label]=\\\"'Total MPLS Bandwidth UOM'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/uom.json'\\\"\\n        [http-method]=\\\"'get'\\\" [display-field]=\\\"'primaryDisplay'\\\"\\n        [search]=\\\"true\\\" [value-field]=\\\"'primaryKey'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n        </amexio-dropdown>\\n      </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.classwiseBandwidth\\\" name=\\\"classwiseBandwidth\\\"\\n        field-label=\\\"Classwise Bandwidth\\\" disabled=\\\"true\\\"\\n        place-holder=\\\"Classwise Bandwidth\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n\\n<amexio-row>\\n    <amexio-column size=\\\"4\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.premiumRT\\\" name=\\\"premiumRT\\\"\\n        field-label=\\\"Premium RT\\\"\\n        place-holder=\\\"Premium RT\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"4\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.premiumNRT\\\" name=\\\"premiumNRT\\\"\\n        field-label=\\\"Premium NRT\\\"\\n        place-holder=\\\"Premium NRT\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"4\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.business\\\" name=\\\"business\\\"\\n        field-label=\\\"Business\\\"\\n        place-holder=\\\"Business\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.standard\\\" name=\\\"standard\\\"\\n        field-label=\\\"Standard\\\"\\n        place-holder=\\\"Standard\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\">\\n        <amexio-text-input [(ngModel)]=\\\"mPLSOrder.smartVCPRT\\\" name=\\\"smartVCPRT\\\"\\n        field-label=\\\"Smart VC PRT\\\"\\n        place-holder=\\\"Smart VC PRT\\\">\\n          </amexio-text-input>\\n    </amexio-column>\\n\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-checkbox-group [field-label]=\\\"'Premium RT'\\\"\\n        [data-reader]=\\\"'data'\\\"\\n        [display-field]=\\\"'primaryDisplay'\\\"\\n        [value-field]=\\\"'checked'\\\"\\n        (onSelection)=\\\"onPremiumRTSelection($event)\\\"\\n        [horizontal]=\\\"true\\\"\\n        [http-method]=\\\"'get'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/premium_rt.json'\\\">\\n        </amexio-checkbox-group>\\n    </amexio-column>\\n</amexio-row>\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-checkbox-group [field-label]=\\\"'Premium NRT'\\\"\\n        [data-reader]=\\\"'data'\\\"\\n        [display-field]=\\\"'primaryDisplay'\\\"\\n        [value-field]=\\\"'checked'\\\"\\n        (onSelection)=\\\"onPremiumNRTSelection($event)\\\"\\n        [horizontal]=\\\"true\\\"\\n        [http-method]=\\\"'get'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/premium_rt.json'\\\">\\n        </amexio-checkbox-group>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-checkbox-group [field-label]=\\\"'Business'\\\"\\n        [data-reader]=\\\"'data'\\\"\\n        [display-field]=\\\"'primaryDisplay'\\\"\\n        [value-field]=\\\"'checked'\\\"\\n        (onSelection)=\\\"onBusinessSelection($event)\\\"\\n        [horizontal]=\\\"true\\\"\\n        [http-method]=\\\"'get'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/premium_rt.json'\\\">\\n        </amexio-checkbox-group>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-checkbox-group [field-label]=\\\"'Standard'\\\"\\n        [data-reader]=\\\"'data'\\\"\\n        [display-field]=\\\"'primaryDisplay'\\\"\\n        [value-field]=\\\"'checked'\\\"\\n        (onSelection)=\\\"onStandardSelection($event)\\\"\\n        [horizontal]=\\\"true\\\"\\n        [http-method]=\\\"'get'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/premium_rt.json'\\\">\\n        </amexio-checkbox-group>\\n    </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n    <amexio-column size=\\\"12\\\">\\n        <amexio-checkbox-group [field-label]=\\\"'Smart VC PRT'\\\"\\n        [data-reader]=\\\"'data'\\\"\\n        [display-field]=\\\"'primaryDisplay'\\\"\\n        [value-field]=\\\"'checked'\\\"\\n        (onSelection)=\\\"onSmartVCPRTSelection($event)\\\"\\n        [horizontal]=\\\"true\\\"\\n        [http-method]=\\\"'get'\\\"\\n        [http-url]=\\\"'assets/data/order/mpls/premium_rt.json'\\\">\\n        </amexio-checkbox-group>\\n    </amexio-column>\\n</amexio-row>\\n\"","module.exports = \"\\n<amexio-card [body-height]=\\\"80\\\"  [header]=\\\"true\\\" [footer]=\\\"true\\\">\\n  <amexio-header>\\n    Order Details\\n  </amexio-header>\\n  <amexio-body>\\n    <ng-container *ngIf=\\\"_dataService.order.productType == '1'\\\">\\n      <internet-order></internet-order>\\n    </ng-container>\\n    <ng-container  *ngIf=\\\"_dataService.order.productType == '2'\\\">\\n      <mpls-order></mpls-order>\\n    </ng-container>\\n  </amexio-body>\\n  <amexio-action>\\n    <amexio-toolbar>\\n      <amexio-toolbar-item position-right >\\n\\n        <amexio-button [label]=\\\"'Proceed To Charges'\\\"   [tooltip]=\\\"'Proceed'\\\"  [icon]=\\\"'fa fa-paper-plane'\\\" (onClick)=\\\"proceedToChargesHandle()\\\"\\n                       [type]=\\\"'theme-color'\\\"></amexio-button>\\n\\n      </amexio-toolbar-item>\\n    </amexio-toolbar>\\n  </amexio-action>\\n</amexio-card>\\n\"","/**\n * Created by dattaram on 26/4/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {DataService} from \"../../../services/data.service\";\nimport {Router} from \"@angular/router\";\nimport {HttpService} from \"../../../services/http.service\";\n\n@Component({\n  selector: 'order-details',\n  templateUrl: 'order-details.component.html'\n})\n\nexport class OrderDetailsComponent implements OnInit {\n  constructor(private _httpService: HttpService,\n              private _router: Router,\n              public _dataService: DataService) {\n  }\n\n  ngOnInit() {\n  }\n\n  proceedToChargesHandle() {\n    this._router.navigate(['home/chargecal']);\n  }\n}\n","module.exports = \"\\n\\n<amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'center'\\\">\\n  <amexio-layout-item [fit]=\\\"true\\\">\\n    <amexio-layout-columns [fit]=\\\"true\\\" [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'center'\\\">\\n      <amexio-layout-item >\\n        <amexio-card [header]=\\\"false\\\"\\n                     [footer]=\\\"true\\\"\\n                     [footer-align]=\\\"'center'\\\">\\n          <amexio-body>\\n            <amexio-row>\\n              <amexio-column [size]=\\\"12\\\">\\n                <amexio-text-input field-label=\\\"Party Name\\\"\\n                                   name=\\\"name\\\"\\n                                   [(ngModel)]=\\\"partyName\\\"\\n                                   place-holder=\\\"Enter party name\\\"\\n                                   (input)=\\\"onInputHandle('P', partyName)\\\"\\n                                   icon-feedback=\\\"true\\\"\\n                                   [disabled]=\\\"partyflag\\\">\\n                </amexio-text-input>\\n              </amexio-column>\\n              <amexio-column [size]=\\\"12\\\">\\n                <amexio-label [size]=\\\"'medium-bold'\\\">OR</amexio-label>\\n              </amexio-column>\\n              <amexio-column [size]=\\\"12\\\">\\n                <amexio-text-input field-label=\\\"Account No\\\"\\n                                   name=\\\"name\\\"\\n                                   [(ngModel)]=\\\"accountNo\\\"\\n                                   (input)=\\\"onInputHandle('A', accountNo)\\\"\\n                                   place-holder=\\\"Enter account no\\\"\\n                                   icon-feedback=\\\"true\\\"\\n                                   [disabled]=\\\"accflag\\\">\\n                </amexio-text-input>\\n              </amexio-column>\\n            </amexio-row>\\n          </amexio-body>\\n          <amexio-action >\\n            <amexio-button [label]=\\\"'Search Customer'\\\" [type]=\\\"'primary'\\\" (onClick)=\\\"searchHandle()\\\"></amexio-button>\\n          </amexio-action>\\n        </amexio-card>\\n      </amexio-layout-item>\\n    </amexio-layout-columns>\\n  </amexio-layout-item>\\n</amexio-layout-columns>\\n\"","/**\n * Created by dattaram on 25/4/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {HttpService} from '../../services/http.service';\nimport {Router} from '@angular/router';\nimport { CUST_BASE_URL } from 'src/app/constants/app.constant';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'search-customer',\n  templateUrl: 'search-customer.component.html'\n})\n\nexport class SearchCustomerComponent implements OnInit {\n\n  partyName: string;\n  accountNo: string;\n  partyflag = false;\n  accflag = false;\n\n  constructor(private _httpService: HttpService, private _router: Router, private _dataService: DataService) {\n  }\n\n  ngOnInit() {\n  }\n\n  searchHandle() {\n    this._dataService.showLoader = true;\n   const requestJson: any = {\n    'accountNo': '',\n   'partyName': ''\n   };\n    if (this.accflag) {\n     requestJson.accountNo = '-1';\n     requestJson.partyName = this.partyName;\n\n    } else {\n       requestJson.partyName = '-1';\n     requestJson.accountNo = this.accountNo;\n    }\n     let response: any;\n      this._httpService.fetch(CUST_BASE_URL + requestJson.partyName + '/' + requestJson.accountNo, 'get').subscribe(\n        (res: any) => {\n          response = res;\n        },\n        (error: any) => {\n          this._dataService.showLoader = false;\n         console.log('error', error);\n        },\n        () => {\n          this._dataService.showLoader = false;\n          if (response.success) {\n            this._dataService.order.customerDemographics = response.response.data;\n           this._router.navigate(['home/neworder']);\n          }\n\n        }\n      );\n\n\n  }\n  onInputHandle(type: string) {\n  if (type == 'P' && this.partyName !== '') {\n    this.accflag = true;\n  } else if (type == 'A' && this.accountNo !== '') {\n     this.partyflag = true;\n  } else if (type == 'P' && this.partyName == '') {\n     this.accflag = false;\n  } else if (type == 'A' && this.accountNo == '') {\n    this.partyflag = false;\n  }\n  }\n}\n","/**\n * Created by dattaram on 25/4/19.\n */\n  const BASE_URL = '';\n  export const SERVICE_URL = {\n\n  };\n\nexport const AUTH_URL = 'https://restapi.amexio.org:9890/rinashell/auth/validate';\nexport const CUST_BASE_URL = 'https://restapi.amexio.org:9890/rinashell/customer/sdpprofile/105/';\n\n\n","export class CommanChargesModel {\n\n    totalOrderValue: string;\n    currency: string;\n    currencyDetails: string;\n    billingCycle: string;\n    billFormat: string;\n    taxation:string;\n    standardReason:string;\n    noticePeriod:string;\n    Comments:string;\n\n    constructor() {\n\n    this.totalOrderValue= \"\";\n    this.currency=  \"\";\n    this.currencyDetails = \"\";\n    this.billingCycle=  \"\";\n    this.taxation= \"\";\n    this.standardReason = \"\";\n    this.noticePeriod = \"\";\n    this.Comments = \"\";\n\n    }\n}\n","export class InternetChargesModel {\n//internetBW\n    internetBWOTC: number;\n    internetARC: number;\n    internetBWOT:number;\n    internetBW : number;\n\n//port\n  portChargesOTC:number;\n  portChargesARC: number;\n  portChargesOT:number;\n  portCharges: number;\n\n//off peak\n    offPeakHoursBWOTC: number;\n    offPeakHoursBWARC: number;\n    offPeakHoursBWOT: number;\n    offPeakHoursBW:number;\n\n//primarylast\n    primaryLastMileOTC: number;\n    primaryLastMileARC: number;\n    primaryLastMileOT: number;\n    primaryLastMile:number;\n\n//  secondarylast\n     secondaryLastMileOTC:number;\n     secondaryLastMileARC: number;\n     secondaryLastMileOT: number;\n     secondaryLastMile:number;\n//ddos\n     dDoSOTC:number;\n     dDoSARC: number;\n     dDoSOT: number;\n     dDoS:number;\n//router\n     routerOTC:number;\n     routerARC: number;\n     routerOT: number;\n     router:number;\n//modem\n     modemOTC:number;\n     modemARC: number;\n     modemOT: number;\n     modem:number;\n//converter\nconverterOTC:number;\nconverterARC: number;\nconverterOT: number;\nconverter:number;\n\n//ddoscpe\ndDosCpeOTC:number;\ndDosCpeARC: number;\ndDosCpeOT: number;\ndDosCpe:number;\n\n//Other Hardware\n\notherHardwareOTC:number;\notherHardwareARC: number;\notherHardwareOT: number;\notherHardware:number;\n\n//hardwareAMC\nhardwareAMCOTC:number;\nhardwareAMCARC: number;\nhardwareAMCOT: number;\nhardwareAMC:number;\n//linkmgmt\nlinkMgmtChargesOTC:number;\nlinkMgmtChargesARC: number;\nlinkMgmtChargesOT: number;\nlinkMgmtCharges:number;\n\n//managed services\nmanagedSerivcesOTC:number;\nmanagedSerivcesARC: number;\nmanagedSerivcesOT: number;\nmanagedSerivces:number;\n\n//other charges\notherChargesOTC:number;\notherChargesARC: number;\notherChargesOT: number;\notherCharges:number;\n\nminCommittedBWMRC:string;\nminCommittedBWARC:string;\nburstBWMRC:string;\nburstBWARC:string;\nvolumeCharges:string;\nburstCharges:string;\n    constructor() {\n    this.internetBWOTC= null;\n    this.internetARC= null;\n    this.internetBWOT = null;\n\n    this.portChargesOTC= null;\n    this.portChargesARC= null;\n    this.portChargesOT = null;\n\n    this.offPeakHoursBWOTC= null;\n    this.offPeakHoursBWARC= null;\n    this.offPeakHoursBWOT = null;\n\n    this.primaryLastMileOTC= null;\n    this.primaryLastMileARC= null;\n    this.primaryLastMileOT = null;\n\n    this.secondaryLastMileOTC= null;\n    this.secondaryLastMileARC= null;\n    this.secondaryLastMileOT = null;\n\n    this.dDoSOTC= null;\n    this.dDoSARC= null;\n    this.dDoSOT = null;\n\n    this.routerOTC= null;\n    this.routerARC= null;\n    this.routerOT = null;\n\n    this.modemOTC= null;\n    this.modemARC= null;\n    this.modemOT = null;\n\n    this.converterOTC= null;\n    this.converterARC= null;\n    this.converterOT = null;\n\n    this.dDosCpeOTC= null;\n    this.dDosCpeARC= null;\n    this.dDosCpeOT = null;\n\n    this.otherHardwareOTC= null;\n    this.otherHardwareARC= null;\n    this.otherHardwareOT = null;\n\n    this.hardwareAMCOTC= null;\n    this.hardwareAMCARC= null;\n    this.hardwareAMCOT = null;\n\n\n    this.linkMgmtChargesOTC= null;\n    this.linkMgmtChargesARC= null;\n    this.linkMgmtChargesOT = null;\n\n    this.managedSerivcesOTC= null;\n    this.managedSerivcesARC= null;\n    this.managedSerivcesOT = null;\n\n    this.otherChargesOTC= null;\n    this.otherChargesARC= null;\n    this.otherChargesOT = null;\n\n    this.minCommittedBWMRC =\"\";\n    this.minCommittedBWARC=\"\";\n    this.burstBWMRC=\"\";\n    this.burstBWARC=\"\";\n    this.volumeCharges=\"\";\n    this.burstCharges=\"\";\n\n    }\n\n    get _internetBW():number{\n     return this.calculateIntenetCharges(this.internetBWOTC,this.internetARC,this.internetBWOT);\n    }\n\n    get _portCharges():number {\n        return this.calculateIntenetCharges(this.portChargesOTC,this.portChargesARC,this.portChargesOT);\n    }\n\n\n    get _offPeakHoursBW():number {\n        return this.calculateIntenetCharges(this.offPeakHoursBWOTC,this.offPeakHoursBWARC,this.offPeakHoursBWOT);\n    }\n\n    get _primaryLastMile():number {\n        return this.calculateIntenetCharges(this.primaryLastMileOTC,this.primaryLastMileARC,this.primaryLastMileOT);\n    }\n\n    get _secondaryLastMile():number {\n        return this.calculateIntenetCharges(this.secondaryLastMileOTC,this.secondaryLastMileARC,this.secondaryLastMileOT);\n    }\n\n    get _dDoS():number {\n        return this.calculateIntenetCharges(this.dDoSOTC,this.dDoSARC,this.dDoSOT);\n    }\n    get _router():number {\n        return this.calculateIntenetCharges(this.routerOTC,this.routerARC,this.routerOT);\n    }\n    get _modem():number {\n        return this.calculateIntenetCharges(this.modemOTC,this.modemARC,this.modemOT);\n    }\n\n    get _converter():number {\n        return this.calculateIntenetCharges(this.converterOTC,this.converterARC,this.converterOT);\n    }\n    get _dDosCpe():number {\n        return this.calculateIntenetCharges(this.dDosCpeOTC,this.dDosCpeARC,this.dDosCpeOT);\n    }\n\n    get _otherHardware():number {\n        return this.calculateIntenetCharges(this.otherHardwareOTC,this.otherHardwareARC,this.otherHardwareOT);\n    }\n    get _hardwareAMC():number {\n        return this.calculateIntenetCharges(this.hardwareAMCOTC,this.hardwareAMCARC,this.hardwareAMCOT);\n    }\n    get _linkMgmtCharges():number {\n        return this.calculateIntenetCharges(this.linkMgmtChargesOTC,this.linkMgmtChargesARC,this.linkMgmtChargesOT);\n    }\n    get _managedSerivces():number {\n        return this.calculateIntenetCharges(this.managedSerivcesOTC,this.managedSerivcesARC,this.managedSerivcesOT);\n    }\n\n    get _otherCharges():number {\n        return this.calculateIntenetCharges(this.otherChargesOTC,this.otherChargesARC,this.otherChargesOT);\n    }\n    private calculateIntenetCharges(a: number,b:number,c:number) : number {\n        return  a + (b * c);\n\n    }\n }\n","export class MplsChargesModel {\n    //Installation & Commissioning\n    installationCommissioningOTC: number;\n    installationCommissioningARC: number;\n    installationCommissioningOT:number;\n    installationCommissioning : number;\n    \n    //Primary MPLS Bandwidth\n    primaryMPLSBandwidthOTC:number;\n    primaryMPLSBandwidthARC: number;\n    primaryMPLSBandwidthOT:number;\n    primaryMPLSBandwidth: number;\n    \n    //Secondary MPLS Bandwidth\n    secondaryMPLSBandwidthOTC: number;\n    secondaryMPLSBandwidthARC: number;\n    secondaryMPLSBandwidthOT: number;\n    secondaryMPLSBandwidth:number;\n    \n    //Last Mile Bandwidth\n    lastMileBandwidthOTC: number;\n    lastMileBandwidthARC: number;\n    lastMileBandwidthOT: number;\n    lastMileBandwidth:number;\n      \n    //  secondarylast\n         secondaryLastMileOTC:number;\n         secondaryLastMileARC: number;\n         secondaryLastMileOT: number;\n         secondaryLastMile:number;\n\n     //router\n     routerOTC:number;\n     routerARC: number;\n     routerOT: number;\n     router:number;\n\n\n    //modem\n    modemOTC:number;\n    modemARC: number;\n    modemOT: number;\n    modem:number;\n\n    \n    //Others\n    \n    othersOTC:number;\n    othersARC: number;\n    othersOT: number;\n    others:number; \n\n    \n    //managed services\n    managedSerivcesOTC:number;\n    managedSerivcesARC: number;\n    managedSerivcesOT: number;\n    managedSerivces:number;\n    \n    //other charges\n    otherChargesOTC:number;\n    otherChargesARC: number;\n    otherChargesOT: number;\n    otherCharges:number;\n\n        constructor() {\n        this.installationCommissioningOTC= null;\n        this.installationCommissioningARC= null;\n        this.installationCommissioningOT = null;\n    \n        this.primaryMPLSBandwidthOTC= null;\n        this.primaryMPLSBandwidthARC= null;\n        this.primaryMPLSBandwidthOT = null;\n    \n        this. secondaryMPLSBandwidthOTC= null;\n        this. secondaryMPLSBandwidthARC= null;\n        this. secondaryMPLSBandwidthOT = null;\n    \n        this.lastMileBandwidthOTC= null;\n        this.lastMileBandwidthARC= null;\n        this.lastMileBandwidthOT = null;\n    \n        this.secondaryLastMileOTC= null;\n        this.secondaryLastMileARC= null;\n        this.secondaryLastMileOT = null;\n\n        this.routerOTC= null;\n        this.routerARC= null;\n        this.routerOT = null;\n    \n        this.modemOTC= null;\n        this.modemARC= null;\n        this.modemOT = null;\n\n\n    this.othersOTC= null;\n    this.othersARC= null;\n    this.othersOT = null;\n       \n        this.managedSerivcesOTC= null;\n        this.managedSerivcesARC= null;\n        this.managedSerivcesOT = null;\n    \n        this.otherChargesOTC= null;\n        this.otherChargesARC= null;\n        this.otherChargesOT = null;\n    \n    \n        }\n    \n        get _installationCommissioning() :number{\n         return this.calculateMlpsCharges(this.installationCommissioningOTC,this.installationCommissioningARC,this.installationCommissioningOT);\n        }\n    \n        get _primaryMPLSBandwidth():number {\n            return this.calculateMlpsCharges(this.primaryMPLSBandwidthOTC,this.primaryMPLSBandwidthARC,this.primaryMPLSBandwidthOT);\n        }\n    \n       \n        get _secondaryMPLSBandwidth():number {\n            return this.calculateMlpsCharges(this.secondaryMPLSBandwidthOTC,this. secondaryMPLSBandwidthARC,this. secondaryMPLSBandwidthOT);\n        } \n    \n        get _lastMileBandwidth():number {\n            return this.calculateMlpsCharges(this.lastMileBandwidthOTC,this.lastMileBandwidthARC,this.lastMileBandwidthOT);\n        } \n    \n        get _secondaryLastMile():number {\n            return this.calculateMlpsCharges(this.secondaryLastMileOTC,this.secondaryLastMileARC,this.secondaryLastMileOT);\n        } \n\n        get _router():number {\n            return this.calculateMlpsCharges(this.routerOTC,this.routerARC,this.routerOT);\n        }\n    \n        get _modem():number {\n            return this.calculateMlpsCharges(this.modemOTC,this.modemARC,this.modemOT);\n        }\n\n    \n        get _others():number {\n            return this.calculateMlpsCharges(this.othersOTC,this.othersARC,this.othersOT);\n        }\n       \n        get _managedSerivces():number {\n            return this.calculateMlpsCharges(this.managedSerivcesOTC,this.managedSerivcesARC,this.managedSerivcesOT);\n        }\n    \n        get _otherCharges():number {\n            return this.calculateMlpsCharges(this.otherChargesOTC,this.otherChargesARC,this.otherChargesOT);\n        }\n        private calculateMlpsCharges(a: number,b:number,c:number) : number {\n            return  a + (b * c);\n    \n        }\n     }\n    ","export class NldAndLocalLoopModel {\n    //NLD / Local Loop Bandwidth\n    nLDLocalLoopBandwidthOTC: number;\n    nLDLocalLoopBandwidthARC: number;\n    nLDLocalLoopBandwidthOT:number;\n    nLDLocalLoopBandwidth : number;\n    //Modem / Convertor\n    modemConvertorOTC:number;\n    modemConvertorARC: number;\n    modemConvertorOT:number;\n    modemConvertor: number;\n\n     //router\n     routerOTC:number;\n     routerARC: number;\n     routerOT: number;\n     router:number;\n\n    //Other Hardware\n\n otherHardwareOTC:number;\n otherHardwareARC: number;\n otherHardwareOT: number;\n otherHardware:number; \n\n    // fibreExtensionCharges \n    fibreExtensionChargesOTC: number;\n    fibreExtensionChargesARC: number;\n    fibreExtensionChargesOT: number;\n    fibreExtensionCharges :number;\n   \n    //Last Mile Bandwidth\n    installationChargesOTC: number;\n    installationChargesARC: number;\n    installationChargesOT: number;\n    installationCharges:number;\n\n     //other charges\n     otherChargesOTC:number;\n     otherChargesARC: number;\n     otherChargesOT: number;\n     otherCharges:number;\n\n        constructor() {\n        this. nLDLocalLoopBandwidthOTC= null;\n        this.nLDLocalLoopBandwidthARC= null;\n        this.nLDLocalLoopBandwidthOT = null;\n    \n        this.modemConvertorOTC= null;\n        this.modemConvertorARC= null;\n        this.modemConvertorOT = null;\n\n\n        this.routerOTC= null;\n        this.routerARC= null;\n        this.routerOT = null;\n\n        this.otherHardwareOTC= null;\n        this.otherHardwareARC= null;\n        this.otherHardwareOT = null;\n    \n        this.fibreExtensionChargesOTC= null;\n        this.fibreExtensionChargesARC= null;\n        this.fibreExtensionChargesOT = null;\n    \n        this.installationChargesOTC= null;\n        this.installationChargesARC= null;\n        this.installationChargesOT = null;\n\n        this.otherChargesOTC= null;\n        this.otherChargesARC= null;\n        this.otherChargesOT = null;\n    \n        }\n    \n        get _nLDLocalLoopBandwidth() :number{\n         return this.calculateNldAndLocalLoopCharges(this.nLDLocalLoopBandwidthOTC,this.nLDLocalLoopBandwidthARC,this.nLDLocalLoopBandwidthOT);\n        }\n    \n        get _modemConvertor():number {\n            return this.calculateNldAndLocalLoopCharges(this.modemConvertorOTC,this.modemConvertorARC,this.modemConvertorOT);\n        }\n    \n        get _router():number {\n            return this.calculateNldAndLocalLoopCharges(this.routerOTC,this.routerARC,this.routerOT);\n        }\n\n        get _otherHardware():number {\n            return this.calculateNldAndLocalLoopCharges(this.otherHardwareOTC,this.otherHardwareARC,this.otherHardwareOT);\n        } \n    \n        get _fibreExtensionCharges():number {\n            return this.calculateNldAndLocalLoopCharges(this.fibreExtensionChargesOTC,this.fibreExtensionChargesARC,this.fibreExtensionChargesOT);\n        } \n    \n        get _installationCharges():number {\n            return this.calculateNldAndLocalLoopCharges(this.installationChargesOTC,this.installationChargesARC,this.installationChargesOT);\n        } \n\n        get _otherCharges():number {\n            return this.calculateNldAndLocalLoopCharges(this.otherChargesOTC,this.otherChargesARC,this.otherChargesOT);\n        }\n        private calculateNldAndLocalLoopCharges(a: number,b:number,c:number) : number {\n            return  a + (b * c);\n    \n        }\n     }\n    ","export class ContactDetailsModel {\n    addressType: string;\n    contactType: string;\n    salutation: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    cellNo:string;\n    fax:string;\n    address1:string;\n    address2:string;\n    address3:string;\n    cityName:string;\n    pin:string;\n    countryName:string;\n\n\n\n\n    constructor() {\n    this.addressType = \"\";\n    this.contactType= \"\";\n    this.salutation=  \"\";\n    this.firstName = \"\";\n    this.lastName=  \"\";\n    this.email= \"\";\n    this.cellNo = \"\";\n    this.fax = \"\";\n    this.address1 = \"\";\n    this.address2 = \"\";\n    this.address3 = \"\";\n    this.cityName = \"\";\n    this.pin = \"\";\n    this.countryName = \"\";\n\n    }\n}\n","\n/**\n * Created by dattaram on 11/4/19.\n */\n export class LoginModel {\n   userId: string;\n   password: string;\n   constructor() {\n     this.userId = 'asdpadmin';\n     this.password = 'asdpadmin';\n   }\n}\n","import {ContactDetailsModel} from \"./contactdetails.model\";\n/**\n * Created by dattaram on 25/4/19.\n */\nexport class Order {\n  productType: string;\n  productName: string;\n  customerDemographics: any;\n  contactAdrress: ContactDetailsModel[];\n\n}\n","export class CommonOrderModel {\npoNo: string;\npoDate: Date;\npoRfsDate: Date;\nlastMileFeasibility: string;\nlastMileFeasibilityRequesID: string;\n}\n","import { CommonOrderModel } from './common.order.model';\nexport class InternetOrder extends CommonOrderModel {\n orderType: string;\n serviceType: string;\n otherServiceTypeDetails:string;\n changeOrderCircuitID:string;\n portType:string;\n billingTypeforMultipleBurstablePorts:string;\n committedBandwidth:string;\n uom:string;\n ratio:string;\n airtelPOP1:string;\n airtelPOP2:string;\n dDoSCPERequired:string;\n dDoSCPEprovidedby:string;\n webReporting:string;\n configurationManagement:string;\n proactiveMonitoring:string;\n portBW:string;\n uOMPortBW:string;\n committedVolumeMonth:string;\n uOMCommittedVolumeMonth:string;\n bW_24_7 :string;\n bW_uom_24_7:string;\n offPeakHoursBW:string;\n uOMOffPeakHoursBW:string;\n indiaBW:string;\n uOMIndiaBW:string;\n internationalBW:string;\n uOMInternationalBW:string;\n bW:string;\n uOMBW:string;\n dDoSCPEType:string;\n customerInterface:any[];\n otherDetails:string;\n cPEProvidedby:string;\n cPECommercials:string;\n cPEType:any[];\n cPMOtherDetails:string;\n quantityofRouters:string;\n quantityofModems:string;\n quantityofConverters:string;\n quantityofOther :string;\n remarks:string;\n\n primaryAccessRequired:string;\n primaryAccessArrangedBy:string;\n primaryAccessProviderName:string\n primaryAccessBandwidth:string;\n primaryUOMAccessBandwidth:string;\n primaryDistanceInKM:string;\n primaryMedia:string\n primaryTechnology:any[];\n primaryOtherTechnologyDetails:string;\n\n secondaryAccessRequired:string;\n secondaryAccessArrangedBy:string;\n secondaryAccessProviderName:string;\n secondaryAccessBandwidth:string;\n secondaryUOMAccessBandwidth:string;\n secondaryDistanceInKM:string;\n secondaryMedia:string;\n secondaryTechnology:any[];\n secondaryOtherTechnologyDetails:string;\n  constructor() {\n    super();\n    this.customerInterface = []\n    this.cPEType = [];\n    this.primaryTechnology = [];\n    this.secondaryTechnology = [];\n  }\n}\n","\nimport {CommonOrderModel} from \"./common.order.model\";\nexport class MPLSOrder extends CommonOrderModel {\n  servicesOrdered:string;\n  specifyNetworkDetails:string;\n  managedMPLS:string;\n  cEWebReporting:string;\n  proactiveManagement:string;\n  configurationManagement:string;\n  noOfSites:string;\n  remarks:string;\n  protocolEncapsulation:string;\n  otherDetailsonProtocolEncapsulation:string;\n  typeOfCoS:string;\n  typeOfOrder:string;\n  circuitID:string;\n  typeOfSite:string;\n  accessDetailsMedia:string;\n  primaryAccessTechnology:string;\n  otherdetailsOfPAT:string;\n  secondaryAccessTechnology:string;\n  otherdetailsOfSAT:string;\n  customerEndEquipment:string;\n  equipmentType:string;\n  airtelEndEquipment:any[];\n  routersQty:string;\n  modemsQty:string;\n  convertersQty:string;\n  othersQty:string;\n  customerEndInterface:string;\n  detailsOfcei:string;\n  dualPOPService:string;\n  airtelPOP1:string;\n  airtelPOP2:string;\n\n  primaryAccessServiceProvider:string;\n  primaryBandwidth:string;\n  primaryBandwidthUOM:string;\n  primaryAccessDistance:string;\n\n  secondaryAccessServiceProvider:string;\n  secondaryLastmileRequired:string;\n  secondaryBandwidth:string;\n  secondaryBandwidthUOM:string;\n  secondaryAccessDistance:string;\n  secondLinkusedonLoadSharingbasis:string;\n  parallelBandwidth:string;\n  parallelBandwidthUOM:string;\n  mPLSPortSize:string;\n  mPLSPortSizeUOM:string;\n  totalMPLSBandwith:string;\n  totalMPLSBandwidthUOM:string;\n  classwiseBandwidth = '100%';\n  premiumRT:string;\n  premiumNRT:string;\n  business:string;\n  standard:string;\n  smartVCPRT:string;\n  customerPremiumRT:any[];\n  customerPremiumNRT:any[];\n  customerBusiness:any[];\n  customerStandard:any[];\n  customerSmartVCPrt:any[];\n    constructor() {\n        super();\n        this.airtelEndEquipment = [];\n        this.customerPremiumRT=[];\n        this.customerPremiumNRT=[];\n        this.customerBusiness=[];\n        this.customerStandard=[];\n        this.customerSmartVCPrt=[];\n    }\n}\n","/**\n * Created by dattaram on 25/4/19.\n */\nimport {Injectable} from '@angular/core';\nimport {Order} from \"../models/order.model\";\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  order: Order;\n  showLoader = false;\n  constructor() {\n    this.order = new Order();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/index';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    fetch(serviceUrl: string, methodType: string): Observable<any> {\n        const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8').append('tokenid','eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ7XCJtdGVpZFwiOlwibXRlaWRcIixcInVzZXJJZFwiOlwidXNlcklkXCIsXCJhcHBTZXNzaW9uSWRcIjpcImFwcFNlc3Npb25JZFwiLFwicHJvamVjdElkXCI6XCJwcm9qZWN0SWRcIixcInByb2plY3RWZXJzaW9uSWRcIjpcInByb2plY3RWZXJzaW9uSWRcIn0iLCJleHAiOjE1NjMzMzk4ODl9.ao9jUzKAdNfFtNic5SS9xCWlwN84zvDojPZWvUFFN35iEpQXHv32c6tYFpobqU2ElW0Pcy5UZ8Jf48TtfRU1nQ');\n\n        if (methodType === 'post') {\n            return this.http.post(serviceUrl, methodType);\n        } else if (methodType === 'get') {\n            return this.http.get(serviceUrl,{headers});\n        }\n    }\n\n\n    post(serviceUrl: string, methodType: string, requestJson: any): Observable<any> {\n        const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8').append('tokenid','eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ7XCJtdGVpZFwiOlwibXRlaWRcIixcInVzZXJJZFwiOlwidXNlcklkXCIsXCJhcHBTZXNzaW9uSWRcIjpcImFwcFNlc3Npb25JZFwiLFwicHJvamVjdElkXCI6XCJwcm9qZWN0SWRcIixcInByb2plY3RWZXJzaW9uSWRcIjpcInByb2plY3RWZXJzaW9uSWRcIn0iLCJleHAiOjE1NjMzMzk4ODl9.ao9jUzKAdNfFtNic5SS9xCWlwN84zvDojPZWvUFFN35iEpQXHv32c6tYFpobqU2ElW0Pcy5UZ8Jf48TtfRU1nQ');\n        if (methodType === 'post') {\n            return this.http.post(serviceUrl, requestJson,{headers});\n        } else if (methodType === 'get') {\n            return this.http.get(serviceUrl);\n        }\n        \n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}